openapi: 3.1.0
info:
  title: My awesome API
  version: 0.0.1
  description: My awesome API created with ZenStack
  summary: Created with ZenStack
tags:
  - name: user
    description: User operations
  - name: project
    description: Project operations
  - name: test
    description: Test operations
  - name: testRun
    description: TestRun operations
  - name: testStep
    description: TestStep operations
  - name: testShare
    description: TestShare operations
  - name: organization
    description: Organization operations
  - name: organizationRole
    description: OrganizationRole operations
  - name: agent
    description: Agent operations
  - name: integration
    description: Integration operations
components:
  schemas:
    UserStatus:
      type: string
      enum:
        - INVITED
        - VERIFIED
    IntegrationType:
      type: string
      enum:
        - jira
        - linear
        - slack
        - discord
        - github
    UserScalarFieldEnum:
      type: string
      enum:
        - id
        - name
        - email
        - pictureUrl
        - tokenInvitation
        - stripeCustomerId
        - status
        - globalRole
        - password
        - createdAt
        - updatedAt
    ProjectScalarFieldEnum:
      type: string
      enum:
        - id
        - name
        - description
        - organizationId
        - createdAt
        - updatedAt
        - cookies
        - session
        - localStorage
    TestScalarFieldEnum:
      type: string
      enum:
        - id
        - name
        - description
        - url
        - naturalLanguageInput
        - status
        - isActive
        - projectId
        - createdById
        - createdAt
        - updatedAt
    TestRunScalarFieldEnum:
      type: string
      enum:
        - id
        - status
        - errorLog
        - reportUrl
        - testId
        - executedById
        - createdAt
        - updatedAt
    TestStepScalarFieldEnum:
      type: string
      enum:
        - id
        - order
        - action
        - status
        - screenshotUrl
        - testRunId
        - createdAt
        - updatedAt
    TestShareScalarFieldEnum:
      type: string
      enum:
        - id
        - permission
        - testId
        - userId
        - createdAt
        - updatedAt
    OrganizationScalarFieldEnum:
      type: string
      enum:
        - id
        - name
        - pictureUrl
        - stripeCustomerId
        - createdAt
        - updatedAt
    OrganizationRoleScalarFieldEnum:
      type: string
      enum:
        - id
        - name
        - createdAt
        - updatedAt
        - userId
        - organizationId
    AgentScalarFieldEnum:
      type: string
      enum:
        - id
        - provider
        - modelType
        - numAgents
        - isActive
        - anthropicApiKey
        - awsAccessKeyId
        - awsSecretAccessKey
        - awsSessionToken
        - awsRegion
        - apiEndpoint
        - apiKey
        - organizationId
        - createdAt
        - updatedAt
    IntegrationScalarFieldEnum:
      type: string
      enum:
        - id
        - type
        - name
        - config
        - createdAt
        - updatedAt
        - organizationId
    SortOrder:
      type: string
      enum:
        - asc
        - desc
    NullableJsonNullValueInput:
      type: string
      enum:
        - DbNull
        - JsonNull
    JsonNullValueInput:
      type: string
      enum:
        - JsonNull
    QueryMode:
      type: string
      enum:
        - default
        - insensitive
    NullsOrder:
      type: string
      enum:
        - first
        - last
    JsonNullValueFilter:
      type: string
      enum:
        - DbNull
        - JsonNull
        - AnyNull
    User:
      type: object
      properties:
        id:
          type: string
        name:
          oneOf:
            - type: "null"
            - type: string
        email:
          oneOf:
            - type: "null"
            - type: string
        pictureUrl:
          oneOf:
            - type: "null"
            - type: string
        tokenInvitation:
          oneOf:
            - type: "null"
            - type: string
        stripeCustomerId:
          oneOf:
            - type: "null"
            - type: string
        status:
          $ref: "#/components/schemas/UserStatus"
        globalRole:
          type: string
        password:
          oneOf:
            - type: "null"
            - type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        organizationRoles:
          type: array
          items:
            $ref: "#/components/schemas/OrganizationRole"
        testsAsCreatedBy:
          type: array
          items:
            $ref: "#/components/schemas/Test"
        testRunsAsExecutedBy:
          type: array
          items:
            $ref: "#/components/schemas/TestRun"
        testShares:
          type: array
          items:
            $ref: "#/components/schemas/TestShare"
      required:
        - id
        - status
        - globalRole
        - createdAt
        - updatedAt
    Project:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          oneOf:
            - type: "null"
            - type: string
        organizationId:
          type: string
        organization:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/Organization"
        tests:
          type: array
          items:
            $ref: "#/components/schemas/Test"
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        cookies:
          oneOf:
            - type: "null"
            - {}
        session:
          oneOf:
            - type: "null"
            - {}
        localStorage:
          oneOf:
            - type: "null"
            - {}
      required:
        - id
        - name
        - organizationId
        - createdAt
        - updatedAt
    Test:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          oneOf:
            - type: "null"
            - type: string
        url:
          oneOf:
            - type: "null"
            - type: string
        naturalLanguageInput:
          oneOf:
            - type: "null"
            - type: string
        status:
          type: string
        isActive:
          type: boolean
        projectId:
          type: string
        project:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/Project"
        createdById:
          type: string
        createdBy:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/User"
        testRuns:
          type: array
          items:
            $ref: "#/components/schemas/TestRun"
        testShares:
          type: array
          items:
            $ref: "#/components/schemas/TestShare"
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - id
        - name
        - status
        - isActive
        - projectId
        - createdById
        - createdAt
        - updatedAt
    TestRun:
      type: object
      properties:
        id:
          type: string
        status:
          type: string
        errorLog:
          oneOf:
            - type: "null"
            - type: string
        reportUrl:
          oneOf:
            - type: "null"
            - type: string
        testId:
          type: string
        test:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/Test"
        executedById:
          type: string
        executedBy:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/User"
        testSteps:
          type: array
          items:
            $ref: "#/components/schemas/TestStep"
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - id
        - status
        - testId
        - executedById
        - createdAt
        - updatedAt
    TestStep:
      type: object
      properties:
        id:
          type: string
        order:
          type: number
        action:
          type: string
        status:
          type: string
        screenshotUrl:
          oneOf:
            - type: "null"
            - type: string
        testRunId:
          type: string
        testRun:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/TestRun"
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - id
        - order
        - action
        - status
        - testRunId
        - createdAt
        - updatedAt
    TestShare:
      type: object
      properties:
        id:
          type: string
        permission:
          type: string
        testId:
          type: string
        test:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/Test"
        userId:
          type: string
        user:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/User"
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - id
        - permission
        - testId
        - userId
        - createdAt
        - updatedAt
    Organization:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        pictureUrl:
          oneOf:
            - type: "null"
            - type: string
        stripeCustomerId:
          oneOf:
            - type: "null"
            - type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        roles:
          type: array
          items:
            $ref: "#/components/schemas/OrganizationRole"
        projects:
          type: array
          items:
            $ref: "#/components/schemas/Project"
        agentCredentials:
          type: array
          items:
            $ref: "#/components/schemas/Agent"
        integration:
          type: array
          items:
            $ref: "#/components/schemas/Integration"
      required:
        - id
        - name
        - createdAt
        - updatedAt
    OrganizationRole:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        userId:
          type: string
        user:
          $ref: "#/components/schemas/User"
        organizationId:
          type: string
        organization:
          $ref: "#/components/schemas/Organization"
      required:
        - id
        - name
        - createdAt
        - updatedAt
        - userId
        - user
        - organizationId
        - organization
    Agent:
      type: object
      properties:
        id:
          type: string
        provider:
          type: string
        modelType:
          type: string
        numAgents:
          type: integer
        isActive:
          type: boolean
        anthropicApiKey:
          oneOf:
            - type: "null"
            - type: string
        awsAccessKeyId:
          oneOf:
            - type: "null"
            - type: string
        awsSecretAccessKey:
          oneOf:
            - type: "null"
            - type: string
        awsSessionToken:
          oneOf:
            - type: "null"
            - type: string
        awsRegion:
          oneOf:
            - type: "null"
            - type: string
        apiEndpoint:
          oneOf:
            - type: "null"
            - type: string
        apiKey:
          oneOf:
            - type: "null"
            - type: string
        organizationId:
          type: string
        organization:
          $ref: "#/components/schemas/Organization"
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - id
        - provider
        - modelType
        - numAgents
        - isActive
        - organizationId
        - organization
        - createdAt
        - updatedAt
    Integration:
      type: object
      properties:
        id:
          type: string
        type:
          $ref: "#/components/schemas/IntegrationType"
        name:
          type: string
        config: {}
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        organizationId:
          type: string
        organization:
          $ref: "#/components/schemas/Organization"
      required:
        - id
        - type
        - name
        - config
        - createdAt
        - updatedAt
        - organizationId
        - organization
    UserWhereInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/UserWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/UserWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/UserWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/UserWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/UserWhereInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        name:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        email:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        pictureUrl:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        tokenInvitation:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        stripeCustomerId:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        status:
          oneOf:
            - $ref: "#/components/schemas/EnumUserStatusFilter"
            - $ref: "#/components/schemas/UserStatus"
        globalRole:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        password:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        createdAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        organizationRoles:
          $ref: "#/components/schemas/OrganizationRoleListRelationFilter"
        testsAsCreatedBy:
          $ref: "#/components/schemas/TestListRelationFilter"
        testRunsAsExecutedBy:
          $ref: "#/components/schemas/TestRunListRelationFilter"
        testShares:
          $ref: "#/components/schemas/TestShareListRelationFilter"
    UserOrderByWithRelationInput:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/SortOrder"
        name:
          oneOf:
            - $ref: "#/components/schemas/SortOrder"
            - $ref: "#/components/schemas/SortOrderInput"
        email:
          oneOf:
            - $ref: "#/components/schemas/SortOrder"
            - $ref: "#/components/schemas/SortOrderInput"
        pictureUrl:
          oneOf:
            - $ref: "#/components/schemas/SortOrder"
            - $ref: "#/components/schemas/SortOrderInput"
        tokenInvitation:
          oneOf:
            - $ref: "#/components/schemas/SortOrder"
            - $ref: "#/components/schemas/SortOrderInput"
        stripeCustomerId:
          oneOf:
            - $ref: "#/components/schemas/SortOrder"
            - $ref: "#/components/schemas/SortOrderInput"
        status:
          $ref: "#/components/schemas/SortOrder"
        globalRole:
          $ref: "#/components/schemas/SortOrder"
        password:
          oneOf:
            - $ref: "#/components/schemas/SortOrder"
            - $ref: "#/components/schemas/SortOrderInput"
        createdAt:
          $ref: "#/components/schemas/SortOrder"
        updatedAt:
          $ref: "#/components/schemas/SortOrder"
        organizationRoles:
          $ref: "#/components/schemas/OrganizationRoleOrderByRelationAggregateInput"
        testsAsCreatedBy:
          $ref: "#/components/schemas/TestOrderByRelationAggregateInput"
        testRunsAsExecutedBy:
          $ref: "#/components/schemas/TestRunOrderByRelationAggregateInput"
        testShares:
          $ref: "#/components/schemas/TestShareOrderByRelationAggregateInput"
    UserWhereUniqueInput:
      type: object
      properties:
        id:
          type: string
        email:
          type: string
        AND:
          oneOf:
            - $ref: "#/components/schemas/UserWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/UserWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/UserWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/UserWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/UserWhereInput"
        name:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        pictureUrl:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        tokenInvitation:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        stripeCustomerId:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        status:
          oneOf:
            - $ref: "#/components/schemas/EnumUserStatusFilter"
            - $ref: "#/components/schemas/UserStatus"
        globalRole:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        password:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        createdAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        organizationRoles:
          $ref: "#/components/schemas/OrganizationRoleListRelationFilter"
        testsAsCreatedBy:
          $ref: "#/components/schemas/TestListRelationFilter"
        testRunsAsExecutedBy:
          $ref: "#/components/schemas/TestRunListRelationFilter"
        testShares:
          $ref: "#/components/schemas/TestShareListRelationFilter"
    UserScalarWhereWithAggregatesInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/UserScalarWhereWithAggregatesInput"
            - type: array
              items:
                $ref: "#/components/schemas/UserScalarWhereWithAggregatesInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/UserScalarWhereWithAggregatesInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/UserScalarWhereWithAggregatesInput"
            - type: array
              items:
                $ref: "#/components/schemas/UserScalarWhereWithAggregatesInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        name:
          oneOf:
            - $ref: "#/components/schemas/StringNullableWithAggregatesFilter"
            - type: string
            - type: "null"
        email:
          oneOf:
            - $ref: "#/components/schemas/StringNullableWithAggregatesFilter"
            - type: string
            - type: "null"
        pictureUrl:
          oneOf:
            - $ref: "#/components/schemas/StringNullableWithAggregatesFilter"
            - type: string
            - type: "null"
        tokenInvitation:
          oneOf:
            - $ref: "#/components/schemas/StringNullableWithAggregatesFilter"
            - type: string
            - type: "null"
        stripeCustomerId:
          oneOf:
            - $ref: "#/components/schemas/StringNullableWithAggregatesFilter"
            - type: string
            - type: "null"
        status:
          oneOf:
            - $ref: "#/components/schemas/EnumUserStatusWithAggregatesFilter"
            - $ref: "#/components/schemas/UserStatus"
        globalRole:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        password:
          oneOf:
            - $ref: "#/components/schemas/StringNullableWithAggregatesFilter"
            - type: string
            - type: "null"
        createdAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeWithAggregatesFilter"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeWithAggregatesFilter"
            - type: string
              format: date-time
    ProjectWhereInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/ProjectWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/ProjectWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/ProjectWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/ProjectWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/ProjectWhereInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        name:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        description:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        organizationId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        createdAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        cookies:
          $ref: "#/components/schemas/JsonNullableFilter"
        session:
          $ref: "#/components/schemas/JsonNullableFilter"
        localStorage:
          $ref: "#/components/schemas/JsonNullableFilter"
        organization:
          oneOf:
            - $ref: "#/components/schemas/OrganizationNullableRelationFilter"
            - $ref: "#/components/schemas/OrganizationWhereInput"
            - type: "null"
        tests:
          $ref: "#/components/schemas/TestListRelationFilter"
    ProjectOrderByWithRelationInput:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/SortOrder"
        name:
          $ref: "#/components/schemas/SortOrder"
        description:
          oneOf:
            - $ref: "#/components/schemas/SortOrder"
            - $ref: "#/components/schemas/SortOrderInput"
        organizationId:
          $ref: "#/components/schemas/SortOrder"
        createdAt:
          $ref: "#/components/schemas/SortOrder"
        updatedAt:
          $ref: "#/components/schemas/SortOrder"
        cookies:
          oneOf:
            - $ref: "#/components/schemas/SortOrder"
            - $ref: "#/components/schemas/SortOrderInput"
        session:
          oneOf:
            - $ref: "#/components/schemas/SortOrder"
            - $ref: "#/components/schemas/SortOrderInput"
        localStorage:
          oneOf:
            - $ref: "#/components/schemas/SortOrder"
            - $ref: "#/components/schemas/SortOrderInput"
        organization:
          $ref: "#/components/schemas/OrganizationOrderByWithRelationInput"
        tests:
          $ref: "#/components/schemas/TestOrderByRelationAggregateInput"
    ProjectWhereUniqueInput:
      type: object
      properties:
        id:
          type: string
        AND:
          oneOf:
            - $ref: "#/components/schemas/ProjectWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/ProjectWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/ProjectWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/ProjectWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/ProjectWhereInput"
        name:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        description:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        organizationId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        createdAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        cookies:
          $ref: "#/components/schemas/JsonNullableFilter"
        session:
          $ref: "#/components/schemas/JsonNullableFilter"
        localStorage:
          $ref: "#/components/schemas/JsonNullableFilter"
        organization:
          oneOf:
            - $ref: "#/components/schemas/OrganizationNullableRelationFilter"
            - $ref: "#/components/schemas/OrganizationWhereInput"
            - type: "null"
        tests:
          $ref: "#/components/schemas/TestListRelationFilter"
    ProjectScalarWhereWithAggregatesInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/ProjectScalarWhereWithAggregatesInput"
            - type: array
              items:
                $ref: "#/components/schemas/ProjectScalarWhereWithAggregatesInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/ProjectScalarWhereWithAggregatesInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/ProjectScalarWhereWithAggregatesInput"
            - type: array
              items:
                $ref: "#/components/schemas/ProjectScalarWhereWithAggregatesInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        name:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        description:
          oneOf:
            - $ref: "#/components/schemas/StringNullableWithAggregatesFilter"
            - type: string
            - type: "null"
        organizationId:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        createdAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeWithAggregatesFilter"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeWithAggregatesFilter"
            - type: string
              format: date-time
        cookies:
          $ref: "#/components/schemas/JsonNullableWithAggregatesFilter"
        session:
          $ref: "#/components/schemas/JsonNullableWithAggregatesFilter"
        localStorage:
          $ref: "#/components/schemas/JsonNullableWithAggregatesFilter"
    TestWhereInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/TestWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/TestWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/TestWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestWhereInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        name:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        description:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        url:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        naturalLanguageInput:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        status:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        isActive:
          oneOf:
            - $ref: "#/components/schemas/BoolFilter"
            - type: boolean
        projectId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        createdById:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        createdAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        project:
          oneOf:
            - $ref: "#/components/schemas/ProjectNullableRelationFilter"
            - $ref: "#/components/schemas/ProjectWhereInput"
            - type: "null"
        createdBy:
          oneOf:
            - $ref: "#/components/schemas/UserNullableRelationFilter"
            - $ref: "#/components/schemas/UserWhereInput"
            - type: "null"
        testRuns:
          $ref: "#/components/schemas/TestRunListRelationFilter"
        testShares:
          $ref: "#/components/schemas/TestShareListRelationFilter"
    TestOrderByWithRelationInput:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/SortOrder"
        name:
          $ref: "#/components/schemas/SortOrder"
        description:
          oneOf:
            - $ref: "#/components/schemas/SortOrder"
            - $ref: "#/components/schemas/SortOrderInput"
        url:
          oneOf:
            - $ref: "#/components/schemas/SortOrder"
            - $ref: "#/components/schemas/SortOrderInput"
        naturalLanguageInput:
          oneOf:
            - $ref: "#/components/schemas/SortOrder"
            - $ref: "#/components/schemas/SortOrderInput"
        status:
          $ref: "#/components/schemas/SortOrder"
        isActive:
          $ref: "#/components/schemas/SortOrder"
        projectId:
          $ref: "#/components/schemas/SortOrder"
        createdById:
          $ref: "#/components/schemas/SortOrder"
        createdAt:
          $ref: "#/components/schemas/SortOrder"
        updatedAt:
          $ref: "#/components/schemas/SortOrder"
        project:
          $ref: "#/components/schemas/ProjectOrderByWithRelationInput"
        createdBy:
          $ref: "#/components/schemas/UserOrderByWithRelationInput"
        testRuns:
          $ref: "#/components/schemas/TestRunOrderByRelationAggregateInput"
        testShares:
          $ref: "#/components/schemas/TestShareOrderByRelationAggregateInput"
    TestWhereUniqueInput:
      type: object
      properties:
        id:
          type: string
        AND:
          oneOf:
            - $ref: "#/components/schemas/TestWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/TestWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/TestWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestWhereInput"
        name:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        description:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        url:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        naturalLanguageInput:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        status:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        isActive:
          oneOf:
            - $ref: "#/components/schemas/BoolFilter"
            - type: boolean
        projectId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        createdById:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        createdAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        project:
          oneOf:
            - $ref: "#/components/schemas/ProjectNullableRelationFilter"
            - $ref: "#/components/schemas/ProjectWhereInput"
            - type: "null"
        createdBy:
          oneOf:
            - $ref: "#/components/schemas/UserNullableRelationFilter"
            - $ref: "#/components/schemas/UserWhereInput"
            - type: "null"
        testRuns:
          $ref: "#/components/schemas/TestRunListRelationFilter"
        testShares:
          $ref: "#/components/schemas/TestShareListRelationFilter"
    TestScalarWhereWithAggregatesInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/TestScalarWhereWithAggregatesInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestScalarWhereWithAggregatesInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/TestScalarWhereWithAggregatesInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/TestScalarWhereWithAggregatesInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestScalarWhereWithAggregatesInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        name:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        description:
          oneOf:
            - $ref: "#/components/schemas/StringNullableWithAggregatesFilter"
            - type: string
            - type: "null"
        url:
          oneOf:
            - $ref: "#/components/schemas/StringNullableWithAggregatesFilter"
            - type: string
            - type: "null"
        naturalLanguageInput:
          oneOf:
            - $ref: "#/components/schemas/StringNullableWithAggregatesFilter"
            - type: string
            - type: "null"
        status:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        isActive:
          oneOf:
            - $ref: "#/components/schemas/BoolWithAggregatesFilter"
            - type: boolean
        projectId:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        createdById:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        createdAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeWithAggregatesFilter"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeWithAggregatesFilter"
            - type: string
              format: date-time
    TestRunWhereInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/TestRunWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestRunWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/TestRunWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/TestRunWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestRunWhereInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        status:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        errorLog:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        reportUrl:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        testId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        executedById:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        createdAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        test:
          oneOf:
            - $ref: "#/components/schemas/TestNullableRelationFilter"
            - $ref: "#/components/schemas/TestWhereInput"
            - type: "null"
        executedBy:
          oneOf:
            - $ref: "#/components/schemas/UserNullableRelationFilter"
            - $ref: "#/components/schemas/UserWhereInput"
            - type: "null"
        testSteps:
          $ref: "#/components/schemas/TestStepListRelationFilter"
    TestRunOrderByWithRelationInput:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/SortOrder"
        status:
          $ref: "#/components/schemas/SortOrder"
        errorLog:
          oneOf:
            - $ref: "#/components/schemas/SortOrder"
            - $ref: "#/components/schemas/SortOrderInput"
        reportUrl:
          oneOf:
            - $ref: "#/components/schemas/SortOrder"
            - $ref: "#/components/schemas/SortOrderInput"
        testId:
          $ref: "#/components/schemas/SortOrder"
        executedById:
          $ref: "#/components/schemas/SortOrder"
        createdAt:
          $ref: "#/components/schemas/SortOrder"
        updatedAt:
          $ref: "#/components/schemas/SortOrder"
        test:
          $ref: "#/components/schemas/TestOrderByWithRelationInput"
        executedBy:
          $ref: "#/components/schemas/UserOrderByWithRelationInput"
        testSteps:
          $ref: "#/components/schemas/TestStepOrderByRelationAggregateInput"
    TestRunWhereUniqueInput:
      type: object
      properties:
        id:
          type: string
        AND:
          oneOf:
            - $ref: "#/components/schemas/TestRunWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestRunWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/TestRunWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/TestRunWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestRunWhereInput"
        status:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        errorLog:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        reportUrl:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        testId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        executedById:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        createdAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        test:
          oneOf:
            - $ref: "#/components/schemas/TestNullableRelationFilter"
            - $ref: "#/components/schemas/TestWhereInput"
            - type: "null"
        executedBy:
          oneOf:
            - $ref: "#/components/schemas/UserNullableRelationFilter"
            - $ref: "#/components/schemas/UserWhereInput"
            - type: "null"
        testSteps:
          $ref: "#/components/schemas/TestStepListRelationFilter"
    TestRunScalarWhereWithAggregatesInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/TestRunScalarWhereWithAggregatesInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestRunScalarWhereWithAggregatesInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/TestRunScalarWhereWithAggregatesInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/TestRunScalarWhereWithAggregatesInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestRunScalarWhereWithAggregatesInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        status:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        errorLog:
          oneOf:
            - $ref: "#/components/schemas/StringNullableWithAggregatesFilter"
            - type: string
            - type: "null"
        reportUrl:
          oneOf:
            - $ref: "#/components/schemas/StringNullableWithAggregatesFilter"
            - type: string
            - type: "null"
        testId:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        executedById:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        createdAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeWithAggregatesFilter"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeWithAggregatesFilter"
            - type: string
              format: date-time
    TestStepWhereInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/TestStepWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestStepWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/TestStepWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/TestStepWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestStepWhereInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        order:
          oneOf:
            - $ref: "#/components/schemas/FloatFilter"
            - type: number
        action:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        status:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        screenshotUrl:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        testRunId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        createdAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        testRun:
          oneOf:
            - $ref: "#/components/schemas/TestRunNullableRelationFilter"
            - $ref: "#/components/schemas/TestRunWhereInput"
            - type: "null"
    TestStepOrderByWithRelationInput:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/SortOrder"
        order:
          $ref: "#/components/schemas/SortOrder"
        action:
          $ref: "#/components/schemas/SortOrder"
        status:
          $ref: "#/components/schemas/SortOrder"
        screenshotUrl:
          oneOf:
            - $ref: "#/components/schemas/SortOrder"
            - $ref: "#/components/schemas/SortOrderInput"
        testRunId:
          $ref: "#/components/schemas/SortOrder"
        createdAt:
          $ref: "#/components/schemas/SortOrder"
        updatedAt:
          $ref: "#/components/schemas/SortOrder"
        testRun:
          $ref: "#/components/schemas/TestRunOrderByWithRelationInput"
    TestStepWhereUniqueInput:
      type: object
      properties:
        id:
          type: string
        AND:
          oneOf:
            - $ref: "#/components/schemas/TestStepWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestStepWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/TestStepWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/TestStepWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestStepWhereInput"
        order:
          oneOf:
            - $ref: "#/components/schemas/FloatFilter"
            - type: number
        action:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        status:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        screenshotUrl:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        testRunId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        createdAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        testRun:
          oneOf:
            - $ref: "#/components/schemas/TestRunNullableRelationFilter"
            - $ref: "#/components/schemas/TestRunWhereInput"
            - type: "null"
    TestStepScalarWhereWithAggregatesInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/TestStepScalarWhereWithAggregatesInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestStepScalarWhereWithAggregatesInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/TestStepScalarWhereWithAggregatesInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/TestStepScalarWhereWithAggregatesInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestStepScalarWhereWithAggregatesInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        order:
          oneOf:
            - $ref: "#/components/schemas/FloatWithAggregatesFilter"
            - type: number
        action:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        status:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        screenshotUrl:
          oneOf:
            - $ref: "#/components/schemas/StringNullableWithAggregatesFilter"
            - type: string
            - type: "null"
        testRunId:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        createdAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeWithAggregatesFilter"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeWithAggregatesFilter"
            - type: string
              format: date-time
    TestShareWhereInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/TestShareWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestShareWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/TestShareWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/TestShareWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestShareWhereInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        permission:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        testId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        userId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        createdAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        test:
          oneOf:
            - $ref: "#/components/schemas/TestNullableRelationFilter"
            - $ref: "#/components/schemas/TestWhereInput"
            - type: "null"
        user:
          oneOf:
            - $ref: "#/components/schemas/UserNullableRelationFilter"
            - $ref: "#/components/schemas/UserWhereInput"
            - type: "null"
    TestShareOrderByWithRelationInput:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/SortOrder"
        permission:
          $ref: "#/components/schemas/SortOrder"
        testId:
          $ref: "#/components/schemas/SortOrder"
        userId:
          $ref: "#/components/schemas/SortOrder"
        createdAt:
          $ref: "#/components/schemas/SortOrder"
        updatedAt:
          $ref: "#/components/schemas/SortOrder"
        test:
          $ref: "#/components/schemas/TestOrderByWithRelationInput"
        user:
          $ref: "#/components/schemas/UserOrderByWithRelationInput"
    TestShareWhereUniqueInput:
      type: object
      properties:
        id:
          type: string
        AND:
          oneOf:
            - $ref: "#/components/schemas/TestShareWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestShareWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/TestShareWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/TestShareWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestShareWhereInput"
        permission:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        testId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        userId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        createdAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        test:
          oneOf:
            - $ref: "#/components/schemas/TestNullableRelationFilter"
            - $ref: "#/components/schemas/TestWhereInput"
            - type: "null"
        user:
          oneOf:
            - $ref: "#/components/schemas/UserNullableRelationFilter"
            - $ref: "#/components/schemas/UserWhereInput"
            - type: "null"
    TestShareScalarWhereWithAggregatesInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/TestShareScalarWhereWithAggregatesInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestShareScalarWhereWithAggregatesInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/TestShareScalarWhereWithAggregatesInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/TestShareScalarWhereWithAggregatesInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestShareScalarWhereWithAggregatesInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        permission:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        testId:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        userId:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        createdAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeWithAggregatesFilter"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeWithAggregatesFilter"
            - type: string
              format: date-time
    OrganizationWhereInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/OrganizationWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/OrganizationWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/OrganizationWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/OrganizationWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/OrganizationWhereInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        name:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        pictureUrl:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        stripeCustomerId:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        createdAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        roles:
          $ref: "#/components/schemas/OrganizationRoleListRelationFilter"
        projects:
          $ref: "#/components/schemas/ProjectListRelationFilter"
        agentCredentials:
          $ref: "#/components/schemas/AgentListRelationFilter"
        integration:
          $ref: "#/components/schemas/IntegrationListRelationFilter"
    OrganizationOrderByWithRelationInput:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/SortOrder"
        name:
          $ref: "#/components/schemas/SortOrder"
        pictureUrl:
          oneOf:
            - $ref: "#/components/schemas/SortOrder"
            - $ref: "#/components/schemas/SortOrderInput"
        stripeCustomerId:
          oneOf:
            - $ref: "#/components/schemas/SortOrder"
            - $ref: "#/components/schemas/SortOrderInput"
        createdAt:
          $ref: "#/components/schemas/SortOrder"
        updatedAt:
          $ref: "#/components/schemas/SortOrder"
        roles:
          $ref: "#/components/schemas/OrganizationRoleOrderByRelationAggregateInput"
        projects:
          $ref: "#/components/schemas/ProjectOrderByRelationAggregateInput"
        agentCredentials:
          $ref: "#/components/schemas/AgentOrderByRelationAggregateInput"
        integration:
          $ref: "#/components/schemas/IntegrationOrderByRelationAggregateInput"
    OrganizationWhereUniqueInput:
      type: object
      properties:
        id:
          type: string
        AND:
          oneOf:
            - $ref: "#/components/schemas/OrganizationWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/OrganizationWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/OrganizationWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/OrganizationWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/OrganizationWhereInput"
        name:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        pictureUrl:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        stripeCustomerId:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        createdAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        roles:
          $ref: "#/components/schemas/OrganizationRoleListRelationFilter"
        projects:
          $ref: "#/components/schemas/ProjectListRelationFilter"
        agentCredentials:
          $ref: "#/components/schemas/AgentListRelationFilter"
        integration:
          $ref: "#/components/schemas/IntegrationListRelationFilter"
    OrganizationScalarWhereWithAggregatesInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/OrganizationScalarWhereWithAggregatesInput"
            - type: array
              items:
                $ref: "#/components/schemas/OrganizationScalarWhereWithAggregatesInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/OrganizationScalarWhereWithAggregatesInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/OrganizationScalarWhereWithAggregatesInput"
            - type: array
              items:
                $ref: "#/components/schemas/OrganizationScalarWhereWithAggregatesInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        name:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        pictureUrl:
          oneOf:
            - $ref: "#/components/schemas/StringNullableWithAggregatesFilter"
            - type: string
            - type: "null"
        stripeCustomerId:
          oneOf:
            - $ref: "#/components/schemas/StringNullableWithAggregatesFilter"
            - type: string
            - type: "null"
        createdAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeWithAggregatesFilter"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeWithAggregatesFilter"
            - type: string
              format: date-time
    OrganizationRoleWhereInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/OrganizationRoleWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/OrganizationRoleWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/OrganizationRoleWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/OrganizationRoleWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/OrganizationRoleWhereInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        name:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        createdAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        userId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        organizationId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        user:
          oneOf:
            - $ref: "#/components/schemas/UserRelationFilter"
            - $ref: "#/components/schemas/UserWhereInput"
        organization:
          oneOf:
            - $ref: "#/components/schemas/OrganizationRelationFilter"
            - $ref: "#/components/schemas/OrganizationWhereInput"
    OrganizationRoleOrderByWithRelationInput:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/SortOrder"
        name:
          $ref: "#/components/schemas/SortOrder"
        createdAt:
          $ref: "#/components/schemas/SortOrder"
        updatedAt:
          $ref: "#/components/schemas/SortOrder"
        userId:
          $ref: "#/components/schemas/SortOrder"
        organizationId:
          $ref: "#/components/schemas/SortOrder"
        user:
          $ref: "#/components/schemas/UserOrderByWithRelationInput"
        organization:
          $ref: "#/components/schemas/OrganizationOrderByWithRelationInput"
    OrganizationRoleWhereUniqueInput:
      type: object
      properties:
        id:
          type: string
        AND:
          oneOf:
            - $ref: "#/components/schemas/OrganizationRoleWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/OrganizationRoleWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/OrganizationRoleWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/OrganizationRoleWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/OrganizationRoleWhereInput"
        name:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        createdAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        userId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        organizationId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        user:
          oneOf:
            - $ref: "#/components/schemas/UserRelationFilter"
            - $ref: "#/components/schemas/UserWhereInput"
        organization:
          oneOf:
            - $ref: "#/components/schemas/OrganizationRelationFilter"
            - $ref: "#/components/schemas/OrganizationWhereInput"
    OrganizationRoleScalarWhereWithAggregatesInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/OrganizationRoleScalarWhereWithAggregatesInput"
            - type: array
              items:
                $ref: "#/components/schemas/OrganizationRoleScalarWhereWithAggregatesInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/OrganizationRoleScalarWhereWithAggregatesInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/OrganizationRoleScalarWhereWithAggregatesInput"
            - type: array
              items:
                $ref: "#/components/schemas/OrganizationRoleScalarWhereWithAggregatesInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        name:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        createdAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeWithAggregatesFilter"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeWithAggregatesFilter"
            - type: string
              format: date-time
        userId:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        organizationId:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
    AgentWhereInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/AgentWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/AgentWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/AgentWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/AgentWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/AgentWhereInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        provider:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        modelType:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        numAgents:
          oneOf:
            - $ref: "#/components/schemas/IntFilter"
            - type: integer
        isActive:
          oneOf:
            - $ref: "#/components/schemas/BoolFilter"
            - type: boolean
        anthropicApiKey:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        awsAccessKeyId:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        awsSecretAccessKey:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        awsSessionToken:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        awsRegion:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        apiEndpoint:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        apiKey:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        organizationId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        createdAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        organization:
          oneOf:
            - $ref: "#/components/schemas/OrganizationRelationFilter"
            - $ref: "#/components/schemas/OrganizationWhereInput"
    AgentOrderByWithRelationInput:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/SortOrder"
        provider:
          $ref: "#/components/schemas/SortOrder"
        modelType:
          $ref: "#/components/schemas/SortOrder"
        numAgents:
          $ref: "#/components/schemas/SortOrder"
        isActive:
          $ref: "#/components/schemas/SortOrder"
        anthropicApiKey:
          oneOf:
            - $ref: "#/components/schemas/SortOrder"
            - $ref: "#/components/schemas/SortOrderInput"
        awsAccessKeyId:
          oneOf:
            - $ref: "#/components/schemas/SortOrder"
            - $ref: "#/components/schemas/SortOrderInput"
        awsSecretAccessKey:
          oneOf:
            - $ref: "#/components/schemas/SortOrder"
            - $ref: "#/components/schemas/SortOrderInput"
        awsSessionToken:
          oneOf:
            - $ref: "#/components/schemas/SortOrder"
            - $ref: "#/components/schemas/SortOrderInput"
        awsRegion:
          oneOf:
            - $ref: "#/components/schemas/SortOrder"
            - $ref: "#/components/schemas/SortOrderInput"
        apiEndpoint:
          oneOf:
            - $ref: "#/components/schemas/SortOrder"
            - $ref: "#/components/schemas/SortOrderInput"
        apiKey:
          oneOf:
            - $ref: "#/components/schemas/SortOrder"
            - $ref: "#/components/schemas/SortOrderInput"
        organizationId:
          $ref: "#/components/schemas/SortOrder"
        createdAt:
          $ref: "#/components/schemas/SortOrder"
        updatedAt:
          $ref: "#/components/schemas/SortOrder"
        organization:
          $ref: "#/components/schemas/OrganizationOrderByWithRelationInput"
    AgentWhereUniqueInput:
      type: object
      properties:
        id:
          type: string
        AND:
          oneOf:
            - $ref: "#/components/schemas/AgentWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/AgentWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/AgentWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/AgentWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/AgentWhereInput"
        provider:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        modelType:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        numAgents:
          oneOf:
            - $ref: "#/components/schemas/IntFilter"
            - type: integer
        isActive:
          oneOf:
            - $ref: "#/components/schemas/BoolFilter"
            - type: boolean
        anthropicApiKey:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        awsAccessKeyId:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        awsSecretAccessKey:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        awsSessionToken:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        awsRegion:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        apiEndpoint:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        apiKey:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        organizationId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        createdAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        organization:
          oneOf:
            - $ref: "#/components/schemas/OrganizationRelationFilter"
            - $ref: "#/components/schemas/OrganizationWhereInput"
    AgentScalarWhereWithAggregatesInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/AgentScalarWhereWithAggregatesInput"
            - type: array
              items:
                $ref: "#/components/schemas/AgentScalarWhereWithAggregatesInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/AgentScalarWhereWithAggregatesInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/AgentScalarWhereWithAggregatesInput"
            - type: array
              items:
                $ref: "#/components/schemas/AgentScalarWhereWithAggregatesInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        provider:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        modelType:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        numAgents:
          oneOf:
            - $ref: "#/components/schemas/IntWithAggregatesFilter"
            - type: integer
        isActive:
          oneOf:
            - $ref: "#/components/schemas/BoolWithAggregatesFilter"
            - type: boolean
        anthropicApiKey:
          oneOf:
            - $ref: "#/components/schemas/StringNullableWithAggregatesFilter"
            - type: string
            - type: "null"
        awsAccessKeyId:
          oneOf:
            - $ref: "#/components/schemas/StringNullableWithAggregatesFilter"
            - type: string
            - type: "null"
        awsSecretAccessKey:
          oneOf:
            - $ref: "#/components/schemas/StringNullableWithAggregatesFilter"
            - type: string
            - type: "null"
        awsSessionToken:
          oneOf:
            - $ref: "#/components/schemas/StringNullableWithAggregatesFilter"
            - type: string
            - type: "null"
        awsRegion:
          oneOf:
            - $ref: "#/components/schemas/StringNullableWithAggregatesFilter"
            - type: string
            - type: "null"
        apiEndpoint:
          oneOf:
            - $ref: "#/components/schemas/StringNullableWithAggregatesFilter"
            - type: string
            - type: "null"
        apiKey:
          oneOf:
            - $ref: "#/components/schemas/StringNullableWithAggregatesFilter"
            - type: string
            - type: "null"
        organizationId:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        createdAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeWithAggregatesFilter"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeWithAggregatesFilter"
            - type: string
              format: date-time
    IntegrationWhereInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/IntegrationWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/IntegrationWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/IntegrationWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/IntegrationWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/IntegrationWhereInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        type:
          oneOf:
            - $ref: "#/components/schemas/EnumIntegrationTypeFilter"
            - $ref: "#/components/schemas/IntegrationType"
        name:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        config:
          $ref: "#/components/schemas/JsonFilter"
        createdAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        organizationId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        organization:
          oneOf:
            - $ref: "#/components/schemas/OrganizationRelationFilter"
            - $ref: "#/components/schemas/OrganizationWhereInput"
    IntegrationOrderByWithRelationInput:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/SortOrder"
        type:
          $ref: "#/components/schemas/SortOrder"
        name:
          $ref: "#/components/schemas/SortOrder"
        config:
          $ref: "#/components/schemas/SortOrder"
        createdAt:
          $ref: "#/components/schemas/SortOrder"
        updatedAt:
          $ref: "#/components/schemas/SortOrder"
        organizationId:
          $ref: "#/components/schemas/SortOrder"
        organization:
          $ref: "#/components/schemas/OrganizationOrderByWithRelationInput"
    IntegrationWhereUniqueInput:
      type: object
      properties:
        id:
          type: string
        AND:
          oneOf:
            - $ref: "#/components/schemas/IntegrationWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/IntegrationWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/IntegrationWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/IntegrationWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/IntegrationWhereInput"
        type:
          oneOf:
            - $ref: "#/components/schemas/EnumIntegrationTypeFilter"
            - $ref: "#/components/schemas/IntegrationType"
        name:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        config:
          $ref: "#/components/schemas/JsonFilter"
        createdAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        organizationId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        organization:
          oneOf:
            - $ref: "#/components/schemas/OrganizationRelationFilter"
            - $ref: "#/components/schemas/OrganizationWhereInput"
    IntegrationScalarWhereWithAggregatesInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/IntegrationScalarWhereWithAggregatesInput"
            - type: array
              items:
                $ref: "#/components/schemas/IntegrationScalarWhereWithAggregatesInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/IntegrationScalarWhereWithAggregatesInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/IntegrationScalarWhereWithAggregatesInput"
            - type: array
              items:
                $ref: "#/components/schemas/IntegrationScalarWhereWithAggregatesInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        type:
          oneOf:
            - $ref: "#/components/schemas/EnumIntegrationTypeWithAggregatesFilter"
            - $ref: "#/components/schemas/IntegrationType"
        name:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
        config:
          $ref: "#/components/schemas/JsonWithAggregatesFilter"
        createdAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeWithAggregatesFilter"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeWithAggregatesFilter"
            - type: string
              format: date-time
        organizationId:
          oneOf:
            - $ref: "#/components/schemas/StringWithAggregatesFilter"
            - type: string
    UserCreateInput:
      type: object
      properties:
        id:
          type: string
        name:
          oneOf:
            - type: "null"
            - type: string
        email:
          oneOf:
            - type: "null"
            - type: string
        pictureUrl:
          oneOf:
            - type: "null"
            - type: string
        tokenInvitation:
          oneOf:
            - type: "null"
            - type: string
        stripeCustomerId:
          oneOf:
            - type: "null"
            - type: string
        status:
          $ref: "#/components/schemas/UserStatus"
        globalRole:
          type: string
        password:
          oneOf:
            - type: "null"
            - type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        organizationRoles:
          $ref: "#/components/schemas/OrganizationRoleCreateNestedManyWithoutUserInput"
        testsAsCreatedBy:
          $ref: "#/components/schemas/TestCreateNestedManyWithoutCreatedByInput"
        testRunsAsExecutedBy:
          $ref: "#/components/schemas/TestRunCreateNestedManyWithoutExecutedByInput"
        testShares:
          $ref: "#/components/schemas/TestShareCreateNestedManyWithoutUserInput"
    UserUpdateInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        email:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        pictureUrl:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        tokenInvitation:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        stripeCustomerId:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        status:
          oneOf:
            - $ref: "#/components/schemas/UserStatus"
            - $ref: "#/components/schemas/EnumUserStatusFieldUpdateOperationsInput"
        globalRole:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        password:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        organizationRoles:
          $ref: "#/components/schemas/OrganizationRoleUpdateManyWithoutUserNestedInput"
        testsAsCreatedBy:
          $ref: "#/components/schemas/TestUpdateManyWithoutCreatedByNestedInput"
        testRunsAsExecutedBy:
          $ref: "#/components/schemas/TestRunUpdateManyWithoutExecutedByNestedInput"
        testShares:
          $ref: "#/components/schemas/TestShareUpdateManyWithoutUserNestedInput"
    UserCreateManyInput:
      type: object
      properties:
        id:
          type: string
        name:
          oneOf:
            - type: "null"
            - type: string
        email:
          oneOf:
            - type: "null"
            - type: string
        pictureUrl:
          oneOf:
            - type: "null"
            - type: string
        tokenInvitation:
          oneOf:
            - type: "null"
            - type: string
        stripeCustomerId:
          oneOf:
            - type: "null"
            - type: string
        status:
          $ref: "#/components/schemas/UserStatus"
        globalRole:
          type: string
        password:
          oneOf:
            - type: "null"
            - type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    UserUpdateManyMutationInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        email:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        pictureUrl:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        tokenInvitation:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        stripeCustomerId:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        status:
          oneOf:
            - $ref: "#/components/schemas/UserStatus"
            - $ref: "#/components/schemas/EnumUserStatusFieldUpdateOperationsInput"
        globalRole:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        password:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
    ProjectCreateInput:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          oneOf:
            - type: "null"
            - type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        cookies:
          oneOf:
            - $ref: "#/components/schemas/NullableJsonNullValueInput"
            - {}
        session:
          oneOf:
            - $ref: "#/components/schemas/NullableJsonNullValueInput"
            - {}
        localStorage:
          oneOf:
            - $ref: "#/components/schemas/NullableJsonNullValueInput"
            - {}
        organization:
          $ref: "#/components/schemas/OrganizationCreateNestedOneWithoutProjectsInput"
        tests:
          $ref: "#/components/schemas/TestCreateNestedManyWithoutProjectInput"
      required:
        - name
    ProjectUpdateInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        description:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        cookies:
          oneOf:
            - $ref: "#/components/schemas/NullableJsonNullValueInput"
            - {}
        session:
          oneOf:
            - $ref: "#/components/schemas/NullableJsonNullValueInput"
            - {}
        localStorage:
          oneOf:
            - $ref: "#/components/schemas/NullableJsonNullValueInput"
            - {}
        organization:
          $ref: "#/components/schemas/OrganizationUpdateOneWithoutProjectsNestedInput"
        tests:
          $ref: "#/components/schemas/TestUpdateManyWithoutProjectNestedInput"
    ProjectCreateManyInput:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          oneOf:
            - type: "null"
            - type: string
        organizationId:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        cookies:
          oneOf:
            - $ref: "#/components/schemas/NullableJsonNullValueInput"
            - {}
        session:
          oneOf:
            - $ref: "#/components/schemas/NullableJsonNullValueInput"
            - {}
        localStorage:
          oneOf:
            - $ref: "#/components/schemas/NullableJsonNullValueInput"
            - {}
      required:
        - name
        - organizationId
    ProjectUpdateManyMutationInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        description:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        cookies:
          oneOf:
            - $ref: "#/components/schemas/NullableJsonNullValueInput"
            - {}
        session:
          oneOf:
            - $ref: "#/components/schemas/NullableJsonNullValueInput"
            - {}
        localStorage:
          oneOf:
            - $ref: "#/components/schemas/NullableJsonNullValueInput"
            - {}
    TestCreateInput:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          oneOf:
            - type: "null"
            - type: string
        url:
          oneOf:
            - type: "null"
            - type: string
        naturalLanguageInput:
          oneOf:
            - type: "null"
            - type: string
        status:
          type: string
        isActive:
          type: boolean
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        project:
          $ref: "#/components/schemas/ProjectCreateNestedOneWithoutTestsInput"
        createdBy:
          $ref: "#/components/schemas/UserCreateNestedOneWithoutTestsAsCreatedByInput"
        testRuns:
          $ref: "#/components/schemas/TestRunCreateNestedManyWithoutTestInput"
        testShares:
          $ref: "#/components/schemas/TestShareCreateNestedManyWithoutTestInput"
      required:
        - name
        - status
    TestUpdateInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        description:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        url:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        naturalLanguageInput:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        status:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        isActive:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/BoolFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        project:
          $ref: "#/components/schemas/ProjectUpdateOneWithoutTestsNestedInput"
        createdBy:
          $ref: "#/components/schemas/UserUpdateOneWithoutTestsAsCreatedByNestedInput"
        testRuns:
          $ref: "#/components/schemas/TestRunUpdateManyWithoutTestNestedInput"
        testShares:
          $ref: "#/components/schemas/TestShareUpdateManyWithoutTestNestedInput"
    TestCreateManyInput:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          oneOf:
            - type: "null"
            - type: string
        url:
          oneOf:
            - type: "null"
            - type: string
        naturalLanguageInput:
          oneOf:
            - type: "null"
            - type: string
        status:
          type: string
        isActive:
          type: boolean
        projectId:
          type: string
        createdById:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - name
        - status
        - projectId
        - createdById
    TestUpdateManyMutationInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        description:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        url:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        naturalLanguageInput:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        status:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        isActive:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/BoolFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
    TestRunCreateInput:
      type: object
      properties:
        id:
          type: string
        status:
          type: string
        errorLog:
          oneOf:
            - type: "null"
            - type: string
        reportUrl:
          oneOf:
            - type: "null"
            - type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        test:
          $ref: "#/components/schemas/TestCreateNestedOneWithoutTestRunsInput"
        executedBy:
          $ref: "#/components/schemas/UserCreateNestedOneWithoutTestRunsAsExecutedByInput"
        testSteps:
          $ref: "#/components/schemas/TestStepCreateNestedManyWithoutTestRunInput"
      required:
        - status
    TestRunUpdateInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        status:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        errorLog:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        reportUrl:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        test:
          $ref: "#/components/schemas/TestUpdateOneWithoutTestRunsNestedInput"
        executedBy:
          $ref: "#/components/schemas/UserUpdateOneWithoutTestRunsAsExecutedByNestedInput"
        testSteps:
          $ref: "#/components/schemas/TestStepUpdateManyWithoutTestRunNestedInput"
    TestRunCreateManyInput:
      type: object
      properties:
        id:
          type: string
        status:
          type: string
        errorLog:
          oneOf:
            - type: "null"
            - type: string
        reportUrl:
          oneOf:
            - type: "null"
            - type: string
        testId:
          type: string
        executedById:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - status
        - testId
        - executedById
    TestRunUpdateManyMutationInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        status:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        errorLog:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        reportUrl:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
    TestStepCreateInput:
      type: object
      properties:
        id:
          type: string
        order:
          type: number
        action:
          type: string
        status:
          type: string
        screenshotUrl:
          oneOf:
            - type: "null"
            - type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        testRun:
          $ref: "#/components/schemas/TestRunCreateNestedOneWithoutTestStepsInput"
      required:
        - order
        - action
        - status
    TestStepUpdateInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        order:
          oneOf:
            - type: number
            - $ref: "#/components/schemas/FloatFieldUpdateOperationsInput"
        action:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        status:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        screenshotUrl:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        testRun:
          $ref: "#/components/schemas/TestRunUpdateOneWithoutTestStepsNestedInput"
    TestStepCreateManyInput:
      type: object
      properties:
        id:
          type: string
        order:
          type: number
        action:
          type: string
        status:
          type: string
        screenshotUrl:
          oneOf:
            - type: "null"
            - type: string
        testRunId:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - order
        - action
        - status
        - testRunId
    TestStepUpdateManyMutationInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        order:
          oneOf:
            - type: number
            - $ref: "#/components/schemas/FloatFieldUpdateOperationsInput"
        action:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        status:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        screenshotUrl:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
    TestShareCreateInput:
      type: object
      properties:
        id:
          type: string
        permission:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        test:
          $ref: "#/components/schemas/TestCreateNestedOneWithoutTestSharesInput"
        user:
          $ref: "#/components/schemas/UserCreateNestedOneWithoutTestSharesInput"
      required:
        - permission
    TestShareUpdateInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        permission:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        test:
          $ref: "#/components/schemas/TestUpdateOneWithoutTestSharesNestedInput"
        user:
          $ref: "#/components/schemas/UserUpdateOneWithoutTestSharesNestedInput"
    TestShareCreateManyInput:
      type: object
      properties:
        id:
          type: string
        permission:
          type: string
        testId:
          type: string
        userId:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - permission
        - testId
        - userId
    TestShareUpdateManyMutationInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        permission:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
    OrganizationCreateInput:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        pictureUrl:
          oneOf:
            - type: "null"
            - type: string
        stripeCustomerId:
          oneOf:
            - type: "null"
            - type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        roles:
          $ref: "#/components/schemas/OrganizationRoleCreateNestedManyWithoutOrganization\
            Input"
        projects:
          $ref: "#/components/schemas/ProjectCreateNestedManyWithoutOrganizationInput"
        agentCredentials:
          $ref: "#/components/schemas/AgentCreateNestedManyWithoutOrganizationInput"
        integration:
          $ref: "#/components/schemas/IntegrationCreateNestedManyWithoutOrganizationInput"
      required:
        - name
    OrganizationUpdateInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        pictureUrl:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        stripeCustomerId:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        roles:
          $ref: "#/components/schemas/OrganizationRoleUpdateManyWithoutOrganizationNested\
            Input"
        projects:
          $ref: "#/components/schemas/ProjectUpdateManyWithoutOrganizationNestedInput"
        agentCredentials:
          $ref: "#/components/schemas/AgentUpdateManyWithoutOrganizationNestedInput"
        integration:
          $ref: "#/components/schemas/IntegrationUpdateManyWithoutOrganizationNestedInput"
    OrganizationCreateManyInput:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        pictureUrl:
          oneOf:
            - type: "null"
            - type: string
        stripeCustomerId:
          oneOf:
            - type: "null"
            - type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - name
    OrganizationUpdateManyMutationInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        pictureUrl:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        stripeCustomerId:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
    OrganizationRoleCreateInput:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        user:
          $ref: "#/components/schemas/UserCreateNestedOneWithoutOrganizationRolesInput"
        organization:
          $ref: "#/components/schemas/OrganizationCreateNestedOneWithoutRolesInput"
      required:
        - name
        - organization
    OrganizationRoleUpdateInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        user:
          $ref: "#/components/schemas/UserUpdateOneRequiredWithoutOrganizationRolesNested\
            Input"
        organization:
          $ref: "#/components/schemas/OrganizationUpdateOneRequiredWithoutRolesNestedInpu\
            t"
    OrganizationRoleCreateManyInput:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        userId:
          type: string
        organizationId:
          type: string
      required:
        - name
        - organizationId
    OrganizationRoleUpdateManyMutationInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
    AgentCreateInput:
      type: object
      properties:
        id:
          type: string
        provider:
          type: string
        modelType:
          type: string
        numAgents:
          type: integer
        isActive:
          type: boolean
        anthropicApiKey:
          oneOf:
            - type: "null"
            - type: string
        awsAccessKeyId:
          oneOf:
            - type: "null"
            - type: string
        awsSecretAccessKey:
          oneOf:
            - type: "null"
            - type: string
        awsSessionToken:
          oneOf:
            - type: "null"
            - type: string
        awsRegion:
          oneOf:
            - type: "null"
            - type: string
        apiEndpoint:
          oneOf:
            - type: "null"
            - type: string
        apiKey:
          oneOf:
            - type: "null"
            - type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        organization:
          $ref: "#/components/schemas/OrganizationCreateNestedOneWithoutAgentCredentialsI\
            nput"
      required:
        - provider
        - modelType
        - organization
    AgentUpdateInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        provider:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        modelType:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        numAgents:
          oneOf:
            - type: integer
            - $ref: "#/components/schemas/IntFieldUpdateOperationsInput"
        isActive:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/BoolFieldUpdateOperationsInput"
        anthropicApiKey:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        awsAccessKeyId:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        awsSecretAccessKey:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        awsSessionToken:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        awsRegion:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        apiEndpoint:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        apiKey:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        organization:
          $ref: "#/components/schemas/OrganizationUpdateOneRequiredWithoutAgentCredential\
            sNestedInput"
    AgentCreateManyInput:
      type: object
      properties:
        id:
          type: string
        provider:
          type: string
        modelType:
          type: string
        numAgents:
          type: integer
        isActive:
          type: boolean
        anthropicApiKey:
          oneOf:
            - type: "null"
            - type: string
        awsAccessKeyId:
          oneOf:
            - type: "null"
            - type: string
        awsSecretAccessKey:
          oneOf:
            - type: "null"
            - type: string
        awsSessionToken:
          oneOf:
            - type: "null"
            - type: string
        awsRegion:
          oneOf:
            - type: "null"
            - type: string
        apiEndpoint:
          oneOf:
            - type: "null"
            - type: string
        apiKey:
          oneOf:
            - type: "null"
            - type: string
        organizationId:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - provider
        - modelType
        - organizationId
    AgentUpdateManyMutationInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        provider:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        modelType:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        numAgents:
          oneOf:
            - type: integer
            - $ref: "#/components/schemas/IntFieldUpdateOperationsInput"
        isActive:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/BoolFieldUpdateOperationsInput"
        anthropicApiKey:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        awsAccessKeyId:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        awsSecretAccessKey:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        awsSessionToken:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        awsRegion:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        apiEndpoint:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        apiKey:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
    IntegrationCreateInput:
      type: object
      properties:
        id:
          type: string
        type:
          $ref: "#/components/schemas/IntegrationType"
        name:
          type: string
        config:
          oneOf:
            - $ref: "#/components/schemas/JsonNullValueInput"
            - {}
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        organization:
          $ref: "#/components/schemas/OrganizationCreateNestedOneWithoutIntegrationInput"
      required:
        - type
        - name
        - config
        - organization
    IntegrationUpdateInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        type:
          oneOf:
            - $ref: "#/components/schemas/IntegrationType"
            - $ref: "#/components/schemas/EnumIntegrationTypeFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        config:
          oneOf:
            - $ref: "#/components/schemas/JsonNullValueInput"
            - {}
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        organization:
          $ref: "#/components/schemas/OrganizationUpdateOneRequiredWithoutIntegrationNest\
            edInput"
    IntegrationCreateManyInput:
      type: object
      properties:
        id:
          type: string
        type:
          $ref: "#/components/schemas/IntegrationType"
        name:
          type: string
        config:
          oneOf:
            - $ref: "#/components/schemas/JsonNullValueInput"
            - {}
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        organizationId:
          type: string
      required:
        - type
        - name
        - config
        - organizationId
    IntegrationUpdateManyMutationInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        type:
          oneOf:
            - $ref: "#/components/schemas/IntegrationType"
            - $ref: "#/components/schemas/EnumIntegrationTypeFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        config:
          oneOf:
            - $ref: "#/components/schemas/JsonNullValueInput"
            - {}
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
    StringFilter:
      type: object
      properties:
        equals:
          type: string
        in:
          type: array
          items:
            type: string
        notIn:
          type: array
          items:
            type: string
        lt:
          type: string
        lte:
          type: string
        gt:
          type: string
        gte:
          type: string
        contains:
          type: string
        startsWith:
          type: string
        endsWith:
          type: string
        mode:
          $ref: "#/components/schemas/QueryMode"
        not:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NestedStringFilter"
    StringNullableFilter:
      type: object
      properties:
        equals:
          oneOf:
            - type: "null"
            - type: string
        in:
          oneOf:
            - type: "null"
            - type: array
              items:
                type: string
        notIn:
          oneOf:
            - type: "null"
            - type: array
              items:
                type: string
        lt:
          type: string
        lte:
          type: string
        gt:
          type: string
        gte:
          type: string
        contains:
          type: string
        startsWith:
          type: string
        endsWith:
          type: string
        mode:
          $ref: "#/components/schemas/QueryMode"
        not:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NestedStringNullableFilter"
            - type: "null"
    EnumUserStatusFilter:
      type: object
      properties:
        equals:
          $ref: "#/components/schemas/UserStatus"
        in:
          type: array
          items:
            $ref: "#/components/schemas/UserStatus"
        notIn:
          type: array
          items:
            $ref: "#/components/schemas/UserStatus"
        not:
          oneOf:
            - $ref: "#/components/schemas/UserStatus"
            - $ref: "#/components/schemas/NestedEnumUserStatusFilter"
    DateTimeFilter:
      type: object
      properties:
        equals:
          type: string
          format: date-time
        in:
          type: array
          items:
            type: string
            format: date-time
        notIn:
          type: array
          items:
            type: string
            format: date-time
        lt:
          type: string
          format: date-time
        lte:
          type: string
          format: date-time
        gt:
          type: string
          format: date-time
        gte:
          type: string
          format: date-time
        not:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NestedDateTimeFilter"
    OrganizationRoleListRelationFilter:
      type: object
      properties:
        every:
          $ref: "#/components/schemas/OrganizationRoleWhereInput"
        some:
          $ref: "#/components/schemas/OrganizationRoleWhereInput"
        none:
          $ref: "#/components/schemas/OrganizationRoleWhereInput"
    TestListRelationFilter:
      type: object
      properties:
        every:
          $ref: "#/components/schemas/TestWhereInput"
        some:
          $ref: "#/components/schemas/TestWhereInput"
        none:
          $ref: "#/components/schemas/TestWhereInput"
    TestRunListRelationFilter:
      type: object
      properties:
        every:
          $ref: "#/components/schemas/TestRunWhereInput"
        some:
          $ref: "#/components/schemas/TestRunWhereInput"
        none:
          $ref: "#/components/schemas/TestRunWhereInput"
    TestShareListRelationFilter:
      type: object
      properties:
        every:
          $ref: "#/components/schemas/TestShareWhereInput"
        some:
          $ref: "#/components/schemas/TestShareWhereInput"
        none:
          $ref: "#/components/schemas/TestShareWhereInput"
    SortOrderInput:
      type: object
      properties:
        sort:
          $ref: "#/components/schemas/SortOrder"
        nulls:
          $ref: "#/components/schemas/NullsOrder"
      required:
        - sort
    OrganizationRoleOrderByRelationAggregateInput:
      type: object
      properties:
        _count:
          $ref: "#/components/schemas/SortOrder"
    TestOrderByRelationAggregateInput:
      type: object
      properties:
        _count:
          $ref: "#/components/schemas/SortOrder"
    TestRunOrderByRelationAggregateInput:
      type: object
      properties:
        _count:
          $ref: "#/components/schemas/SortOrder"
    TestShareOrderByRelationAggregateInput:
      type: object
      properties:
        _count:
          $ref: "#/components/schemas/SortOrder"
    StringWithAggregatesFilter:
      type: object
      properties:
        equals:
          type: string
        in:
          type: array
          items:
            type: string
        notIn:
          type: array
          items:
            type: string
        lt:
          type: string
        lte:
          type: string
        gt:
          type: string
        gte:
          type: string
        contains:
          type: string
        startsWith:
          type: string
        endsWith:
          type: string
        mode:
          $ref: "#/components/schemas/QueryMode"
        not:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NestedStringWithAggregatesFilter"
        _count:
          $ref: "#/components/schemas/NestedIntFilter"
        _min:
          $ref: "#/components/schemas/NestedStringFilter"
        _max:
          $ref: "#/components/schemas/NestedStringFilter"
    StringNullableWithAggregatesFilter:
      type: object
      properties:
        equals:
          oneOf:
            - type: "null"
            - type: string
        in:
          oneOf:
            - type: "null"
            - type: array
              items:
                type: string
        notIn:
          oneOf:
            - type: "null"
            - type: array
              items:
                type: string
        lt:
          type: string
        lte:
          type: string
        gt:
          type: string
        gte:
          type: string
        contains:
          type: string
        startsWith:
          type: string
        endsWith:
          type: string
        mode:
          $ref: "#/components/schemas/QueryMode"
        not:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NestedStringNullableWithAggregatesFilter"
            - type: "null"
        _count:
          $ref: "#/components/schemas/NestedIntNullableFilter"
        _min:
          $ref: "#/components/schemas/NestedStringNullableFilter"
        _max:
          $ref: "#/components/schemas/NestedStringNullableFilter"
    EnumUserStatusWithAggregatesFilter:
      type: object
      properties:
        equals:
          $ref: "#/components/schemas/UserStatus"
        in:
          type: array
          items:
            $ref: "#/components/schemas/UserStatus"
        notIn:
          type: array
          items:
            $ref: "#/components/schemas/UserStatus"
        not:
          oneOf:
            - $ref: "#/components/schemas/UserStatus"
            - $ref: "#/components/schemas/NestedEnumUserStatusWithAggregatesFilter"
        _count:
          $ref: "#/components/schemas/NestedIntFilter"
        _min:
          $ref: "#/components/schemas/NestedEnumUserStatusFilter"
        _max:
          $ref: "#/components/schemas/NestedEnumUserStatusFilter"
    DateTimeWithAggregatesFilter:
      type: object
      properties:
        equals:
          type: string
          format: date-time
        in:
          type: array
          items:
            type: string
            format: date-time
        notIn:
          type: array
          items:
            type: string
            format: date-time
        lt:
          type: string
          format: date-time
        lte:
          type: string
          format: date-time
        gt:
          type: string
          format: date-time
        gte:
          type: string
          format: date-time
        not:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NestedDateTimeWithAggregatesFilter"
        _count:
          $ref: "#/components/schemas/NestedIntFilter"
        _min:
          $ref: "#/components/schemas/NestedDateTimeFilter"
        _max:
          $ref: "#/components/schemas/NestedDateTimeFilter"
    JsonNullableFilter:
      type: object
      properties:
        equals:
          oneOf:
            - {}
            - $ref: "#/components/schemas/JsonNullValueFilter"
        path:
          type: array
          items:
            type: string
        string_contains:
          type: string
        string_starts_with:
          type: string
        string_ends_with:
          type: string
        array_contains:
          oneOf:
            - type: "null"
            - {}
        array_starts_with:
          oneOf:
            - type: "null"
            - {}
        array_ends_with:
          oneOf:
            - type: "null"
            - {}
        lt: {}
        lte: {}
        gt: {}
        gte: {}
        not:
          oneOf:
            - {}
            - $ref: "#/components/schemas/JsonNullValueFilter"
    OrganizationNullableRelationFilter:
      type: object
      properties:
        is:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/OrganizationWhereInput"
        isNot:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/OrganizationWhereInput"
    JsonNullableWithAggregatesFilter:
      type: object
      properties:
        equals:
          oneOf:
            - {}
            - $ref: "#/components/schemas/JsonNullValueFilter"
        path:
          type: array
          items:
            type: string
        string_contains:
          type: string
        string_starts_with:
          type: string
        string_ends_with:
          type: string
        array_contains:
          oneOf:
            - type: "null"
            - {}
        array_starts_with:
          oneOf:
            - type: "null"
            - {}
        array_ends_with:
          oneOf:
            - type: "null"
            - {}
        lt: {}
        lte: {}
        gt: {}
        gte: {}
        not:
          oneOf:
            - {}
            - $ref: "#/components/schemas/JsonNullValueFilter"
        _count:
          $ref: "#/components/schemas/NestedIntNullableFilter"
        _min:
          $ref: "#/components/schemas/NestedJsonNullableFilter"
        _max:
          $ref: "#/components/schemas/NestedJsonNullableFilter"
    BoolFilter:
      type: object
      properties:
        equals:
          type: boolean
        not:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/NestedBoolFilter"
    ProjectNullableRelationFilter:
      type: object
      properties:
        is:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/ProjectWhereInput"
        isNot:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/ProjectWhereInput"
    UserNullableRelationFilter:
      type: object
      properties:
        is:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/UserWhereInput"
        isNot:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/UserWhereInput"
    BoolWithAggregatesFilter:
      type: object
      properties:
        equals:
          type: boolean
        not:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/NestedBoolWithAggregatesFilter"
        _count:
          $ref: "#/components/schemas/NestedIntFilter"
        _min:
          $ref: "#/components/schemas/NestedBoolFilter"
        _max:
          $ref: "#/components/schemas/NestedBoolFilter"
    TestNullableRelationFilter:
      type: object
      properties:
        is:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/TestWhereInput"
        isNot:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/TestWhereInput"
    TestStepListRelationFilter:
      type: object
      properties:
        every:
          $ref: "#/components/schemas/TestStepWhereInput"
        some:
          $ref: "#/components/schemas/TestStepWhereInput"
        none:
          $ref: "#/components/schemas/TestStepWhereInput"
    TestStepOrderByRelationAggregateInput:
      type: object
      properties:
        _count:
          $ref: "#/components/schemas/SortOrder"
    FloatFilter:
      type: object
      properties:
        equals:
          type: number
        in:
          type: array
          items:
            type: number
        notIn:
          type: array
          items:
            type: number
        lt:
          type: number
        lte:
          type: number
        gt:
          type: number
        gte:
          type: number
        not:
          oneOf:
            - type: number
            - $ref: "#/components/schemas/NestedFloatFilter"
    TestRunNullableRelationFilter:
      type: object
      properties:
        is:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/TestRunWhereInput"
        isNot:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/TestRunWhereInput"
    FloatWithAggregatesFilter:
      type: object
      properties:
        equals:
          type: number
        in:
          type: array
          items:
            type: number
        notIn:
          type: array
          items:
            type: number
        lt:
          type: number
        lte:
          type: number
        gt:
          type: number
        gte:
          type: number
        not:
          oneOf:
            - type: number
            - $ref: "#/components/schemas/NestedFloatWithAggregatesFilter"
        _count:
          $ref: "#/components/schemas/NestedIntFilter"
        _avg:
          $ref: "#/components/schemas/NestedFloatFilter"
        _sum:
          $ref: "#/components/schemas/NestedFloatFilter"
        _min:
          $ref: "#/components/schemas/NestedFloatFilter"
        _max:
          $ref: "#/components/schemas/NestedFloatFilter"
    ProjectListRelationFilter:
      type: object
      properties:
        every:
          $ref: "#/components/schemas/ProjectWhereInput"
        some:
          $ref: "#/components/schemas/ProjectWhereInput"
        none:
          $ref: "#/components/schemas/ProjectWhereInput"
    AgentListRelationFilter:
      type: object
      properties:
        every:
          $ref: "#/components/schemas/AgentWhereInput"
        some:
          $ref: "#/components/schemas/AgentWhereInput"
        none:
          $ref: "#/components/schemas/AgentWhereInput"
    IntegrationListRelationFilter:
      type: object
      properties:
        every:
          $ref: "#/components/schemas/IntegrationWhereInput"
        some:
          $ref: "#/components/schemas/IntegrationWhereInput"
        none:
          $ref: "#/components/schemas/IntegrationWhereInput"
    ProjectOrderByRelationAggregateInput:
      type: object
      properties:
        _count:
          $ref: "#/components/schemas/SortOrder"
    AgentOrderByRelationAggregateInput:
      type: object
      properties:
        _count:
          $ref: "#/components/schemas/SortOrder"
    IntegrationOrderByRelationAggregateInput:
      type: object
      properties:
        _count:
          $ref: "#/components/schemas/SortOrder"
    UserRelationFilter:
      type: object
      properties:
        is:
          $ref: "#/components/schemas/UserWhereInput"
        isNot:
          $ref: "#/components/schemas/UserWhereInput"
    OrganizationRelationFilter:
      type: object
      properties:
        is:
          $ref: "#/components/schemas/OrganizationWhereInput"
        isNot:
          $ref: "#/components/schemas/OrganizationWhereInput"
    IntFilter:
      type: object
      properties:
        equals:
          type: integer
        in:
          type: array
          items:
            type: integer
        notIn:
          type: array
          items:
            type: integer
        lt:
          type: integer
        lte:
          type: integer
        gt:
          type: integer
        gte:
          type: integer
        not:
          oneOf:
            - type: integer
            - $ref: "#/components/schemas/NestedIntFilter"
    IntWithAggregatesFilter:
      type: object
      properties:
        equals:
          type: integer
        in:
          type: array
          items:
            type: integer
        notIn:
          type: array
          items:
            type: integer
        lt:
          type: integer
        lte:
          type: integer
        gt:
          type: integer
        gte:
          type: integer
        not:
          oneOf:
            - type: integer
            - $ref: "#/components/schemas/NestedIntWithAggregatesFilter"
        _count:
          $ref: "#/components/schemas/NestedIntFilter"
        _avg:
          $ref: "#/components/schemas/NestedFloatFilter"
        _sum:
          $ref: "#/components/schemas/NestedIntFilter"
        _min:
          $ref: "#/components/schemas/NestedIntFilter"
        _max:
          $ref: "#/components/schemas/NestedIntFilter"
    EnumIntegrationTypeFilter:
      type: object
      properties:
        equals:
          $ref: "#/components/schemas/IntegrationType"
        in:
          type: array
          items:
            $ref: "#/components/schemas/IntegrationType"
        notIn:
          type: array
          items:
            $ref: "#/components/schemas/IntegrationType"
        not:
          oneOf:
            - $ref: "#/components/schemas/IntegrationType"
            - $ref: "#/components/schemas/NestedEnumIntegrationTypeFilter"
    JsonFilter:
      type: object
      properties:
        equals:
          oneOf:
            - {}
            - $ref: "#/components/schemas/JsonNullValueFilter"
        path:
          type: array
          items:
            type: string
        string_contains:
          type: string
        string_starts_with:
          type: string
        string_ends_with:
          type: string
        array_contains:
          oneOf:
            - type: "null"
            - {}
        array_starts_with:
          oneOf:
            - type: "null"
            - {}
        array_ends_with:
          oneOf:
            - type: "null"
            - {}
        lt: {}
        lte: {}
        gt: {}
        gte: {}
        not:
          oneOf:
            - {}
            - $ref: "#/components/schemas/JsonNullValueFilter"
    EnumIntegrationTypeWithAggregatesFilter:
      type: object
      properties:
        equals:
          $ref: "#/components/schemas/IntegrationType"
        in:
          type: array
          items:
            $ref: "#/components/schemas/IntegrationType"
        notIn:
          type: array
          items:
            $ref: "#/components/schemas/IntegrationType"
        not:
          oneOf:
            - $ref: "#/components/schemas/IntegrationType"
            - $ref: "#/components/schemas/NestedEnumIntegrationTypeWithAggregatesFilter"
        _count:
          $ref: "#/components/schemas/NestedIntFilter"
        _min:
          $ref: "#/components/schemas/NestedEnumIntegrationTypeFilter"
        _max:
          $ref: "#/components/schemas/NestedEnumIntegrationTypeFilter"
    JsonWithAggregatesFilter:
      type: object
      properties:
        equals:
          oneOf:
            - {}
            - $ref: "#/components/schemas/JsonNullValueFilter"
        path:
          type: array
          items:
            type: string
        string_contains:
          type: string
        string_starts_with:
          type: string
        string_ends_with:
          type: string
        array_contains:
          oneOf:
            - type: "null"
            - {}
        array_starts_with:
          oneOf:
            - type: "null"
            - {}
        array_ends_with:
          oneOf:
            - type: "null"
            - {}
        lt: {}
        lte: {}
        gt: {}
        gte: {}
        not:
          oneOf:
            - {}
            - $ref: "#/components/schemas/JsonNullValueFilter"
        _count:
          $ref: "#/components/schemas/NestedIntFilter"
        _min:
          $ref: "#/components/schemas/NestedJsonFilter"
        _max:
          $ref: "#/components/schemas/NestedJsonFilter"
    OrganizationRoleCreateNestedManyWithoutUserInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/OrganizationRoleCreateWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/OrganizationRoleCreateWithoutUserInput"
            - $ref: "#/components/schemas/OrganizationRoleUncheckedCreateWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/OrganizationRoleUncheckedCreateWithoutUserInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/OrganizationRoleCreateOrConnectWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/OrganizationRoleCreateOrConnectWithoutUserInput"
        createMany:
          $ref: "#/components/schemas/OrganizationRoleCreateManyUserInputEnvelope"
        connect:
          oneOf:
            - $ref: "#/components/schemas/OrganizationRoleWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/OrganizationRoleWhereUniqueInput"
    TestCreateNestedManyWithoutCreatedByInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/TestCreateWithoutCreatedByInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestCreateWithoutCreatedByInput"
            - $ref: "#/components/schemas/TestUncheckedCreateWithoutCreatedByInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestUncheckedCreateWithoutCreatedByInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/TestCreateOrConnectWithoutCreatedByInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestCreateOrConnectWithoutCreatedByInput"
        createMany:
          $ref: "#/components/schemas/TestCreateManyCreatedByInputEnvelope"
        connect:
          oneOf:
            - $ref: "#/components/schemas/TestWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestWhereUniqueInput"
    TestRunCreateNestedManyWithoutExecutedByInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/TestRunCreateWithoutExecutedByInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestRunCreateWithoutExecutedByInput"
            - $ref: "#/components/schemas/TestRunUncheckedCreateWithoutExecutedByInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestRunUncheckedCreateWithoutExecutedByInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/TestRunCreateOrConnectWithoutExecutedByInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestRunCreateOrConnectWithoutExecutedByInput"
        createMany:
          $ref: "#/components/schemas/TestRunCreateManyExecutedByInputEnvelope"
        connect:
          oneOf:
            - $ref: "#/components/schemas/TestRunWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestRunWhereUniqueInput"
    TestShareCreateNestedManyWithoutUserInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/TestShareCreateWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestShareCreateWithoutUserInput"
            - $ref: "#/components/schemas/TestShareUncheckedCreateWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestShareUncheckedCreateWithoutUserInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/TestShareCreateOrConnectWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestShareCreateOrConnectWithoutUserInput"
        createMany:
          $ref: "#/components/schemas/TestShareCreateManyUserInputEnvelope"
        connect:
          oneOf:
            - $ref: "#/components/schemas/TestShareWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestShareWhereUniqueInput"
    OrganizationRoleUncheckedCreateNestedManyWithoutUserInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/OrganizationRoleCreateWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/OrganizationRoleCreateWithoutUserInput"
            - $ref: "#/components/schemas/OrganizationRoleUncheckedCreateWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/OrganizationRoleUncheckedCreateWithoutUserInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/OrganizationRoleCreateOrConnectWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/OrganizationRoleCreateOrConnectWithoutUserInput"
        createMany:
          $ref: "#/components/schemas/OrganizationRoleCreateManyUserInputEnvelope"
        connect:
          oneOf:
            - $ref: "#/components/schemas/OrganizationRoleWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/OrganizationRoleWhereUniqueInput"
    TestUncheckedCreateNestedManyWithoutCreatedByInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/TestCreateWithoutCreatedByInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestCreateWithoutCreatedByInput"
            - $ref: "#/components/schemas/TestUncheckedCreateWithoutCreatedByInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestUncheckedCreateWithoutCreatedByInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/TestCreateOrConnectWithoutCreatedByInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestCreateOrConnectWithoutCreatedByInput"
        createMany:
          $ref: "#/components/schemas/TestCreateManyCreatedByInputEnvelope"
        connect:
          oneOf:
            - $ref: "#/components/schemas/TestWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestWhereUniqueInput"
    TestRunUncheckedCreateNestedManyWithoutExecutedByInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/TestRunCreateWithoutExecutedByInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestRunCreateWithoutExecutedByInput"
            - $ref: "#/components/schemas/TestRunUncheckedCreateWithoutExecutedByInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestRunUncheckedCreateWithoutExecutedByInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/TestRunCreateOrConnectWithoutExecutedByInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestRunCreateOrConnectWithoutExecutedByInput"
        createMany:
          $ref: "#/components/schemas/TestRunCreateManyExecutedByInputEnvelope"
        connect:
          oneOf:
            - $ref: "#/components/schemas/TestRunWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestRunWhereUniqueInput"
    TestShareUncheckedCreateNestedManyWithoutUserInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/TestShareCreateWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestShareCreateWithoutUserInput"
            - $ref: "#/components/schemas/TestShareUncheckedCreateWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestShareUncheckedCreateWithoutUserInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/TestShareCreateOrConnectWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestShareCreateOrConnectWithoutUserInput"
        createMany:
          $ref: "#/components/schemas/TestShareCreateManyUserInputEnvelope"
        connect:
          oneOf:
            - $ref: "#/components/schemas/TestShareWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestShareWhereUniqueInput"
    StringFieldUpdateOperationsInput:
      type: object
      properties:
        set:
          type: string
    NullableStringFieldUpdateOperationsInput:
      type: object
      properties:
        set:
          oneOf:
            - type: "null"
            - type: string
    EnumUserStatusFieldUpdateOperationsInput:
      type: object
      properties:
        set:
          $ref: "#/components/schemas/UserStatus"
    DateTimeFieldUpdateOperationsInput:
      type: object
      properties:
        set:
          type: string
          format: date-time
    OrganizationRoleUpdateManyWithoutUserNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/OrganizationRoleCreateWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/OrganizationRoleCreateWithoutUserInput"
            - $ref: "#/components/schemas/OrganizationRoleUncheckedCreateWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/OrganizationRoleUncheckedCreateWithoutUserInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/OrganizationRoleCreateOrConnectWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/OrganizationRoleCreateOrConnectWithoutUserInput"
        upsert:
          oneOf:
            - $ref: "#/components/schemas/OrganizationRoleUpsertWithWhereUniqueWithoutUserInp\
                ut"
            - type: array
              items:
                $ref: "#/components/schemas/OrganizationRoleUpsertWithWhereUniqueWithoutUserInp\
                  ut"
        createMany:
          $ref: "#/components/schemas/OrganizationRoleCreateManyUserInputEnvelope"
        set:
          oneOf:
            - $ref: "#/components/schemas/OrganizationRoleWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/OrganizationRoleWhereUniqueInput"
        disconnect:
          oneOf:
            - $ref: "#/components/schemas/OrganizationRoleWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/OrganizationRoleWhereUniqueInput"
        delete:
          oneOf:
            - $ref: "#/components/schemas/OrganizationRoleWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/OrganizationRoleWhereUniqueInput"
        connect:
          oneOf:
            - $ref: "#/components/schemas/OrganizationRoleWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/OrganizationRoleWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/OrganizationRoleUpdateWithWhereUniqueWithoutUserInp\
                ut"
            - type: array
              items:
                $ref: "#/components/schemas/OrganizationRoleUpdateWithWhereUniqueWithoutUserInp\
                  ut"
        updateMany:
          oneOf:
            - $ref: "#/components/schemas/OrganizationRoleUpdateManyWithWhereWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/OrganizationRoleUpdateManyWithWhereWithoutUserInput"
        deleteMany:
          oneOf:
            - $ref: "#/components/schemas/OrganizationRoleScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/OrganizationRoleScalarWhereInput"
    TestUpdateManyWithoutCreatedByNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/TestCreateWithoutCreatedByInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestCreateWithoutCreatedByInput"
            - $ref: "#/components/schemas/TestUncheckedCreateWithoutCreatedByInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestUncheckedCreateWithoutCreatedByInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/TestCreateOrConnectWithoutCreatedByInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestCreateOrConnectWithoutCreatedByInput"
        upsert:
          oneOf:
            - $ref: "#/components/schemas/TestUpsertWithWhereUniqueWithoutCreatedByInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestUpsertWithWhereUniqueWithoutCreatedByInput"
        createMany:
          $ref: "#/components/schemas/TestCreateManyCreatedByInputEnvelope"
        set:
          oneOf:
            - $ref: "#/components/schemas/TestWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestWhereUniqueInput"
        disconnect:
          oneOf:
            - $ref: "#/components/schemas/TestWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestWhereUniqueInput"
        delete:
          oneOf:
            - $ref: "#/components/schemas/TestWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestWhereUniqueInput"
        connect:
          oneOf:
            - $ref: "#/components/schemas/TestWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/TestUpdateWithWhereUniqueWithoutCreatedByInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestUpdateWithWhereUniqueWithoutCreatedByInput"
        updateMany:
          oneOf:
            - $ref: "#/components/schemas/TestUpdateManyWithWhereWithoutCreatedByInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestUpdateManyWithWhereWithoutCreatedByInput"
        deleteMany:
          oneOf:
            - $ref: "#/components/schemas/TestScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestScalarWhereInput"
    TestRunUpdateManyWithoutExecutedByNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/TestRunCreateWithoutExecutedByInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestRunCreateWithoutExecutedByInput"
            - $ref: "#/components/schemas/TestRunUncheckedCreateWithoutExecutedByInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestRunUncheckedCreateWithoutExecutedByInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/TestRunCreateOrConnectWithoutExecutedByInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestRunCreateOrConnectWithoutExecutedByInput"
        upsert:
          oneOf:
            - $ref: "#/components/schemas/TestRunUpsertWithWhereUniqueWithoutExecutedByInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestRunUpsertWithWhereUniqueWithoutExecutedByInput"
        createMany:
          $ref: "#/components/schemas/TestRunCreateManyExecutedByInputEnvelope"
        set:
          oneOf:
            - $ref: "#/components/schemas/TestRunWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestRunWhereUniqueInput"
        disconnect:
          oneOf:
            - $ref: "#/components/schemas/TestRunWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestRunWhereUniqueInput"
        delete:
          oneOf:
            - $ref: "#/components/schemas/TestRunWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestRunWhereUniqueInput"
        connect:
          oneOf:
            - $ref: "#/components/schemas/TestRunWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestRunWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/TestRunUpdateWithWhereUniqueWithoutExecutedByInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestRunUpdateWithWhereUniqueWithoutExecutedByInput"
        updateMany:
          oneOf:
            - $ref: "#/components/schemas/TestRunUpdateManyWithWhereWithoutExecutedByInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestRunUpdateManyWithWhereWithoutExecutedByInput"
        deleteMany:
          oneOf:
            - $ref: "#/components/schemas/TestRunScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestRunScalarWhereInput"
    TestShareUpdateManyWithoutUserNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/TestShareCreateWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestShareCreateWithoutUserInput"
            - $ref: "#/components/schemas/TestShareUncheckedCreateWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestShareUncheckedCreateWithoutUserInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/TestShareCreateOrConnectWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestShareCreateOrConnectWithoutUserInput"
        upsert:
          oneOf:
            - $ref: "#/components/schemas/TestShareUpsertWithWhereUniqueWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestShareUpsertWithWhereUniqueWithoutUserInput"
        createMany:
          $ref: "#/components/schemas/TestShareCreateManyUserInputEnvelope"
        set:
          oneOf:
            - $ref: "#/components/schemas/TestShareWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestShareWhereUniqueInput"
        disconnect:
          oneOf:
            - $ref: "#/components/schemas/TestShareWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestShareWhereUniqueInput"
        delete:
          oneOf:
            - $ref: "#/components/schemas/TestShareWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestShareWhereUniqueInput"
        connect:
          oneOf:
            - $ref: "#/components/schemas/TestShareWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestShareWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/TestShareUpdateWithWhereUniqueWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestShareUpdateWithWhereUniqueWithoutUserInput"
        updateMany:
          oneOf:
            - $ref: "#/components/schemas/TestShareUpdateManyWithWhereWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestShareUpdateManyWithWhereWithoutUserInput"
        deleteMany:
          oneOf:
            - $ref: "#/components/schemas/TestShareScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestShareScalarWhereInput"
    OrganizationRoleUncheckedUpdateManyWithoutUserNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/OrganizationRoleCreateWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/OrganizationRoleCreateWithoutUserInput"
            - $ref: "#/components/schemas/OrganizationRoleUncheckedCreateWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/OrganizationRoleUncheckedCreateWithoutUserInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/OrganizationRoleCreateOrConnectWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/OrganizationRoleCreateOrConnectWithoutUserInput"
        upsert:
          oneOf:
            - $ref: "#/components/schemas/OrganizationRoleUpsertWithWhereUniqueWithoutUserInp\
                ut"
            - type: array
              items:
                $ref: "#/components/schemas/OrganizationRoleUpsertWithWhereUniqueWithoutUserInp\
                  ut"
        createMany:
          $ref: "#/components/schemas/OrganizationRoleCreateManyUserInputEnvelope"
        set:
          oneOf:
            - $ref: "#/components/schemas/OrganizationRoleWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/OrganizationRoleWhereUniqueInput"
        disconnect:
          oneOf:
            - $ref: "#/components/schemas/OrganizationRoleWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/OrganizationRoleWhereUniqueInput"
        delete:
          oneOf:
            - $ref: "#/components/schemas/OrganizationRoleWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/OrganizationRoleWhereUniqueInput"
        connect:
          oneOf:
            - $ref: "#/components/schemas/OrganizationRoleWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/OrganizationRoleWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/OrganizationRoleUpdateWithWhereUniqueWithoutUserInp\
                ut"
            - type: array
              items:
                $ref: "#/components/schemas/OrganizationRoleUpdateWithWhereUniqueWithoutUserInp\
                  ut"
        updateMany:
          oneOf:
            - $ref: "#/components/schemas/OrganizationRoleUpdateManyWithWhereWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/OrganizationRoleUpdateManyWithWhereWithoutUserInput"
        deleteMany:
          oneOf:
            - $ref: "#/components/schemas/OrganizationRoleScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/OrganizationRoleScalarWhereInput"
    TestUncheckedUpdateManyWithoutCreatedByNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/TestCreateWithoutCreatedByInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestCreateWithoutCreatedByInput"
            - $ref: "#/components/schemas/TestUncheckedCreateWithoutCreatedByInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestUncheckedCreateWithoutCreatedByInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/TestCreateOrConnectWithoutCreatedByInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestCreateOrConnectWithoutCreatedByInput"
        upsert:
          oneOf:
            - $ref: "#/components/schemas/TestUpsertWithWhereUniqueWithoutCreatedByInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestUpsertWithWhereUniqueWithoutCreatedByInput"
        createMany:
          $ref: "#/components/schemas/TestCreateManyCreatedByInputEnvelope"
        set:
          oneOf:
            - $ref: "#/components/schemas/TestWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestWhereUniqueInput"
        disconnect:
          oneOf:
            - $ref: "#/components/schemas/TestWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestWhereUniqueInput"
        delete:
          oneOf:
            - $ref: "#/components/schemas/TestWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestWhereUniqueInput"
        connect:
          oneOf:
            - $ref: "#/components/schemas/TestWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/TestUpdateWithWhereUniqueWithoutCreatedByInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestUpdateWithWhereUniqueWithoutCreatedByInput"
        updateMany:
          oneOf:
            - $ref: "#/components/schemas/TestUpdateManyWithWhereWithoutCreatedByInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestUpdateManyWithWhereWithoutCreatedByInput"
        deleteMany:
          oneOf:
            - $ref: "#/components/schemas/TestScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestScalarWhereInput"
    TestRunUncheckedUpdateManyWithoutExecutedByNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/TestRunCreateWithoutExecutedByInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestRunCreateWithoutExecutedByInput"
            - $ref: "#/components/schemas/TestRunUncheckedCreateWithoutExecutedByInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestRunUncheckedCreateWithoutExecutedByInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/TestRunCreateOrConnectWithoutExecutedByInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestRunCreateOrConnectWithoutExecutedByInput"
        upsert:
          oneOf:
            - $ref: "#/components/schemas/TestRunUpsertWithWhereUniqueWithoutExecutedByInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestRunUpsertWithWhereUniqueWithoutExecutedByInput"
        createMany:
          $ref: "#/components/schemas/TestRunCreateManyExecutedByInputEnvelope"
        set:
          oneOf:
            - $ref: "#/components/schemas/TestRunWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestRunWhereUniqueInput"
        disconnect:
          oneOf:
            - $ref: "#/components/schemas/TestRunWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestRunWhereUniqueInput"
        delete:
          oneOf:
            - $ref: "#/components/schemas/TestRunWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestRunWhereUniqueInput"
        connect:
          oneOf:
            - $ref: "#/components/schemas/TestRunWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestRunWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/TestRunUpdateWithWhereUniqueWithoutExecutedByInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestRunUpdateWithWhereUniqueWithoutExecutedByInput"
        updateMany:
          oneOf:
            - $ref: "#/components/schemas/TestRunUpdateManyWithWhereWithoutExecutedByInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestRunUpdateManyWithWhereWithoutExecutedByInput"
        deleteMany:
          oneOf:
            - $ref: "#/components/schemas/TestRunScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestRunScalarWhereInput"
    TestShareUncheckedUpdateManyWithoutUserNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/TestShareCreateWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestShareCreateWithoutUserInput"
            - $ref: "#/components/schemas/TestShareUncheckedCreateWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestShareUncheckedCreateWithoutUserInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/TestShareCreateOrConnectWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestShareCreateOrConnectWithoutUserInput"
        upsert:
          oneOf:
            - $ref: "#/components/schemas/TestShareUpsertWithWhereUniqueWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestShareUpsertWithWhereUniqueWithoutUserInput"
        createMany:
          $ref: "#/components/schemas/TestShareCreateManyUserInputEnvelope"
        set:
          oneOf:
            - $ref: "#/components/schemas/TestShareWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestShareWhereUniqueInput"
        disconnect:
          oneOf:
            - $ref: "#/components/schemas/TestShareWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestShareWhereUniqueInput"
        delete:
          oneOf:
            - $ref: "#/components/schemas/TestShareWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestShareWhereUniqueInput"
        connect:
          oneOf:
            - $ref: "#/components/schemas/TestShareWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestShareWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/TestShareUpdateWithWhereUniqueWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestShareUpdateWithWhereUniqueWithoutUserInput"
        updateMany:
          oneOf:
            - $ref: "#/components/schemas/TestShareUpdateManyWithWhereWithoutUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestShareUpdateManyWithWhereWithoutUserInput"
        deleteMany:
          oneOf:
            - $ref: "#/components/schemas/TestShareScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestShareScalarWhereInput"
    OrganizationCreateNestedOneWithoutProjectsInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/OrganizationCreateWithoutProjectsInput"
            - $ref: "#/components/schemas/OrganizationUncheckedCreateWithoutProjectsInput"
        connectOrCreate:
          $ref: "#/components/schemas/OrganizationCreateOrConnectWithoutProjectsInput"
        connect:
          $ref: "#/components/schemas/OrganizationWhereUniqueInput"
    TestCreateNestedManyWithoutProjectInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/TestCreateWithoutProjectInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestCreateWithoutProjectInput"
            - $ref: "#/components/schemas/TestUncheckedCreateWithoutProjectInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestUncheckedCreateWithoutProjectInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/TestCreateOrConnectWithoutProjectInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestCreateOrConnectWithoutProjectInput"
        createMany:
          $ref: "#/components/schemas/TestCreateManyProjectInputEnvelope"
        connect:
          oneOf:
            - $ref: "#/components/schemas/TestWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestWhereUniqueInput"
    TestUncheckedCreateNestedManyWithoutProjectInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/TestCreateWithoutProjectInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestCreateWithoutProjectInput"
            - $ref: "#/components/schemas/TestUncheckedCreateWithoutProjectInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestUncheckedCreateWithoutProjectInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/TestCreateOrConnectWithoutProjectInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestCreateOrConnectWithoutProjectInput"
        createMany:
          $ref: "#/components/schemas/TestCreateManyProjectInputEnvelope"
        connect:
          oneOf:
            - $ref: "#/components/schemas/TestWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestWhereUniqueInput"
    OrganizationUpdateOneWithoutProjectsNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/OrganizationCreateWithoutProjectsInput"
            - $ref: "#/components/schemas/OrganizationUncheckedCreateWithoutProjectsInput"
        connectOrCreate:
          $ref: "#/components/schemas/OrganizationCreateOrConnectWithoutProjectsInput"
        upsert:
          $ref: "#/components/schemas/OrganizationUpsertWithoutProjectsInput"
        disconnect:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/OrganizationWhereInput"
        delete:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/OrganizationWhereInput"
        connect:
          $ref: "#/components/schemas/OrganizationWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/OrganizationUpdateToOneWithWhereWithoutProjectsInpu\
                t"
            - $ref: "#/components/schemas/OrganizationUpdateWithoutProjectsInput"
            - $ref: "#/components/schemas/OrganizationUncheckedUpdateWithoutProjectsInput"
    TestUpdateManyWithoutProjectNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/TestCreateWithoutProjectInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestCreateWithoutProjectInput"
            - $ref: "#/components/schemas/TestUncheckedCreateWithoutProjectInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestUncheckedCreateWithoutProjectInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/TestCreateOrConnectWithoutProjectInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestCreateOrConnectWithoutProjectInput"
        upsert:
          oneOf:
            - $ref: "#/components/schemas/TestUpsertWithWhereUniqueWithoutProjectInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestUpsertWithWhereUniqueWithoutProjectInput"
        createMany:
          $ref: "#/components/schemas/TestCreateManyProjectInputEnvelope"
        set:
          oneOf:
            - $ref: "#/components/schemas/TestWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestWhereUniqueInput"
        disconnect:
          oneOf:
            - $ref: "#/components/schemas/TestWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestWhereUniqueInput"
        delete:
          oneOf:
            - $ref: "#/components/schemas/TestWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestWhereUniqueInput"
        connect:
          oneOf:
            - $ref: "#/components/schemas/TestWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/TestUpdateWithWhereUniqueWithoutProjectInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestUpdateWithWhereUniqueWithoutProjectInput"
        updateMany:
          oneOf:
            - $ref: "#/components/schemas/TestUpdateManyWithWhereWithoutProjectInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestUpdateManyWithWhereWithoutProjectInput"
        deleteMany:
          oneOf:
            - $ref: "#/components/schemas/TestScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestScalarWhereInput"
    TestUncheckedUpdateManyWithoutProjectNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/TestCreateWithoutProjectInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestCreateWithoutProjectInput"
            - $ref: "#/components/schemas/TestUncheckedCreateWithoutProjectInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestUncheckedCreateWithoutProjectInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/TestCreateOrConnectWithoutProjectInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestCreateOrConnectWithoutProjectInput"
        upsert:
          oneOf:
            - $ref: "#/components/schemas/TestUpsertWithWhereUniqueWithoutProjectInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestUpsertWithWhereUniqueWithoutProjectInput"
        createMany:
          $ref: "#/components/schemas/TestCreateManyProjectInputEnvelope"
        set:
          oneOf:
            - $ref: "#/components/schemas/TestWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestWhereUniqueInput"
        disconnect:
          oneOf:
            - $ref: "#/components/schemas/TestWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestWhereUniqueInput"
        delete:
          oneOf:
            - $ref: "#/components/schemas/TestWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestWhereUniqueInput"
        connect:
          oneOf:
            - $ref: "#/components/schemas/TestWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/TestUpdateWithWhereUniqueWithoutProjectInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestUpdateWithWhereUniqueWithoutProjectInput"
        updateMany:
          oneOf:
            - $ref: "#/components/schemas/TestUpdateManyWithWhereWithoutProjectInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestUpdateManyWithWhereWithoutProjectInput"
        deleteMany:
          oneOf:
            - $ref: "#/components/schemas/TestScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestScalarWhereInput"
    ProjectCreateNestedOneWithoutTestsInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/ProjectCreateWithoutTestsInput"
            - $ref: "#/components/schemas/ProjectUncheckedCreateWithoutTestsInput"
        connectOrCreate:
          $ref: "#/components/schemas/ProjectCreateOrConnectWithoutTestsInput"
        connect:
          $ref: "#/components/schemas/ProjectWhereUniqueInput"
    UserCreateNestedOneWithoutTestsAsCreatedByInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/UserCreateWithoutTestsAsCreatedByInput"
            - $ref: "#/components/schemas/UserUncheckedCreateWithoutTestsAsCreatedByInput"
        connectOrCreate:
          $ref: "#/components/schemas/UserCreateOrConnectWithoutTestsAsCreatedByInput"
        connect:
          $ref: "#/components/schemas/UserWhereUniqueInput"
    TestRunCreateNestedManyWithoutTestInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/TestRunCreateWithoutTestInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestRunCreateWithoutTestInput"
            - $ref: "#/components/schemas/TestRunUncheckedCreateWithoutTestInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestRunUncheckedCreateWithoutTestInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/TestRunCreateOrConnectWithoutTestInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestRunCreateOrConnectWithoutTestInput"
        createMany:
          $ref: "#/components/schemas/TestRunCreateManyTestInputEnvelope"
        connect:
          oneOf:
            - $ref: "#/components/schemas/TestRunWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestRunWhereUniqueInput"
    TestShareCreateNestedManyWithoutTestInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/TestShareCreateWithoutTestInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestShareCreateWithoutTestInput"
            - $ref: "#/components/schemas/TestShareUncheckedCreateWithoutTestInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestShareUncheckedCreateWithoutTestInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/TestShareCreateOrConnectWithoutTestInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestShareCreateOrConnectWithoutTestInput"
        createMany:
          $ref: "#/components/schemas/TestShareCreateManyTestInputEnvelope"
        connect:
          oneOf:
            - $ref: "#/components/schemas/TestShareWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestShareWhereUniqueInput"
    TestRunUncheckedCreateNestedManyWithoutTestInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/TestRunCreateWithoutTestInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestRunCreateWithoutTestInput"
            - $ref: "#/components/schemas/TestRunUncheckedCreateWithoutTestInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestRunUncheckedCreateWithoutTestInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/TestRunCreateOrConnectWithoutTestInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestRunCreateOrConnectWithoutTestInput"
        createMany:
          $ref: "#/components/schemas/TestRunCreateManyTestInputEnvelope"
        connect:
          oneOf:
            - $ref: "#/components/schemas/TestRunWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestRunWhereUniqueInput"
    TestShareUncheckedCreateNestedManyWithoutTestInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/TestShareCreateWithoutTestInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestShareCreateWithoutTestInput"
            - $ref: "#/components/schemas/TestShareUncheckedCreateWithoutTestInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestShareUncheckedCreateWithoutTestInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/TestShareCreateOrConnectWithoutTestInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestShareCreateOrConnectWithoutTestInput"
        createMany:
          $ref: "#/components/schemas/TestShareCreateManyTestInputEnvelope"
        connect:
          oneOf:
            - $ref: "#/components/schemas/TestShareWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestShareWhereUniqueInput"
    BoolFieldUpdateOperationsInput:
      type: object
      properties:
        set:
          type: boolean
    ProjectUpdateOneWithoutTestsNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/ProjectCreateWithoutTestsInput"
            - $ref: "#/components/schemas/ProjectUncheckedCreateWithoutTestsInput"
        connectOrCreate:
          $ref: "#/components/schemas/ProjectCreateOrConnectWithoutTestsInput"
        upsert:
          $ref: "#/components/schemas/ProjectUpsertWithoutTestsInput"
        disconnect:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/ProjectWhereInput"
        delete:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/ProjectWhereInput"
        connect:
          $ref: "#/components/schemas/ProjectWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/ProjectUpdateToOneWithWhereWithoutTestsInput"
            - $ref: "#/components/schemas/ProjectUpdateWithoutTestsInput"
            - $ref: "#/components/schemas/ProjectUncheckedUpdateWithoutTestsInput"
    UserUpdateOneWithoutTestsAsCreatedByNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/UserCreateWithoutTestsAsCreatedByInput"
            - $ref: "#/components/schemas/UserUncheckedCreateWithoutTestsAsCreatedByInput"
        connectOrCreate:
          $ref: "#/components/schemas/UserCreateOrConnectWithoutTestsAsCreatedByInput"
        upsert:
          $ref: "#/components/schemas/UserUpsertWithoutTestsAsCreatedByInput"
        disconnect:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/UserWhereInput"
        delete:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/UserWhereInput"
        connect:
          $ref: "#/components/schemas/UserWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/UserUpdateToOneWithWhereWithoutTestsAsCreatedByInpu\
                t"
            - $ref: "#/components/schemas/UserUpdateWithoutTestsAsCreatedByInput"
            - $ref: "#/components/schemas/UserUncheckedUpdateWithoutTestsAsCreatedByInput"
    TestRunUpdateManyWithoutTestNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/TestRunCreateWithoutTestInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestRunCreateWithoutTestInput"
            - $ref: "#/components/schemas/TestRunUncheckedCreateWithoutTestInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestRunUncheckedCreateWithoutTestInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/TestRunCreateOrConnectWithoutTestInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestRunCreateOrConnectWithoutTestInput"
        upsert:
          oneOf:
            - $ref: "#/components/schemas/TestRunUpsertWithWhereUniqueWithoutTestInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestRunUpsertWithWhereUniqueWithoutTestInput"
        createMany:
          $ref: "#/components/schemas/TestRunCreateManyTestInputEnvelope"
        set:
          oneOf:
            - $ref: "#/components/schemas/TestRunWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestRunWhereUniqueInput"
        disconnect:
          oneOf:
            - $ref: "#/components/schemas/TestRunWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestRunWhereUniqueInput"
        delete:
          oneOf:
            - $ref: "#/components/schemas/TestRunWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestRunWhereUniqueInput"
        connect:
          oneOf:
            - $ref: "#/components/schemas/TestRunWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestRunWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/TestRunUpdateWithWhereUniqueWithoutTestInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestRunUpdateWithWhereUniqueWithoutTestInput"
        updateMany:
          oneOf:
            - $ref: "#/components/schemas/TestRunUpdateManyWithWhereWithoutTestInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestRunUpdateManyWithWhereWithoutTestInput"
        deleteMany:
          oneOf:
            - $ref: "#/components/schemas/TestRunScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestRunScalarWhereInput"
    TestShareUpdateManyWithoutTestNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/TestShareCreateWithoutTestInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestShareCreateWithoutTestInput"
            - $ref: "#/components/schemas/TestShareUncheckedCreateWithoutTestInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestShareUncheckedCreateWithoutTestInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/TestShareCreateOrConnectWithoutTestInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestShareCreateOrConnectWithoutTestInput"
        upsert:
          oneOf:
            - $ref: "#/components/schemas/TestShareUpsertWithWhereUniqueWithoutTestInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestShareUpsertWithWhereUniqueWithoutTestInput"
        createMany:
          $ref: "#/components/schemas/TestShareCreateManyTestInputEnvelope"
        set:
          oneOf:
            - $ref: "#/components/schemas/TestShareWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestShareWhereUniqueInput"
        disconnect:
          oneOf:
            - $ref: "#/components/schemas/TestShareWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestShareWhereUniqueInput"
        delete:
          oneOf:
            - $ref: "#/components/schemas/TestShareWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestShareWhereUniqueInput"
        connect:
          oneOf:
            - $ref: "#/components/schemas/TestShareWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestShareWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/TestShareUpdateWithWhereUniqueWithoutTestInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestShareUpdateWithWhereUniqueWithoutTestInput"
        updateMany:
          oneOf:
            - $ref: "#/components/schemas/TestShareUpdateManyWithWhereWithoutTestInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestShareUpdateManyWithWhereWithoutTestInput"
        deleteMany:
          oneOf:
            - $ref: "#/components/schemas/TestShareScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestShareScalarWhereInput"
    TestRunUncheckedUpdateManyWithoutTestNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/TestRunCreateWithoutTestInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestRunCreateWithoutTestInput"
            - $ref: "#/components/schemas/TestRunUncheckedCreateWithoutTestInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestRunUncheckedCreateWithoutTestInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/TestRunCreateOrConnectWithoutTestInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestRunCreateOrConnectWithoutTestInput"
        upsert:
          oneOf:
            - $ref: "#/components/schemas/TestRunUpsertWithWhereUniqueWithoutTestInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestRunUpsertWithWhereUniqueWithoutTestInput"
        createMany:
          $ref: "#/components/schemas/TestRunCreateManyTestInputEnvelope"
        set:
          oneOf:
            - $ref: "#/components/schemas/TestRunWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestRunWhereUniqueInput"
        disconnect:
          oneOf:
            - $ref: "#/components/schemas/TestRunWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestRunWhereUniqueInput"
        delete:
          oneOf:
            - $ref: "#/components/schemas/TestRunWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestRunWhereUniqueInput"
        connect:
          oneOf:
            - $ref: "#/components/schemas/TestRunWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestRunWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/TestRunUpdateWithWhereUniqueWithoutTestInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestRunUpdateWithWhereUniqueWithoutTestInput"
        updateMany:
          oneOf:
            - $ref: "#/components/schemas/TestRunUpdateManyWithWhereWithoutTestInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestRunUpdateManyWithWhereWithoutTestInput"
        deleteMany:
          oneOf:
            - $ref: "#/components/schemas/TestRunScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestRunScalarWhereInput"
    TestShareUncheckedUpdateManyWithoutTestNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/TestShareCreateWithoutTestInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestShareCreateWithoutTestInput"
            - $ref: "#/components/schemas/TestShareUncheckedCreateWithoutTestInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestShareUncheckedCreateWithoutTestInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/TestShareCreateOrConnectWithoutTestInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestShareCreateOrConnectWithoutTestInput"
        upsert:
          oneOf:
            - $ref: "#/components/schemas/TestShareUpsertWithWhereUniqueWithoutTestInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestShareUpsertWithWhereUniqueWithoutTestInput"
        createMany:
          $ref: "#/components/schemas/TestShareCreateManyTestInputEnvelope"
        set:
          oneOf:
            - $ref: "#/components/schemas/TestShareWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestShareWhereUniqueInput"
        disconnect:
          oneOf:
            - $ref: "#/components/schemas/TestShareWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestShareWhereUniqueInput"
        delete:
          oneOf:
            - $ref: "#/components/schemas/TestShareWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestShareWhereUniqueInput"
        connect:
          oneOf:
            - $ref: "#/components/schemas/TestShareWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestShareWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/TestShareUpdateWithWhereUniqueWithoutTestInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestShareUpdateWithWhereUniqueWithoutTestInput"
        updateMany:
          oneOf:
            - $ref: "#/components/schemas/TestShareUpdateManyWithWhereWithoutTestInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestShareUpdateManyWithWhereWithoutTestInput"
        deleteMany:
          oneOf:
            - $ref: "#/components/schemas/TestShareScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestShareScalarWhereInput"
    TestCreateNestedOneWithoutTestRunsInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/TestCreateWithoutTestRunsInput"
            - $ref: "#/components/schemas/TestUncheckedCreateWithoutTestRunsInput"
        connectOrCreate:
          $ref: "#/components/schemas/TestCreateOrConnectWithoutTestRunsInput"
        connect:
          $ref: "#/components/schemas/TestWhereUniqueInput"
    UserCreateNestedOneWithoutTestRunsAsExecutedByInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/UserCreateWithoutTestRunsAsExecutedByInput"
            - $ref: "#/components/schemas/UserUncheckedCreateWithoutTestRunsAsExecutedByInput"
        connectOrCreate:
          $ref: "#/components/schemas/UserCreateOrConnectWithoutTestRunsAsExecutedByInput"
        connect:
          $ref: "#/components/schemas/UserWhereUniqueInput"
    TestStepCreateNestedManyWithoutTestRunInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/TestStepCreateWithoutTestRunInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestStepCreateWithoutTestRunInput"
            - $ref: "#/components/schemas/TestStepUncheckedCreateWithoutTestRunInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestStepUncheckedCreateWithoutTestRunInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/TestStepCreateOrConnectWithoutTestRunInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestStepCreateOrConnectWithoutTestRunInput"
        createMany:
          $ref: "#/components/schemas/TestStepCreateManyTestRunInputEnvelope"
        connect:
          oneOf:
            - $ref: "#/components/schemas/TestStepWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestStepWhereUniqueInput"
    TestStepUncheckedCreateNestedManyWithoutTestRunInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/TestStepCreateWithoutTestRunInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestStepCreateWithoutTestRunInput"
            - $ref: "#/components/schemas/TestStepUncheckedCreateWithoutTestRunInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestStepUncheckedCreateWithoutTestRunInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/TestStepCreateOrConnectWithoutTestRunInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestStepCreateOrConnectWithoutTestRunInput"
        createMany:
          $ref: "#/components/schemas/TestStepCreateManyTestRunInputEnvelope"
        connect:
          oneOf:
            - $ref: "#/components/schemas/TestStepWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestStepWhereUniqueInput"
    TestUpdateOneWithoutTestRunsNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/TestCreateWithoutTestRunsInput"
            - $ref: "#/components/schemas/TestUncheckedCreateWithoutTestRunsInput"
        connectOrCreate:
          $ref: "#/components/schemas/TestCreateOrConnectWithoutTestRunsInput"
        upsert:
          $ref: "#/components/schemas/TestUpsertWithoutTestRunsInput"
        disconnect:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/TestWhereInput"
        delete:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/TestWhereInput"
        connect:
          $ref: "#/components/schemas/TestWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/TestUpdateToOneWithWhereWithoutTestRunsInput"
            - $ref: "#/components/schemas/TestUpdateWithoutTestRunsInput"
            - $ref: "#/components/schemas/TestUncheckedUpdateWithoutTestRunsInput"
    UserUpdateOneWithoutTestRunsAsExecutedByNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/UserCreateWithoutTestRunsAsExecutedByInput"
            - $ref: "#/components/schemas/UserUncheckedCreateWithoutTestRunsAsExecutedByInput"
        connectOrCreate:
          $ref: "#/components/schemas/UserCreateOrConnectWithoutTestRunsAsExecutedByInput"
        upsert:
          $ref: "#/components/schemas/UserUpsertWithoutTestRunsAsExecutedByInput"
        disconnect:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/UserWhereInput"
        delete:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/UserWhereInput"
        connect:
          $ref: "#/components/schemas/UserWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/UserUpdateToOneWithWhereWithoutTestRunsAsExecutedBy\
                Input"
            - $ref: "#/components/schemas/UserUpdateWithoutTestRunsAsExecutedByInput"
            - $ref: "#/components/schemas/UserUncheckedUpdateWithoutTestRunsAsExecutedByInput"
    TestStepUpdateManyWithoutTestRunNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/TestStepCreateWithoutTestRunInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestStepCreateWithoutTestRunInput"
            - $ref: "#/components/schemas/TestStepUncheckedCreateWithoutTestRunInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestStepUncheckedCreateWithoutTestRunInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/TestStepCreateOrConnectWithoutTestRunInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestStepCreateOrConnectWithoutTestRunInput"
        upsert:
          oneOf:
            - $ref: "#/components/schemas/TestStepUpsertWithWhereUniqueWithoutTestRunInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestStepUpsertWithWhereUniqueWithoutTestRunInput"
        createMany:
          $ref: "#/components/schemas/TestStepCreateManyTestRunInputEnvelope"
        set:
          oneOf:
            - $ref: "#/components/schemas/TestStepWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestStepWhereUniqueInput"
        disconnect:
          oneOf:
            - $ref: "#/components/schemas/TestStepWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestStepWhereUniqueInput"
        delete:
          oneOf:
            - $ref: "#/components/schemas/TestStepWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestStepWhereUniqueInput"
        connect:
          oneOf:
            - $ref: "#/components/schemas/TestStepWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestStepWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/TestStepUpdateWithWhereUniqueWithoutTestRunInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestStepUpdateWithWhereUniqueWithoutTestRunInput"
        updateMany:
          oneOf:
            - $ref: "#/components/schemas/TestStepUpdateManyWithWhereWithoutTestRunInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestStepUpdateManyWithWhereWithoutTestRunInput"
        deleteMany:
          oneOf:
            - $ref: "#/components/schemas/TestStepScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestStepScalarWhereInput"
    TestStepUncheckedUpdateManyWithoutTestRunNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/TestStepCreateWithoutTestRunInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestStepCreateWithoutTestRunInput"
            - $ref: "#/components/schemas/TestStepUncheckedCreateWithoutTestRunInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestStepUncheckedCreateWithoutTestRunInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/TestStepCreateOrConnectWithoutTestRunInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestStepCreateOrConnectWithoutTestRunInput"
        upsert:
          oneOf:
            - $ref: "#/components/schemas/TestStepUpsertWithWhereUniqueWithoutTestRunInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestStepUpsertWithWhereUniqueWithoutTestRunInput"
        createMany:
          $ref: "#/components/schemas/TestStepCreateManyTestRunInputEnvelope"
        set:
          oneOf:
            - $ref: "#/components/schemas/TestStepWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestStepWhereUniqueInput"
        disconnect:
          oneOf:
            - $ref: "#/components/schemas/TestStepWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestStepWhereUniqueInput"
        delete:
          oneOf:
            - $ref: "#/components/schemas/TestStepWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestStepWhereUniqueInput"
        connect:
          oneOf:
            - $ref: "#/components/schemas/TestStepWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestStepWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/TestStepUpdateWithWhereUniqueWithoutTestRunInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestStepUpdateWithWhereUniqueWithoutTestRunInput"
        updateMany:
          oneOf:
            - $ref: "#/components/schemas/TestStepUpdateManyWithWhereWithoutTestRunInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestStepUpdateManyWithWhereWithoutTestRunInput"
        deleteMany:
          oneOf:
            - $ref: "#/components/schemas/TestStepScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestStepScalarWhereInput"
    TestRunCreateNestedOneWithoutTestStepsInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/TestRunCreateWithoutTestStepsInput"
            - $ref: "#/components/schemas/TestRunUncheckedCreateWithoutTestStepsInput"
        connectOrCreate:
          $ref: "#/components/schemas/TestRunCreateOrConnectWithoutTestStepsInput"
        connect:
          $ref: "#/components/schemas/TestRunWhereUniqueInput"
    FloatFieldUpdateOperationsInput:
      type: object
      properties:
        set:
          type: number
        increment:
          type: number
        decrement:
          type: number
        multiply:
          type: number
        divide:
          type: number
    TestRunUpdateOneWithoutTestStepsNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/TestRunCreateWithoutTestStepsInput"
            - $ref: "#/components/schemas/TestRunUncheckedCreateWithoutTestStepsInput"
        connectOrCreate:
          $ref: "#/components/schemas/TestRunCreateOrConnectWithoutTestStepsInput"
        upsert:
          $ref: "#/components/schemas/TestRunUpsertWithoutTestStepsInput"
        disconnect:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/TestRunWhereInput"
        delete:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/TestRunWhereInput"
        connect:
          $ref: "#/components/schemas/TestRunWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/TestRunUpdateToOneWithWhereWithoutTestStepsInput"
            - $ref: "#/components/schemas/TestRunUpdateWithoutTestStepsInput"
            - $ref: "#/components/schemas/TestRunUncheckedUpdateWithoutTestStepsInput"
    TestCreateNestedOneWithoutTestSharesInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/TestCreateWithoutTestSharesInput"
            - $ref: "#/components/schemas/TestUncheckedCreateWithoutTestSharesInput"
        connectOrCreate:
          $ref: "#/components/schemas/TestCreateOrConnectWithoutTestSharesInput"
        connect:
          $ref: "#/components/schemas/TestWhereUniqueInput"
    UserCreateNestedOneWithoutTestSharesInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/UserCreateWithoutTestSharesInput"
            - $ref: "#/components/schemas/UserUncheckedCreateWithoutTestSharesInput"
        connectOrCreate:
          $ref: "#/components/schemas/UserCreateOrConnectWithoutTestSharesInput"
        connect:
          $ref: "#/components/schemas/UserWhereUniqueInput"
    TestUpdateOneWithoutTestSharesNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/TestCreateWithoutTestSharesInput"
            - $ref: "#/components/schemas/TestUncheckedCreateWithoutTestSharesInput"
        connectOrCreate:
          $ref: "#/components/schemas/TestCreateOrConnectWithoutTestSharesInput"
        upsert:
          $ref: "#/components/schemas/TestUpsertWithoutTestSharesInput"
        disconnect:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/TestWhereInput"
        delete:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/TestWhereInput"
        connect:
          $ref: "#/components/schemas/TestWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/TestUpdateToOneWithWhereWithoutTestSharesInput"
            - $ref: "#/components/schemas/TestUpdateWithoutTestSharesInput"
            - $ref: "#/components/schemas/TestUncheckedUpdateWithoutTestSharesInput"
    UserUpdateOneWithoutTestSharesNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/UserCreateWithoutTestSharesInput"
            - $ref: "#/components/schemas/UserUncheckedCreateWithoutTestSharesInput"
        connectOrCreate:
          $ref: "#/components/schemas/UserCreateOrConnectWithoutTestSharesInput"
        upsert:
          $ref: "#/components/schemas/UserUpsertWithoutTestSharesInput"
        disconnect:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/UserWhereInput"
        delete:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/UserWhereInput"
        connect:
          $ref: "#/components/schemas/UserWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/UserUpdateToOneWithWhereWithoutTestSharesInput"
            - $ref: "#/components/schemas/UserUpdateWithoutTestSharesInput"
            - $ref: "#/components/schemas/UserUncheckedUpdateWithoutTestSharesInput"
    OrganizationRoleCreateNestedManyWithoutOrganizationInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/OrganizationRoleCreateWithoutOrganizationInput"
            - type: array
              items:
                $ref: "#/components/schemas/OrganizationRoleCreateWithoutOrganizationInput"
            - $ref: "#/components/schemas/OrganizationRoleUncheckedCreateWithoutOrganizationI\
                nput"
            - type: array
              items:
                $ref: "#/components/schemas/OrganizationRoleUncheckedCreateWithoutOrganizationI\
                  nput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/OrganizationRoleCreateOrConnectWithoutOrganizationI\
                nput"
            - type: array
              items:
                $ref: "#/components/schemas/OrganizationRoleCreateOrConnectWithoutOrganizationI\
                  nput"
        createMany:
          $ref: "#/components/schemas/OrganizationRoleCreateManyOrganizationInputEnvelope"
        connect:
          oneOf:
            - $ref: "#/components/schemas/OrganizationRoleWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/OrganizationRoleWhereUniqueInput"
    ProjectCreateNestedManyWithoutOrganizationInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/ProjectCreateWithoutOrganizationInput"
            - type: array
              items:
                $ref: "#/components/schemas/ProjectCreateWithoutOrganizationInput"
            - $ref: "#/components/schemas/ProjectUncheckedCreateWithoutOrganizationInput"
            - type: array
              items:
                $ref: "#/components/schemas/ProjectUncheckedCreateWithoutOrganizationInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/ProjectCreateOrConnectWithoutOrganizationInput"
            - type: array
              items:
                $ref: "#/components/schemas/ProjectCreateOrConnectWithoutOrganizationInput"
        createMany:
          $ref: "#/components/schemas/ProjectCreateManyOrganizationInputEnvelope"
        connect:
          oneOf:
            - $ref: "#/components/schemas/ProjectWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/ProjectWhereUniqueInput"
    AgentCreateNestedManyWithoutOrganizationInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/AgentCreateWithoutOrganizationInput"
            - type: array
              items:
                $ref: "#/components/schemas/AgentCreateWithoutOrganizationInput"
            - $ref: "#/components/schemas/AgentUncheckedCreateWithoutOrganizationInput"
            - type: array
              items:
                $ref: "#/components/schemas/AgentUncheckedCreateWithoutOrganizationInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/AgentCreateOrConnectWithoutOrganizationInput"
            - type: array
              items:
                $ref: "#/components/schemas/AgentCreateOrConnectWithoutOrganizationInput"
        createMany:
          $ref: "#/components/schemas/AgentCreateManyOrganizationInputEnvelope"
        connect:
          oneOf:
            - $ref: "#/components/schemas/AgentWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/AgentWhereUniqueInput"
    IntegrationCreateNestedManyWithoutOrganizationInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/IntegrationCreateWithoutOrganizationInput"
            - type: array
              items:
                $ref: "#/components/schemas/IntegrationCreateWithoutOrganizationInput"
            - $ref: "#/components/schemas/IntegrationUncheckedCreateWithoutOrganizationInput"
            - type: array
              items:
                $ref: "#/components/schemas/IntegrationUncheckedCreateWithoutOrganizationInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/IntegrationCreateOrConnectWithoutOrganizationInput"
            - type: array
              items:
                $ref: "#/components/schemas/IntegrationCreateOrConnectWithoutOrganizationInput"
        createMany:
          $ref: "#/components/schemas/IntegrationCreateManyOrganizationInputEnvelope"
        connect:
          oneOf:
            - $ref: "#/components/schemas/IntegrationWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/IntegrationWhereUniqueInput"
    OrganizationRoleUncheckedCreateNestedManyWithoutOrganizationInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/OrganizationRoleCreateWithoutOrganizationInput"
            - type: array
              items:
                $ref: "#/components/schemas/OrganizationRoleCreateWithoutOrganizationInput"
            - $ref: "#/components/schemas/OrganizationRoleUncheckedCreateWithoutOrganizationI\
                nput"
            - type: array
              items:
                $ref: "#/components/schemas/OrganizationRoleUncheckedCreateWithoutOrganizationI\
                  nput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/OrganizationRoleCreateOrConnectWithoutOrganizationI\
                nput"
            - type: array
              items:
                $ref: "#/components/schemas/OrganizationRoleCreateOrConnectWithoutOrganizationI\
                  nput"
        createMany:
          $ref: "#/components/schemas/OrganizationRoleCreateManyOrganizationInputEnvelope"
        connect:
          oneOf:
            - $ref: "#/components/schemas/OrganizationRoleWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/OrganizationRoleWhereUniqueInput"
    ProjectUncheckedCreateNestedManyWithoutOrganizationInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/ProjectCreateWithoutOrganizationInput"
            - type: array
              items:
                $ref: "#/components/schemas/ProjectCreateWithoutOrganizationInput"
            - $ref: "#/components/schemas/ProjectUncheckedCreateWithoutOrganizationInput"
            - type: array
              items:
                $ref: "#/components/schemas/ProjectUncheckedCreateWithoutOrganizationInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/ProjectCreateOrConnectWithoutOrganizationInput"
            - type: array
              items:
                $ref: "#/components/schemas/ProjectCreateOrConnectWithoutOrganizationInput"
        createMany:
          $ref: "#/components/schemas/ProjectCreateManyOrganizationInputEnvelope"
        connect:
          oneOf:
            - $ref: "#/components/schemas/ProjectWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/ProjectWhereUniqueInput"
    AgentUncheckedCreateNestedManyWithoutOrganizationInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/AgentCreateWithoutOrganizationInput"
            - type: array
              items:
                $ref: "#/components/schemas/AgentCreateWithoutOrganizationInput"
            - $ref: "#/components/schemas/AgentUncheckedCreateWithoutOrganizationInput"
            - type: array
              items:
                $ref: "#/components/schemas/AgentUncheckedCreateWithoutOrganizationInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/AgentCreateOrConnectWithoutOrganizationInput"
            - type: array
              items:
                $ref: "#/components/schemas/AgentCreateOrConnectWithoutOrganizationInput"
        createMany:
          $ref: "#/components/schemas/AgentCreateManyOrganizationInputEnvelope"
        connect:
          oneOf:
            - $ref: "#/components/schemas/AgentWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/AgentWhereUniqueInput"
    IntegrationUncheckedCreateNestedManyWithoutOrganizationInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/IntegrationCreateWithoutOrganizationInput"
            - type: array
              items:
                $ref: "#/components/schemas/IntegrationCreateWithoutOrganizationInput"
            - $ref: "#/components/schemas/IntegrationUncheckedCreateWithoutOrganizationInput"
            - type: array
              items:
                $ref: "#/components/schemas/IntegrationUncheckedCreateWithoutOrganizationInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/IntegrationCreateOrConnectWithoutOrganizationInput"
            - type: array
              items:
                $ref: "#/components/schemas/IntegrationCreateOrConnectWithoutOrganizationInput"
        createMany:
          $ref: "#/components/schemas/IntegrationCreateManyOrganizationInputEnvelope"
        connect:
          oneOf:
            - $ref: "#/components/schemas/IntegrationWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/IntegrationWhereUniqueInput"
    OrganizationRoleUpdateManyWithoutOrganizationNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/OrganizationRoleCreateWithoutOrganizationInput"
            - type: array
              items:
                $ref: "#/components/schemas/OrganizationRoleCreateWithoutOrganizationInput"
            - $ref: "#/components/schemas/OrganizationRoleUncheckedCreateWithoutOrganizationI\
                nput"
            - type: array
              items:
                $ref: "#/components/schemas/OrganizationRoleUncheckedCreateWithoutOrganizationI\
                  nput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/OrganizationRoleCreateOrConnectWithoutOrganizationI\
                nput"
            - type: array
              items:
                $ref: "#/components/schemas/OrganizationRoleCreateOrConnectWithoutOrganizationI\
                  nput"
        upsert:
          oneOf:
            - $ref: "#/components/schemas/OrganizationRoleUpsertWithWhereUniqueWithoutOrganiz\
                ationInput"
            - type: array
              items:
                $ref: "#/components/schemas/OrganizationRoleUpsertWithWhereUniqueWithoutOrganiz\
                  ationInput"
        createMany:
          $ref: "#/components/schemas/OrganizationRoleCreateManyOrganizationInputEnvelope"
        set:
          oneOf:
            - $ref: "#/components/schemas/OrganizationRoleWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/OrganizationRoleWhereUniqueInput"
        disconnect:
          oneOf:
            - $ref: "#/components/schemas/OrganizationRoleWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/OrganizationRoleWhereUniqueInput"
        delete:
          oneOf:
            - $ref: "#/components/schemas/OrganizationRoleWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/OrganizationRoleWhereUniqueInput"
        connect:
          oneOf:
            - $ref: "#/components/schemas/OrganizationRoleWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/OrganizationRoleWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/OrganizationRoleUpdateWithWhereUniqueWithoutOrganiz\
                ationInput"
            - type: array
              items:
                $ref: "#/components/schemas/OrganizationRoleUpdateWithWhereUniqueWithoutOrganiz\
                  ationInput"
        updateMany:
          oneOf:
            - $ref: "#/components/schemas/OrganizationRoleUpdateManyWithWhereWithoutOrganizat\
                ionInput"
            - type: array
              items:
                $ref: "#/components/schemas/OrganizationRoleUpdateManyWithWhereWithoutOrganizat\
                  ionInput"
        deleteMany:
          oneOf:
            - $ref: "#/components/schemas/OrganizationRoleScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/OrganizationRoleScalarWhereInput"
    ProjectUpdateManyWithoutOrganizationNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/ProjectCreateWithoutOrganizationInput"
            - type: array
              items:
                $ref: "#/components/schemas/ProjectCreateWithoutOrganizationInput"
            - $ref: "#/components/schemas/ProjectUncheckedCreateWithoutOrganizationInput"
            - type: array
              items:
                $ref: "#/components/schemas/ProjectUncheckedCreateWithoutOrganizationInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/ProjectCreateOrConnectWithoutOrganizationInput"
            - type: array
              items:
                $ref: "#/components/schemas/ProjectCreateOrConnectWithoutOrganizationInput"
        upsert:
          oneOf:
            - $ref: "#/components/schemas/ProjectUpsertWithWhereUniqueWithoutOrganizationInpu\
                t"
            - type: array
              items:
                $ref: "#/components/schemas/ProjectUpsertWithWhereUniqueWithoutOrganizationInpu\
                  t"
        createMany:
          $ref: "#/components/schemas/ProjectCreateManyOrganizationInputEnvelope"
        set:
          oneOf:
            - $ref: "#/components/schemas/ProjectWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/ProjectWhereUniqueInput"
        disconnect:
          oneOf:
            - $ref: "#/components/schemas/ProjectWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/ProjectWhereUniqueInput"
        delete:
          oneOf:
            - $ref: "#/components/schemas/ProjectWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/ProjectWhereUniqueInput"
        connect:
          oneOf:
            - $ref: "#/components/schemas/ProjectWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/ProjectWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/ProjectUpdateWithWhereUniqueWithoutOrganizationInpu\
                t"
            - type: array
              items:
                $ref: "#/components/schemas/ProjectUpdateWithWhereUniqueWithoutOrganizationInpu\
                  t"
        updateMany:
          oneOf:
            - $ref: "#/components/schemas/ProjectUpdateManyWithWhereWithoutOrganizationInput"
            - type: array
              items:
                $ref: "#/components/schemas/ProjectUpdateManyWithWhereWithoutOrganizationInput"
        deleteMany:
          oneOf:
            - $ref: "#/components/schemas/ProjectScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/ProjectScalarWhereInput"
    AgentUpdateManyWithoutOrganizationNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/AgentCreateWithoutOrganizationInput"
            - type: array
              items:
                $ref: "#/components/schemas/AgentCreateWithoutOrganizationInput"
            - $ref: "#/components/schemas/AgentUncheckedCreateWithoutOrganizationInput"
            - type: array
              items:
                $ref: "#/components/schemas/AgentUncheckedCreateWithoutOrganizationInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/AgentCreateOrConnectWithoutOrganizationInput"
            - type: array
              items:
                $ref: "#/components/schemas/AgentCreateOrConnectWithoutOrganizationInput"
        upsert:
          oneOf:
            - $ref: "#/components/schemas/AgentUpsertWithWhereUniqueWithoutOrganizationInput"
            - type: array
              items:
                $ref: "#/components/schemas/AgentUpsertWithWhereUniqueWithoutOrganizationInput"
        createMany:
          $ref: "#/components/schemas/AgentCreateManyOrganizationInputEnvelope"
        set:
          oneOf:
            - $ref: "#/components/schemas/AgentWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/AgentWhereUniqueInput"
        disconnect:
          oneOf:
            - $ref: "#/components/schemas/AgentWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/AgentWhereUniqueInput"
        delete:
          oneOf:
            - $ref: "#/components/schemas/AgentWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/AgentWhereUniqueInput"
        connect:
          oneOf:
            - $ref: "#/components/schemas/AgentWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/AgentWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/AgentUpdateWithWhereUniqueWithoutOrganizationInput"
            - type: array
              items:
                $ref: "#/components/schemas/AgentUpdateWithWhereUniqueWithoutOrganizationInput"
        updateMany:
          oneOf:
            - $ref: "#/components/schemas/AgentUpdateManyWithWhereWithoutOrganizationInput"
            - type: array
              items:
                $ref: "#/components/schemas/AgentUpdateManyWithWhereWithoutOrganizationInput"
        deleteMany:
          oneOf:
            - $ref: "#/components/schemas/AgentScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/AgentScalarWhereInput"
    IntegrationUpdateManyWithoutOrganizationNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/IntegrationCreateWithoutOrganizationInput"
            - type: array
              items:
                $ref: "#/components/schemas/IntegrationCreateWithoutOrganizationInput"
            - $ref: "#/components/schemas/IntegrationUncheckedCreateWithoutOrganizationInput"
            - type: array
              items:
                $ref: "#/components/schemas/IntegrationUncheckedCreateWithoutOrganizationInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/IntegrationCreateOrConnectWithoutOrganizationInput"
            - type: array
              items:
                $ref: "#/components/schemas/IntegrationCreateOrConnectWithoutOrganizationInput"
        upsert:
          oneOf:
            - $ref: "#/components/schemas/IntegrationUpsertWithWhereUniqueWithoutOrganization\
                Input"
            - type: array
              items:
                $ref: "#/components/schemas/IntegrationUpsertWithWhereUniqueWithoutOrganization\
                  Input"
        createMany:
          $ref: "#/components/schemas/IntegrationCreateManyOrganizationInputEnvelope"
        set:
          oneOf:
            - $ref: "#/components/schemas/IntegrationWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/IntegrationWhereUniqueInput"
        disconnect:
          oneOf:
            - $ref: "#/components/schemas/IntegrationWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/IntegrationWhereUniqueInput"
        delete:
          oneOf:
            - $ref: "#/components/schemas/IntegrationWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/IntegrationWhereUniqueInput"
        connect:
          oneOf:
            - $ref: "#/components/schemas/IntegrationWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/IntegrationWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/IntegrationUpdateWithWhereUniqueWithoutOrganization\
                Input"
            - type: array
              items:
                $ref: "#/components/schemas/IntegrationUpdateWithWhereUniqueWithoutOrganization\
                  Input"
        updateMany:
          oneOf:
            - $ref: "#/components/schemas/IntegrationUpdateManyWithWhereWithoutOrganizationIn\
                put"
            - type: array
              items:
                $ref: "#/components/schemas/IntegrationUpdateManyWithWhereWithoutOrganizationIn\
                  put"
        deleteMany:
          oneOf:
            - $ref: "#/components/schemas/IntegrationScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/IntegrationScalarWhereInput"
    OrganizationRoleUncheckedUpdateManyWithoutOrganizationNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/OrganizationRoleCreateWithoutOrganizationInput"
            - type: array
              items:
                $ref: "#/components/schemas/OrganizationRoleCreateWithoutOrganizationInput"
            - $ref: "#/components/schemas/OrganizationRoleUncheckedCreateWithoutOrganizationI\
                nput"
            - type: array
              items:
                $ref: "#/components/schemas/OrganizationRoleUncheckedCreateWithoutOrganizationI\
                  nput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/OrganizationRoleCreateOrConnectWithoutOrganizationI\
                nput"
            - type: array
              items:
                $ref: "#/components/schemas/OrganizationRoleCreateOrConnectWithoutOrganizationI\
                  nput"
        upsert:
          oneOf:
            - $ref: "#/components/schemas/OrganizationRoleUpsertWithWhereUniqueWithoutOrganiz\
                ationInput"
            - type: array
              items:
                $ref: "#/components/schemas/OrganizationRoleUpsertWithWhereUniqueWithoutOrganiz\
                  ationInput"
        createMany:
          $ref: "#/components/schemas/OrganizationRoleCreateManyOrganizationInputEnvelope"
        set:
          oneOf:
            - $ref: "#/components/schemas/OrganizationRoleWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/OrganizationRoleWhereUniqueInput"
        disconnect:
          oneOf:
            - $ref: "#/components/schemas/OrganizationRoleWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/OrganizationRoleWhereUniqueInput"
        delete:
          oneOf:
            - $ref: "#/components/schemas/OrganizationRoleWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/OrganizationRoleWhereUniqueInput"
        connect:
          oneOf:
            - $ref: "#/components/schemas/OrganizationRoleWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/OrganizationRoleWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/OrganizationRoleUpdateWithWhereUniqueWithoutOrganiz\
                ationInput"
            - type: array
              items:
                $ref: "#/components/schemas/OrganizationRoleUpdateWithWhereUniqueWithoutOrganiz\
                  ationInput"
        updateMany:
          oneOf:
            - $ref: "#/components/schemas/OrganizationRoleUpdateManyWithWhereWithoutOrganizat\
                ionInput"
            - type: array
              items:
                $ref: "#/components/schemas/OrganizationRoleUpdateManyWithWhereWithoutOrganizat\
                  ionInput"
        deleteMany:
          oneOf:
            - $ref: "#/components/schemas/OrganizationRoleScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/OrganizationRoleScalarWhereInput"
    ProjectUncheckedUpdateManyWithoutOrganizationNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/ProjectCreateWithoutOrganizationInput"
            - type: array
              items:
                $ref: "#/components/schemas/ProjectCreateWithoutOrganizationInput"
            - $ref: "#/components/schemas/ProjectUncheckedCreateWithoutOrganizationInput"
            - type: array
              items:
                $ref: "#/components/schemas/ProjectUncheckedCreateWithoutOrganizationInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/ProjectCreateOrConnectWithoutOrganizationInput"
            - type: array
              items:
                $ref: "#/components/schemas/ProjectCreateOrConnectWithoutOrganizationInput"
        upsert:
          oneOf:
            - $ref: "#/components/schemas/ProjectUpsertWithWhereUniqueWithoutOrganizationInpu\
                t"
            - type: array
              items:
                $ref: "#/components/schemas/ProjectUpsertWithWhereUniqueWithoutOrganizationInpu\
                  t"
        createMany:
          $ref: "#/components/schemas/ProjectCreateManyOrganizationInputEnvelope"
        set:
          oneOf:
            - $ref: "#/components/schemas/ProjectWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/ProjectWhereUniqueInput"
        disconnect:
          oneOf:
            - $ref: "#/components/schemas/ProjectWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/ProjectWhereUniqueInput"
        delete:
          oneOf:
            - $ref: "#/components/schemas/ProjectWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/ProjectWhereUniqueInput"
        connect:
          oneOf:
            - $ref: "#/components/schemas/ProjectWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/ProjectWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/ProjectUpdateWithWhereUniqueWithoutOrganizationInpu\
                t"
            - type: array
              items:
                $ref: "#/components/schemas/ProjectUpdateWithWhereUniqueWithoutOrganizationInpu\
                  t"
        updateMany:
          oneOf:
            - $ref: "#/components/schemas/ProjectUpdateManyWithWhereWithoutOrganizationInput"
            - type: array
              items:
                $ref: "#/components/schemas/ProjectUpdateManyWithWhereWithoutOrganizationInput"
        deleteMany:
          oneOf:
            - $ref: "#/components/schemas/ProjectScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/ProjectScalarWhereInput"
    AgentUncheckedUpdateManyWithoutOrganizationNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/AgentCreateWithoutOrganizationInput"
            - type: array
              items:
                $ref: "#/components/schemas/AgentCreateWithoutOrganizationInput"
            - $ref: "#/components/schemas/AgentUncheckedCreateWithoutOrganizationInput"
            - type: array
              items:
                $ref: "#/components/schemas/AgentUncheckedCreateWithoutOrganizationInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/AgentCreateOrConnectWithoutOrganizationInput"
            - type: array
              items:
                $ref: "#/components/schemas/AgentCreateOrConnectWithoutOrganizationInput"
        upsert:
          oneOf:
            - $ref: "#/components/schemas/AgentUpsertWithWhereUniqueWithoutOrganizationInput"
            - type: array
              items:
                $ref: "#/components/schemas/AgentUpsertWithWhereUniqueWithoutOrganizationInput"
        createMany:
          $ref: "#/components/schemas/AgentCreateManyOrganizationInputEnvelope"
        set:
          oneOf:
            - $ref: "#/components/schemas/AgentWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/AgentWhereUniqueInput"
        disconnect:
          oneOf:
            - $ref: "#/components/schemas/AgentWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/AgentWhereUniqueInput"
        delete:
          oneOf:
            - $ref: "#/components/schemas/AgentWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/AgentWhereUniqueInput"
        connect:
          oneOf:
            - $ref: "#/components/schemas/AgentWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/AgentWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/AgentUpdateWithWhereUniqueWithoutOrganizationInput"
            - type: array
              items:
                $ref: "#/components/schemas/AgentUpdateWithWhereUniqueWithoutOrganizationInput"
        updateMany:
          oneOf:
            - $ref: "#/components/schemas/AgentUpdateManyWithWhereWithoutOrganizationInput"
            - type: array
              items:
                $ref: "#/components/schemas/AgentUpdateManyWithWhereWithoutOrganizationInput"
        deleteMany:
          oneOf:
            - $ref: "#/components/schemas/AgentScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/AgentScalarWhereInput"
    IntegrationUncheckedUpdateManyWithoutOrganizationNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/IntegrationCreateWithoutOrganizationInput"
            - type: array
              items:
                $ref: "#/components/schemas/IntegrationCreateWithoutOrganizationInput"
            - $ref: "#/components/schemas/IntegrationUncheckedCreateWithoutOrganizationInput"
            - type: array
              items:
                $ref: "#/components/schemas/IntegrationUncheckedCreateWithoutOrganizationInput"
        connectOrCreate:
          oneOf:
            - $ref: "#/components/schemas/IntegrationCreateOrConnectWithoutOrganizationInput"
            - type: array
              items:
                $ref: "#/components/schemas/IntegrationCreateOrConnectWithoutOrganizationInput"
        upsert:
          oneOf:
            - $ref: "#/components/schemas/IntegrationUpsertWithWhereUniqueWithoutOrganization\
                Input"
            - type: array
              items:
                $ref: "#/components/schemas/IntegrationUpsertWithWhereUniqueWithoutOrganization\
                  Input"
        createMany:
          $ref: "#/components/schemas/IntegrationCreateManyOrganizationInputEnvelope"
        set:
          oneOf:
            - $ref: "#/components/schemas/IntegrationWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/IntegrationWhereUniqueInput"
        disconnect:
          oneOf:
            - $ref: "#/components/schemas/IntegrationWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/IntegrationWhereUniqueInput"
        delete:
          oneOf:
            - $ref: "#/components/schemas/IntegrationWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/IntegrationWhereUniqueInput"
        connect:
          oneOf:
            - $ref: "#/components/schemas/IntegrationWhereUniqueInput"
            - type: array
              items:
                $ref: "#/components/schemas/IntegrationWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/IntegrationUpdateWithWhereUniqueWithoutOrganization\
                Input"
            - type: array
              items:
                $ref: "#/components/schemas/IntegrationUpdateWithWhereUniqueWithoutOrganization\
                  Input"
        updateMany:
          oneOf:
            - $ref: "#/components/schemas/IntegrationUpdateManyWithWhereWithoutOrganizationIn\
                put"
            - type: array
              items:
                $ref: "#/components/schemas/IntegrationUpdateManyWithWhereWithoutOrganizationIn\
                  put"
        deleteMany:
          oneOf:
            - $ref: "#/components/schemas/IntegrationScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/IntegrationScalarWhereInput"
    UserCreateNestedOneWithoutOrganizationRolesInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/UserCreateWithoutOrganizationRolesInput"
            - $ref: "#/components/schemas/UserUncheckedCreateWithoutOrganizationRolesInput"
        connectOrCreate:
          $ref: "#/components/schemas/UserCreateOrConnectWithoutOrganizationRolesInput"
        connect:
          $ref: "#/components/schemas/UserWhereUniqueInput"
    OrganizationCreateNestedOneWithoutRolesInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/OrganizationCreateWithoutRolesInput"
            - $ref: "#/components/schemas/OrganizationUncheckedCreateWithoutRolesInput"
        connectOrCreate:
          $ref: "#/components/schemas/OrganizationCreateOrConnectWithoutRolesInput"
        connect:
          $ref: "#/components/schemas/OrganizationWhereUniqueInput"
    UserUpdateOneRequiredWithoutOrganizationRolesNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/UserCreateWithoutOrganizationRolesInput"
            - $ref: "#/components/schemas/UserUncheckedCreateWithoutOrganizationRolesInput"
        connectOrCreate:
          $ref: "#/components/schemas/UserCreateOrConnectWithoutOrganizationRolesInput"
        upsert:
          $ref: "#/components/schemas/UserUpsertWithoutOrganizationRolesInput"
        connect:
          $ref: "#/components/schemas/UserWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/UserUpdateToOneWithWhereWithoutOrganizationRolesInp\
                ut"
            - $ref: "#/components/schemas/UserUpdateWithoutOrganizationRolesInput"
            - $ref: "#/components/schemas/UserUncheckedUpdateWithoutOrganizationRolesInput"
    OrganizationUpdateOneRequiredWithoutRolesNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/OrganizationCreateWithoutRolesInput"
            - $ref: "#/components/schemas/OrganizationUncheckedCreateWithoutRolesInput"
        connectOrCreate:
          $ref: "#/components/schemas/OrganizationCreateOrConnectWithoutRolesInput"
        upsert:
          $ref: "#/components/schemas/OrganizationUpsertWithoutRolesInput"
        connect:
          $ref: "#/components/schemas/OrganizationWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/OrganizationUpdateToOneWithWhereWithoutRolesInput"
            - $ref: "#/components/schemas/OrganizationUpdateWithoutRolesInput"
            - $ref: "#/components/schemas/OrganizationUncheckedUpdateWithoutRolesInput"
    OrganizationCreateNestedOneWithoutAgentCredentialsInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/OrganizationCreateWithoutAgentCredentialsInput"
            - $ref: "#/components/schemas/OrganizationUncheckedCreateWithoutAgentCredentialsI\
                nput"
        connectOrCreate:
          $ref: "#/components/schemas/OrganizationCreateOrConnectWithoutAgentCredentialsI\
            nput"
        connect:
          $ref: "#/components/schemas/OrganizationWhereUniqueInput"
    IntFieldUpdateOperationsInput:
      type: object
      properties:
        set:
          type: integer
        increment:
          type: integer
        decrement:
          type: integer
        multiply:
          type: integer
        divide:
          type: integer
    OrganizationUpdateOneRequiredWithoutAgentCredentialsNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/OrganizationCreateWithoutAgentCredentialsInput"
            - $ref: "#/components/schemas/OrganizationUncheckedCreateWithoutAgentCredentialsI\
                nput"
        connectOrCreate:
          $ref: "#/components/schemas/OrganizationCreateOrConnectWithoutAgentCredentialsI\
            nput"
        upsert:
          $ref: "#/components/schemas/OrganizationUpsertWithoutAgentCredentialsInput"
        connect:
          $ref: "#/components/schemas/OrganizationWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/OrganizationUpdateToOneWithWhereWithoutAgentCredent\
                ialsInput"
            - $ref: "#/components/schemas/OrganizationUpdateWithoutAgentCredentialsInput"
            - $ref: "#/components/schemas/OrganizationUncheckedUpdateWithoutAgentCredentialsI\
                nput"
    OrganizationCreateNestedOneWithoutIntegrationInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/OrganizationCreateWithoutIntegrationInput"
            - $ref: "#/components/schemas/OrganizationUncheckedCreateWithoutIntegrationInput"
        connectOrCreate:
          $ref: "#/components/schemas/OrganizationCreateOrConnectWithoutIntegrationInput"
        connect:
          $ref: "#/components/schemas/OrganizationWhereUniqueInput"
    EnumIntegrationTypeFieldUpdateOperationsInput:
      type: object
      properties:
        set:
          $ref: "#/components/schemas/IntegrationType"
    OrganizationUpdateOneRequiredWithoutIntegrationNestedInput:
      type: object
      properties:
        create:
          oneOf:
            - $ref: "#/components/schemas/OrganizationCreateWithoutIntegrationInput"
            - $ref: "#/components/schemas/OrganizationUncheckedCreateWithoutIntegrationInput"
        connectOrCreate:
          $ref: "#/components/schemas/OrganizationCreateOrConnectWithoutIntegrationInput"
        upsert:
          $ref: "#/components/schemas/OrganizationUpsertWithoutIntegrationInput"
        connect:
          $ref: "#/components/schemas/OrganizationWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/OrganizationUpdateToOneWithWhereWithoutIntegrationI\
                nput"
            - $ref: "#/components/schemas/OrganizationUpdateWithoutIntegrationInput"
            - $ref: "#/components/schemas/OrganizationUncheckedUpdateWithoutIntegrationInput"
    NestedStringFilter:
      type: object
      properties:
        equals:
          type: string
        in:
          type: array
          items:
            type: string
        notIn:
          type: array
          items:
            type: string
        lt:
          type: string
        lte:
          type: string
        gt:
          type: string
        gte:
          type: string
        contains:
          type: string
        startsWith:
          type: string
        endsWith:
          type: string
        not:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NestedStringFilter"
    NestedStringNullableFilter:
      type: object
      properties:
        equals:
          oneOf:
            - type: "null"
            - type: string
        in:
          oneOf:
            - type: "null"
            - type: array
              items:
                type: string
        notIn:
          oneOf:
            - type: "null"
            - type: array
              items:
                type: string
        lt:
          type: string
        lte:
          type: string
        gt:
          type: string
        gte:
          type: string
        contains:
          type: string
        startsWith:
          type: string
        endsWith:
          type: string
        not:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NestedStringNullableFilter"
            - type: "null"
    NestedEnumUserStatusFilter:
      type: object
      properties:
        equals:
          $ref: "#/components/schemas/UserStatus"
        in:
          type: array
          items:
            $ref: "#/components/schemas/UserStatus"
        notIn:
          type: array
          items:
            $ref: "#/components/schemas/UserStatus"
        not:
          oneOf:
            - $ref: "#/components/schemas/UserStatus"
            - $ref: "#/components/schemas/NestedEnumUserStatusFilter"
    NestedDateTimeFilter:
      type: object
      properties:
        equals:
          type: string
          format: date-time
        in:
          type: array
          items:
            type: string
            format: date-time
        notIn:
          type: array
          items:
            type: string
            format: date-time
        lt:
          type: string
          format: date-time
        lte:
          type: string
          format: date-time
        gt:
          type: string
          format: date-time
        gte:
          type: string
          format: date-time
        not:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NestedDateTimeFilter"
    NestedStringWithAggregatesFilter:
      type: object
      properties:
        equals:
          type: string
        in:
          type: array
          items:
            type: string
        notIn:
          type: array
          items:
            type: string
        lt:
          type: string
        lte:
          type: string
        gt:
          type: string
        gte:
          type: string
        contains:
          type: string
        startsWith:
          type: string
        endsWith:
          type: string
        not:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NestedStringWithAggregatesFilter"
        _count:
          $ref: "#/components/schemas/NestedIntFilter"
        _min:
          $ref: "#/components/schemas/NestedStringFilter"
        _max:
          $ref: "#/components/schemas/NestedStringFilter"
    NestedIntFilter:
      type: object
      properties:
        equals:
          type: integer
        in:
          type: array
          items:
            type: integer
        notIn:
          type: array
          items:
            type: integer
        lt:
          type: integer
        lte:
          type: integer
        gt:
          type: integer
        gte:
          type: integer
        not:
          oneOf:
            - type: integer
            - $ref: "#/components/schemas/NestedIntFilter"
    NestedStringNullableWithAggregatesFilter:
      type: object
      properties:
        equals:
          oneOf:
            - type: "null"
            - type: string
        in:
          oneOf:
            - type: "null"
            - type: array
              items:
                type: string
        notIn:
          oneOf:
            - type: "null"
            - type: array
              items:
                type: string
        lt:
          type: string
        lte:
          type: string
        gt:
          type: string
        gte:
          type: string
        contains:
          type: string
        startsWith:
          type: string
        endsWith:
          type: string
        not:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NestedStringNullableWithAggregatesFilter"
            - type: "null"
        _count:
          $ref: "#/components/schemas/NestedIntNullableFilter"
        _min:
          $ref: "#/components/schemas/NestedStringNullableFilter"
        _max:
          $ref: "#/components/schemas/NestedStringNullableFilter"
    NestedIntNullableFilter:
      type: object
      properties:
        equals:
          oneOf:
            - type: "null"
            - type: integer
        in:
          oneOf:
            - type: "null"
            - type: array
              items:
                type: integer
        notIn:
          oneOf:
            - type: "null"
            - type: array
              items:
                type: integer
        lt:
          type: integer
        lte:
          type: integer
        gt:
          type: integer
        gte:
          type: integer
        not:
          oneOf:
            - type: integer
            - $ref: "#/components/schemas/NestedIntNullableFilter"
            - type: "null"
    NestedEnumUserStatusWithAggregatesFilter:
      type: object
      properties:
        equals:
          $ref: "#/components/schemas/UserStatus"
        in:
          type: array
          items:
            $ref: "#/components/schemas/UserStatus"
        notIn:
          type: array
          items:
            $ref: "#/components/schemas/UserStatus"
        not:
          oneOf:
            - $ref: "#/components/schemas/UserStatus"
            - $ref: "#/components/schemas/NestedEnumUserStatusWithAggregatesFilter"
        _count:
          $ref: "#/components/schemas/NestedIntFilter"
        _min:
          $ref: "#/components/schemas/NestedEnumUserStatusFilter"
        _max:
          $ref: "#/components/schemas/NestedEnumUserStatusFilter"
    NestedDateTimeWithAggregatesFilter:
      type: object
      properties:
        equals:
          type: string
          format: date-time
        in:
          type: array
          items:
            type: string
            format: date-time
        notIn:
          type: array
          items:
            type: string
            format: date-time
        lt:
          type: string
          format: date-time
        lte:
          type: string
          format: date-time
        gt:
          type: string
          format: date-time
        gte:
          type: string
          format: date-time
        not:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/NestedDateTimeWithAggregatesFilter"
        _count:
          $ref: "#/components/schemas/NestedIntFilter"
        _min:
          $ref: "#/components/schemas/NestedDateTimeFilter"
        _max:
          $ref: "#/components/schemas/NestedDateTimeFilter"
    NestedJsonNullableFilter:
      type: object
      properties:
        equals:
          oneOf:
            - {}
            - $ref: "#/components/schemas/JsonNullValueFilter"
        path:
          type: array
          items:
            type: string
        string_contains:
          type: string
        string_starts_with:
          type: string
        string_ends_with:
          type: string
        array_contains:
          oneOf:
            - type: "null"
            - {}
        array_starts_with:
          oneOf:
            - type: "null"
            - {}
        array_ends_with:
          oneOf:
            - type: "null"
            - {}
        lt: {}
        lte: {}
        gt: {}
        gte: {}
        not:
          oneOf:
            - {}
            - $ref: "#/components/schemas/JsonNullValueFilter"
    NestedBoolFilter:
      type: object
      properties:
        equals:
          type: boolean
        not:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/NestedBoolFilter"
    NestedBoolWithAggregatesFilter:
      type: object
      properties:
        equals:
          type: boolean
        not:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/NestedBoolWithAggregatesFilter"
        _count:
          $ref: "#/components/schemas/NestedIntFilter"
        _min:
          $ref: "#/components/schemas/NestedBoolFilter"
        _max:
          $ref: "#/components/schemas/NestedBoolFilter"
    NestedFloatFilter:
      type: object
      properties:
        equals:
          type: number
        in:
          type: array
          items:
            type: number
        notIn:
          type: array
          items:
            type: number
        lt:
          type: number
        lte:
          type: number
        gt:
          type: number
        gte:
          type: number
        not:
          oneOf:
            - type: number
            - $ref: "#/components/schemas/NestedFloatFilter"
    NestedFloatWithAggregatesFilter:
      type: object
      properties:
        equals:
          type: number
        in:
          type: array
          items:
            type: number
        notIn:
          type: array
          items:
            type: number
        lt:
          type: number
        lte:
          type: number
        gt:
          type: number
        gte:
          type: number
        not:
          oneOf:
            - type: number
            - $ref: "#/components/schemas/NestedFloatWithAggregatesFilter"
        _count:
          $ref: "#/components/schemas/NestedIntFilter"
        _avg:
          $ref: "#/components/schemas/NestedFloatFilter"
        _sum:
          $ref: "#/components/schemas/NestedFloatFilter"
        _min:
          $ref: "#/components/schemas/NestedFloatFilter"
        _max:
          $ref: "#/components/schemas/NestedFloatFilter"
    NestedIntWithAggregatesFilter:
      type: object
      properties:
        equals:
          type: integer
        in:
          type: array
          items:
            type: integer
        notIn:
          type: array
          items:
            type: integer
        lt:
          type: integer
        lte:
          type: integer
        gt:
          type: integer
        gte:
          type: integer
        not:
          oneOf:
            - type: integer
            - $ref: "#/components/schemas/NestedIntWithAggregatesFilter"
        _count:
          $ref: "#/components/schemas/NestedIntFilter"
        _avg:
          $ref: "#/components/schemas/NestedFloatFilter"
        _sum:
          $ref: "#/components/schemas/NestedIntFilter"
        _min:
          $ref: "#/components/schemas/NestedIntFilter"
        _max:
          $ref: "#/components/schemas/NestedIntFilter"
    NestedEnumIntegrationTypeFilter:
      type: object
      properties:
        equals:
          $ref: "#/components/schemas/IntegrationType"
        in:
          type: array
          items:
            $ref: "#/components/schemas/IntegrationType"
        notIn:
          type: array
          items:
            $ref: "#/components/schemas/IntegrationType"
        not:
          oneOf:
            - $ref: "#/components/schemas/IntegrationType"
            - $ref: "#/components/schemas/NestedEnumIntegrationTypeFilter"
    NestedEnumIntegrationTypeWithAggregatesFilter:
      type: object
      properties:
        equals:
          $ref: "#/components/schemas/IntegrationType"
        in:
          type: array
          items:
            $ref: "#/components/schemas/IntegrationType"
        notIn:
          type: array
          items:
            $ref: "#/components/schemas/IntegrationType"
        not:
          oneOf:
            - $ref: "#/components/schemas/IntegrationType"
            - $ref: "#/components/schemas/NestedEnumIntegrationTypeWithAggregatesFilter"
        _count:
          $ref: "#/components/schemas/NestedIntFilter"
        _min:
          $ref: "#/components/schemas/NestedEnumIntegrationTypeFilter"
        _max:
          $ref: "#/components/schemas/NestedEnumIntegrationTypeFilter"
    NestedJsonFilter:
      type: object
      properties:
        equals:
          oneOf:
            - {}
            - $ref: "#/components/schemas/JsonNullValueFilter"
        path:
          type: array
          items:
            type: string
        string_contains:
          type: string
        string_starts_with:
          type: string
        string_ends_with:
          type: string
        array_contains:
          oneOf:
            - type: "null"
            - {}
        array_starts_with:
          oneOf:
            - type: "null"
            - {}
        array_ends_with:
          oneOf:
            - type: "null"
            - {}
        lt: {}
        lte: {}
        gt: {}
        gte: {}
        not:
          oneOf:
            - {}
            - $ref: "#/components/schemas/JsonNullValueFilter"
    OrganizationRoleCreateWithoutUserInput:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        organization:
          $ref: "#/components/schemas/OrganizationCreateNestedOneWithoutRolesInput"
      required:
        - name
        - organization
    OrganizationRoleUncheckedCreateWithoutUserInput:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        organizationId:
          type: string
      required:
        - name
        - organizationId
    OrganizationRoleCreateOrConnectWithoutUserInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/OrganizationRoleWhereUniqueInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/OrganizationRoleCreateWithoutUserInput"
            - $ref: "#/components/schemas/OrganizationRoleUncheckedCreateWithoutUserInput"
      required:
        - where
        - create
    OrganizationRoleCreateManyUserInputEnvelope:
      type: object
      properties:
        data:
          oneOf:
            - $ref: "#/components/schemas/OrganizationRoleCreateManyUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/OrganizationRoleCreateManyUserInput"
        skipDuplicates:
          type: boolean
      required:
        - data
    TestCreateWithoutCreatedByInput:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          oneOf:
            - type: "null"
            - type: string
        url:
          oneOf:
            - type: "null"
            - type: string
        naturalLanguageInput:
          oneOf:
            - type: "null"
            - type: string
        status:
          type: string
        isActive:
          type: boolean
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        project:
          $ref: "#/components/schemas/ProjectCreateNestedOneWithoutTestsInput"
        testRuns:
          $ref: "#/components/schemas/TestRunCreateNestedManyWithoutTestInput"
        testShares:
          $ref: "#/components/schemas/TestShareCreateNestedManyWithoutTestInput"
      required:
        - name
        - status
    TestUncheckedCreateWithoutCreatedByInput:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          oneOf:
            - type: "null"
            - type: string
        url:
          oneOf:
            - type: "null"
            - type: string
        naturalLanguageInput:
          oneOf:
            - type: "null"
            - type: string
        status:
          type: string
        isActive:
          type: boolean
        projectId:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        testRuns:
          $ref: "#/components/schemas/TestRunUncheckedCreateNestedManyWithoutTestInput"
        testShares:
          $ref: "#/components/schemas/TestShareUncheckedCreateNestedManyWithoutTestInput"
      required:
        - name
        - status
        - projectId
    TestCreateOrConnectWithoutCreatedByInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/TestWhereUniqueInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/TestCreateWithoutCreatedByInput"
            - $ref: "#/components/schemas/TestUncheckedCreateWithoutCreatedByInput"
      required:
        - where
        - create
    TestCreateManyCreatedByInputEnvelope:
      type: object
      properties:
        data:
          oneOf:
            - $ref: "#/components/schemas/TestCreateManyCreatedByInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestCreateManyCreatedByInput"
        skipDuplicates:
          type: boolean
      required:
        - data
    TestRunCreateWithoutExecutedByInput:
      type: object
      properties:
        id:
          type: string
        status:
          type: string
        errorLog:
          oneOf:
            - type: "null"
            - type: string
        reportUrl:
          oneOf:
            - type: "null"
            - type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        test:
          $ref: "#/components/schemas/TestCreateNestedOneWithoutTestRunsInput"
        testSteps:
          $ref: "#/components/schemas/TestStepCreateNestedManyWithoutTestRunInput"
      required:
        - status
    TestRunUncheckedCreateWithoutExecutedByInput:
      type: object
      properties:
        id:
          type: string
        status:
          type: string
        errorLog:
          oneOf:
            - type: "null"
            - type: string
        reportUrl:
          oneOf:
            - type: "null"
            - type: string
        testId:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        testSteps:
          $ref: "#/components/schemas/TestStepUncheckedCreateNestedManyWithoutTestRunInpu\
            t"
      required:
        - status
        - testId
    TestRunCreateOrConnectWithoutExecutedByInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/TestRunWhereUniqueInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/TestRunCreateWithoutExecutedByInput"
            - $ref: "#/components/schemas/TestRunUncheckedCreateWithoutExecutedByInput"
      required:
        - where
        - create
    TestRunCreateManyExecutedByInputEnvelope:
      type: object
      properties:
        data:
          oneOf:
            - $ref: "#/components/schemas/TestRunCreateManyExecutedByInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestRunCreateManyExecutedByInput"
        skipDuplicates:
          type: boolean
      required:
        - data
    TestShareCreateWithoutUserInput:
      type: object
      properties:
        id:
          type: string
        permission:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        test:
          $ref: "#/components/schemas/TestCreateNestedOneWithoutTestSharesInput"
      required:
        - permission
    TestShareUncheckedCreateWithoutUserInput:
      type: object
      properties:
        id:
          type: string
        permission:
          type: string
        testId:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - permission
        - testId
    TestShareCreateOrConnectWithoutUserInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/TestShareWhereUniqueInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/TestShareCreateWithoutUserInput"
            - $ref: "#/components/schemas/TestShareUncheckedCreateWithoutUserInput"
      required:
        - where
        - create
    TestShareCreateManyUserInputEnvelope:
      type: object
      properties:
        data:
          oneOf:
            - $ref: "#/components/schemas/TestShareCreateManyUserInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestShareCreateManyUserInput"
        skipDuplicates:
          type: boolean
      required:
        - data
    OrganizationRoleUpsertWithWhereUniqueWithoutUserInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/OrganizationRoleWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/OrganizationRoleUpdateWithoutUserInput"
            - $ref: "#/components/schemas/OrganizationRoleUncheckedUpdateWithoutUserInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/OrganizationRoleCreateWithoutUserInput"
            - $ref: "#/components/schemas/OrganizationRoleUncheckedCreateWithoutUserInput"
      required:
        - where
        - update
        - create
    OrganizationRoleUpdateWithWhereUniqueWithoutUserInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/OrganizationRoleWhereUniqueInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/OrganizationRoleUpdateWithoutUserInput"
            - $ref: "#/components/schemas/OrganizationRoleUncheckedUpdateWithoutUserInput"
      required:
        - where
        - data
    OrganizationRoleUpdateManyWithWhereWithoutUserInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/OrganizationRoleScalarWhereInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/OrganizationRoleUpdateManyMutationInput"
            - $ref: "#/components/schemas/OrganizationRoleUncheckedUpdateManyWithoutUserInput"
      required:
        - where
        - data
    OrganizationRoleScalarWhereInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/OrganizationRoleScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/OrganizationRoleScalarWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/OrganizationRoleScalarWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/OrganizationRoleScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/OrganizationRoleScalarWhereInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        name:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        createdAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        userId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        organizationId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
    TestUpsertWithWhereUniqueWithoutCreatedByInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/TestWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/TestUpdateWithoutCreatedByInput"
            - $ref: "#/components/schemas/TestUncheckedUpdateWithoutCreatedByInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/TestCreateWithoutCreatedByInput"
            - $ref: "#/components/schemas/TestUncheckedCreateWithoutCreatedByInput"
      required:
        - where
        - update
        - create
    TestUpdateWithWhereUniqueWithoutCreatedByInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/TestWhereUniqueInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/TestUpdateWithoutCreatedByInput"
            - $ref: "#/components/schemas/TestUncheckedUpdateWithoutCreatedByInput"
      required:
        - where
        - data
    TestUpdateManyWithWhereWithoutCreatedByInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/TestScalarWhereInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/TestUpdateManyMutationInput"
            - $ref: "#/components/schemas/TestUncheckedUpdateManyWithoutCreatedByInput"
      required:
        - where
        - data
    TestScalarWhereInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/TestScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestScalarWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/TestScalarWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/TestScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestScalarWhereInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        name:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        description:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        url:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        naturalLanguageInput:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        status:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        isActive:
          oneOf:
            - $ref: "#/components/schemas/BoolFilter"
            - type: boolean
        projectId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        createdById:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        createdAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
    TestRunUpsertWithWhereUniqueWithoutExecutedByInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/TestRunWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/TestRunUpdateWithoutExecutedByInput"
            - $ref: "#/components/schemas/TestRunUncheckedUpdateWithoutExecutedByInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/TestRunCreateWithoutExecutedByInput"
            - $ref: "#/components/schemas/TestRunUncheckedCreateWithoutExecutedByInput"
      required:
        - where
        - update
        - create
    TestRunUpdateWithWhereUniqueWithoutExecutedByInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/TestRunWhereUniqueInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/TestRunUpdateWithoutExecutedByInput"
            - $ref: "#/components/schemas/TestRunUncheckedUpdateWithoutExecutedByInput"
      required:
        - where
        - data
    TestRunUpdateManyWithWhereWithoutExecutedByInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/TestRunScalarWhereInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/TestRunUpdateManyMutationInput"
            - $ref: "#/components/schemas/TestRunUncheckedUpdateManyWithoutExecutedByInput"
      required:
        - where
        - data
    TestRunScalarWhereInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/TestRunScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestRunScalarWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/TestRunScalarWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/TestRunScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestRunScalarWhereInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        status:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        errorLog:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        reportUrl:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        testId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        executedById:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        createdAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
    TestShareUpsertWithWhereUniqueWithoutUserInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/TestShareWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/TestShareUpdateWithoutUserInput"
            - $ref: "#/components/schemas/TestShareUncheckedUpdateWithoutUserInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/TestShareCreateWithoutUserInput"
            - $ref: "#/components/schemas/TestShareUncheckedCreateWithoutUserInput"
      required:
        - where
        - update
        - create
    TestShareUpdateWithWhereUniqueWithoutUserInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/TestShareWhereUniqueInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/TestShareUpdateWithoutUserInput"
            - $ref: "#/components/schemas/TestShareUncheckedUpdateWithoutUserInput"
      required:
        - where
        - data
    TestShareUpdateManyWithWhereWithoutUserInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/TestShareScalarWhereInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/TestShareUpdateManyMutationInput"
            - $ref: "#/components/schemas/TestShareUncheckedUpdateManyWithoutUserInput"
      required:
        - where
        - data
    TestShareScalarWhereInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/TestShareScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestShareScalarWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/TestShareScalarWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/TestShareScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestShareScalarWhereInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        permission:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        testId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        userId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        createdAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
    OrganizationCreateWithoutProjectsInput:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        pictureUrl:
          oneOf:
            - type: "null"
            - type: string
        stripeCustomerId:
          oneOf:
            - type: "null"
            - type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        roles:
          $ref: "#/components/schemas/OrganizationRoleCreateNestedManyWithoutOrganization\
            Input"
        agentCredentials:
          $ref: "#/components/schemas/AgentCreateNestedManyWithoutOrganizationInput"
        integration:
          $ref: "#/components/schemas/IntegrationCreateNestedManyWithoutOrganizationInput"
      required:
        - name
    OrganizationUncheckedCreateWithoutProjectsInput:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        pictureUrl:
          oneOf:
            - type: "null"
            - type: string
        stripeCustomerId:
          oneOf:
            - type: "null"
            - type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        roles:
          $ref: "#/components/schemas/OrganizationRoleUncheckedCreateNestedManyWithoutOrg\
            anizationInput"
        agentCredentials:
          $ref: "#/components/schemas/AgentUncheckedCreateNestedManyWithoutOrganizationIn\
            put"
        integration:
          $ref: "#/components/schemas/IntegrationUncheckedCreateNestedManyWithoutOrganiza\
            tionInput"
      required:
        - name
    OrganizationCreateOrConnectWithoutProjectsInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/OrganizationWhereUniqueInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/OrganizationCreateWithoutProjectsInput"
            - $ref: "#/components/schemas/OrganizationUncheckedCreateWithoutProjectsInput"
      required:
        - where
        - create
    TestCreateWithoutProjectInput:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          oneOf:
            - type: "null"
            - type: string
        url:
          oneOf:
            - type: "null"
            - type: string
        naturalLanguageInput:
          oneOf:
            - type: "null"
            - type: string
        status:
          type: string
        isActive:
          type: boolean
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        createdBy:
          $ref: "#/components/schemas/UserCreateNestedOneWithoutTestsAsCreatedByInput"
        testRuns:
          $ref: "#/components/schemas/TestRunCreateNestedManyWithoutTestInput"
        testShares:
          $ref: "#/components/schemas/TestShareCreateNestedManyWithoutTestInput"
      required:
        - name
        - status
    TestUncheckedCreateWithoutProjectInput:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          oneOf:
            - type: "null"
            - type: string
        url:
          oneOf:
            - type: "null"
            - type: string
        naturalLanguageInput:
          oneOf:
            - type: "null"
            - type: string
        status:
          type: string
        isActive:
          type: boolean
        createdById:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        testRuns:
          $ref: "#/components/schemas/TestRunUncheckedCreateNestedManyWithoutTestInput"
        testShares:
          $ref: "#/components/schemas/TestShareUncheckedCreateNestedManyWithoutTestInput"
      required:
        - name
        - status
        - createdById
    TestCreateOrConnectWithoutProjectInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/TestWhereUniqueInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/TestCreateWithoutProjectInput"
            - $ref: "#/components/schemas/TestUncheckedCreateWithoutProjectInput"
      required:
        - where
        - create
    TestCreateManyProjectInputEnvelope:
      type: object
      properties:
        data:
          oneOf:
            - $ref: "#/components/schemas/TestCreateManyProjectInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestCreateManyProjectInput"
        skipDuplicates:
          type: boolean
      required:
        - data
    OrganizationUpsertWithoutProjectsInput:
      type: object
      properties:
        update:
          oneOf:
            - $ref: "#/components/schemas/OrganizationUpdateWithoutProjectsInput"
            - $ref: "#/components/schemas/OrganizationUncheckedUpdateWithoutProjectsInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/OrganizationCreateWithoutProjectsInput"
            - $ref: "#/components/schemas/OrganizationUncheckedCreateWithoutProjectsInput"
        where:
          $ref: "#/components/schemas/OrganizationWhereInput"
      required:
        - update
        - create
    OrganizationUpdateToOneWithWhereWithoutProjectsInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/OrganizationWhereInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/OrganizationUpdateWithoutProjectsInput"
            - $ref: "#/components/schemas/OrganizationUncheckedUpdateWithoutProjectsInput"
      required:
        - data
    OrganizationUpdateWithoutProjectsInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        pictureUrl:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        stripeCustomerId:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        roles:
          $ref: "#/components/schemas/OrganizationRoleUpdateManyWithoutOrganizationNested\
            Input"
        agentCredentials:
          $ref: "#/components/schemas/AgentUpdateManyWithoutOrganizationNestedInput"
        integration:
          $ref: "#/components/schemas/IntegrationUpdateManyWithoutOrganizationNestedInput"
    OrganizationUncheckedUpdateWithoutProjectsInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        pictureUrl:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        stripeCustomerId:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        roles:
          $ref: "#/components/schemas/OrganizationRoleUncheckedUpdateManyWithoutOrganizat\
            ionNestedInput"
        agentCredentials:
          $ref: "#/components/schemas/AgentUncheckedUpdateManyWithoutOrganizationNestedIn\
            put"
        integration:
          $ref: "#/components/schemas/IntegrationUncheckedUpdateManyWithoutOrganizationNe\
            stedInput"
    TestUpsertWithWhereUniqueWithoutProjectInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/TestWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/TestUpdateWithoutProjectInput"
            - $ref: "#/components/schemas/TestUncheckedUpdateWithoutProjectInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/TestCreateWithoutProjectInput"
            - $ref: "#/components/schemas/TestUncheckedCreateWithoutProjectInput"
      required:
        - where
        - update
        - create
    TestUpdateWithWhereUniqueWithoutProjectInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/TestWhereUniqueInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/TestUpdateWithoutProjectInput"
            - $ref: "#/components/schemas/TestUncheckedUpdateWithoutProjectInput"
      required:
        - where
        - data
    TestUpdateManyWithWhereWithoutProjectInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/TestScalarWhereInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/TestUpdateManyMutationInput"
            - $ref: "#/components/schemas/TestUncheckedUpdateManyWithoutProjectInput"
      required:
        - where
        - data
    ProjectCreateWithoutTestsInput:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          oneOf:
            - type: "null"
            - type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        cookies:
          oneOf:
            - $ref: "#/components/schemas/NullableJsonNullValueInput"
            - {}
        session:
          oneOf:
            - $ref: "#/components/schemas/NullableJsonNullValueInput"
            - {}
        localStorage:
          oneOf:
            - $ref: "#/components/schemas/NullableJsonNullValueInput"
            - {}
        organization:
          $ref: "#/components/schemas/OrganizationCreateNestedOneWithoutProjectsInput"
      required:
        - name
    ProjectUncheckedCreateWithoutTestsInput:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          oneOf:
            - type: "null"
            - type: string
        organizationId:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        cookies:
          oneOf:
            - $ref: "#/components/schemas/NullableJsonNullValueInput"
            - {}
        session:
          oneOf:
            - $ref: "#/components/schemas/NullableJsonNullValueInput"
            - {}
        localStorage:
          oneOf:
            - $ref: "#/components/schemas/NullableJsonNullValueInput"
            - {}
      required:
        - name
        - organizationId
    ProjectCreateOrConnectWithoutTestsInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/ProjectWhereUniqueInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/ProjectCreateWithoutTestsInput"
            - $ref: "#/components/schemas/ProjectUncheckedCreateWithoutTestsInput"
      required:
        - where
        - create
    UserCreateWithoutTestsAsCreatedByInput:
      type: object
      properties:
        id:
          type: string
        name:
          oneOf:
            - type: "null"
            - type: string
        email:
          oneOf:
            - type: "null"
            - type: string
        pictureUrl:
          oneOf:
            - type: "null"
            - type: string
        tokenInvitation:
          oneOf:
            - type: "null"
            - type: string
        stripeCustomerId:
          oneOf:
            - type: "null"
            - type: string
        status:
          $ref: "#/components/schemas/UserStatus"
        globalRole:
          type: string
        password:
          oneOf:
            - type: "null"
            - type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        organizationRoles:
          $ref: "#/components/schemas/OrganizationRoleCreateNestedManyWithoutUserInput"
        testRunsAsExecutedBy:
          $ref: "#/components/schemas/TestRunCreateNestedManyWithoutExecutedByInput"
        testShares:
          $ref: "#/components/schemas/TestShareCreateNestedManyWithoutUserInput"
    UserUncheckedCreateWithoutTestsAsCreatedByInput:
      type: object
      properties:
        id:
          type: string
        name:
          oneOf:
            - type: "null"
            - type: string
        email:
          oneOf:
            - type: "null"
            - type: string
        pictureUrl:
          oneOf:
            - type: "null"
            - type: string
        tokenInvitation:
          oneOf:
            - type: "null"
            - type: string
        stripeCustomerId:
          oneOf:
            - type: "null"
            - type: string
        status:
          $ref: "#/components/schemas/UserStatus"
        globalRole:
          type: string
        password:
          oneOf:
            - type: "null"
            - type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        organizationRoles:
          $ref: "#/components/schemas/OrganizationRoleUncheckedCreateNestedManyWithoutUse\
            rInput"
        testRunsAsExecutedBy:
          $ref: "#/components/schemas/TestRunUncheckedCreateNestedManyWithoutExecutedByIn\
            put"
        testShares:
          $ref: "#/components/schemas/TestShareUncheckedCreateNestedManyWithoutUserInput"
    UserCreateOrConnectWithoutTestsAsCreatedByInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/UserWhereUniqueInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/UserCreateWithoutTestsAsCreatedByInput"
            - $ref: "#/components/schemas/UserUncheckedCreateWithoutTestsAsCreatedByInput"
      required:
        - where
        - create
    TestRunCreateWithoutTestInput:
      type: object
      properties:
        id:
          type: string
        status:
          type: string
        errorLog:
          oneOf:
            - type: "null"
            - type: string
        reportUrl:
          oneOf:
            - type: "null"
            - type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        executedBy:
          $ref: "#/components/schemas/UserCreateNestedOneWithoutTestRunsAsExecutedByInput"
        testSteps:
          $ref: "#/components/schemas/TestStepCreateNestedManyWithoutTestRunInput"
      required:
        - status
    TestRunUncheckedCreateWithoutTestInput:
      type: object
      properties:
        id:
          type: string
        status:
          type: string
        errorLog:
          oneOf:
            - type: "null"
            - type: string
        reportUrl:
          oneOf:
            - type: "null"
            - type: string
        executedById:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        testSteps:
          $ref: "#/components/schemas/TestStepUncheckedCreateNestedManyWithoutTestRunInpu\
            t"
      required:
        - status
        - executedById
    TestRunCreateOrConnectWithoutTestInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/TestRunWhereUniqueInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/TestRunCreateWithoutTestInput"
            - $ref: "#/components/schemas/TestRunUncheckedCreateWithoutTestInput"
      required:
        - where
        - create
    TestRunCreateManyTestInputEnvelope:
      type: object
      properties:
        data:
          oneOf:
            - $ref: "#/components/schemas/TestRunCreateManyTestInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestRunCreateManyTestInput"
        skipDuplicates:
          type: boolean
      required:
        - data
    TestShareCreateWithoutTestInput:
      type: object
      properties:
        id:
          type: string
        permission:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        user:
          $ref: "#/components/schemas/UserCreateNestedOneWithoutTestSharesInput"
      required:
        - permission
    TestShareUncheckedCreateWithoutTestInput:
      type: object
      properties:
        id:
          type: string
        permission:
          type: string
        userId:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - permission
        - userId
    TestShareCreateOrConnectWithoutTestInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/TestShareWhereUniqueInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/TestShareCreateWithoutTestInput"
            - $ref: "#/components/schemas/TestShareUncheckedCreateWithoutTestInput"
      required:
        - where
        - create
    TestShareCreateManyTestInputEnvelope:
      type: object
      properties:
        data:
          oneOf:
            - $ref: "#/components/schemas/TestShareCreateManyTestInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestShareCreateManyTestInput"
        skipDuplicates:
          type: boolean
      required:
        - data
    ProjectUpsertWithoutTestsInput:
      type: object
      properties:
        update:
          oneOf:
            - $ref: "#/components/schemas/ProjectUpdateWithoutTestsInput"
            - $ref: "#/components/schemas/ProjectUncheckedUpdateWithoutTestsInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/ProjectCreateWithoutTestsInput"
            - $ref: "#/components/schemas/ProjectUncheckedCreateWithoutTestsInput"
        where:
          $ref: "#/components/schemas/ProjectWhereInput"
      required:
        - update
        - create
    ProjectUpdateToOneWithWhereWithoutTestsInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/ProjectWhereInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/ProjectUpdateWithoutTestsInput"
            - $ref: "#/components/schemas/ProjectUncheckedUpdateWithoutTestsInput"
      required:
        - data
    ProjectUpdateWithoutTestsInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        description:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        cookies:
          oneOf:
            - $ref: "#/components/schemas/NullableJsonNullValueInput"
            - {}
        session:
          oneOf:
            - $ref: "#/components/schemas/NullableJsonNullValueInput"
            - {}
        localStorage:
          oneOf:
            - $ref: "#/components/schemas/NullableJsonNullValueInput"
            - {}
        organization:
          $ref: "#/components/schemas/OrganizationUpdateOneWithoutProjectsNestedInput"
    ProjectUncheckedUpdateWithoutTestsInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        description:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        organizationId:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        cookies:
          oneOf:
            - $ref: "#/components/schemas/NullableJsonNullValueInput"
            - {}
        session:
          oneOf:
            - $ref: "#/components/schemas/NullableJsonNullValueInput"
            - {}
        localStorage:
          oneOf:
            - $ref: "#/components/schemas/NullableJsonNullValueInput"
            - {}
    UserUpsertWithoutTestsAsCreatedByInput:
      type: object
      properties:
        update:
          oneOf:
            - $ref: "#/components/schemas/UserUpdateWithoutTestsAsCreatedByInput"
            - $ref: "#/components/schemas/UserUncheckedUpdateWithoutTestsAsCreatedByInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/UserCreateWithoutTestsAsCreatedByInput"
            - $ref: "#/components/schemas/UserUncheckedCreateWithoutTestsAsCreatedByInput"
        where:
          $ref: "#/components/schemas/UserWhereInput"
      required:
        - update
        - create
    UserUpdateToOneWithWhereWithoutTestsAsCreatedByInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/UserWhereInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/UserUpdateWithoutTestsAsCreatedByInput"
            - $ref: "#/components/schemas/UserUncheckedUpdateWithoutTestsAsCreatedByInput"
      required:
        - data
    UserUpdateWithoutTestsAsCreatedByInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        email:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        pictureUrl:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        tokenInvitation:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        stripeCustomerId:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        status:
          oneOf:
            - $ref: "#/components/schemas/UserStatus"
            - $ref: "#/components/schemas/EnumUserStatusFieldUpdateOperationsInput"
        globalRole:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        password:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        organizationRoles:
          $ref: "#/components/schemas/OrganizationRoleUpdateManyWithoutUserNestedInput"
        testRunsAsExecutedBy:
          $ref: "#/components/schemas/TestRunUpdateManyWithoutExecutedByNestedInput"
        testShares:
          $ref: "#/components/schemas/TestShareUpdateManyWithoutUserNestedInput"
    UserUncheckedUpdateWithoutTestsAsCreatedByInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        email:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        pictureUrl:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        tokenInvitation:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        stripeCustomerId:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        status:
          oneOf:
            - $ref: "#/components/schemas/UserStatus"
            - $ref: "#/components/schemas/EnumUserStatusFieldUpdateOperationsInput"
        globalRole:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        password:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        organizationRoles:
          $ref: "#/components/schemas/OrganizationRoleUncheckedUpdateManyWithoutUserNeste\
            dInput"
        testRunsAsExecutedBy:
          $ref: "#/components/schemas/TestRunUncheckedUpdateManyWithoutExecutedByNestedIn\
            put"
        testShares:
          $ref: "#/components/schemas/TestShareUncheckedUpdateManyWithoutUserNestedInput"
    TestRunUpsertWithWhereUniqueWithoutTestInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/TestRunWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/TestRunUpdateWithoutTestInput"
            - $ref: "#/components/schemas/TestRunUncheckedUpdateWithoutTestInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/TestRunCreateWithoutTestInput"
            - $ref: "#/components/schemas/TestRunUncheckedCreateWithoutTestInput"
      required:
        - where
        - update
        - create
    TestRunUpdateWithWhereUniqueWithoutTestInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/TestRunWhereUniqueInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/TestRunUpdateWithoutTestInput"
            - $ref: "#/components/schemas/TestRunUncheckedUpdateWithoutTestInput"
      required:
        - where
        - data
    TestRunUpdateManyWithWhereWithoutTestInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/TestRunScalarWhereInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/TestRunUpdateManyMutationInput"
            - $ref: "#/components/schemas/TestRunUncheckedUpdateManyWithoutTestInput"
      required:
        - where
        - data
    TestShareUpsertWithWhereUniqueWithoutTestInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/TestShareWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/TestShareUpdateWithoutTestInput"
            - $ref: "#/components/schemas/TestShareUncheckedUpdateWithoutTestInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/TestShareCreateWithoutTestInput"
            - $ref: "#/components/schemas/TestShareUncheckedCreateWithoutTestInput"
      required:
        - where
        - update
        - create
    TestShareUpdateWithWhereUniqueWithoutTestInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/TestShareWhereUniqueInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/TestShareUpdateWithoutTestInput"
            - $ref: "#/components/schemas/TestShareUncheckedUpdateWithoutTestInput"
      required:
        - where
        - data
    TestShareUpdateManyWithWhereWithoutTestInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/TestShareScalarWhereInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/TestShareUpdateManyMutationInput"
            - $ref: "#/components/schemas/TestShareUncheckedUpdateManyWithoutTestInput"
      required:
        - where
        - data
    TestCreateWithoutTestRunsInput:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          oneOf:
            - type: "null"
            - type: string
        url:
          oneOf:
            - type: "null"
            - type: string
        naturalLanguageInput:
          oneOf:
            - type: "null"
            - type: string
        status:
          type: string
        isActive:
          type: boolean
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        project:
          $ref: "#/components/schemas/ProjectCreateNestedOneWithoutTestsInput"
        createdBy:
          $ref: "#/components/schemas/UserCreateNestedOneWithoutTestsAsCreatedByInput"
        testShares:
          $ref: "#/components/schemas/TestShareCreateNestedManyWithoutTestInput"
      required:
        - name
        - status
    TestUncheckedCreateWithoutTestRunsInput:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          oneOf:
            - type: "null"
            - type: string
        url:
          oneOf:
            - type: "null"
            - type: string
        naturalLanguageInput:
          oneOf:
            - type: "null"
            - type: string
        status:
          type: string
        isActive:
          type: boolean
        projectId:
          type: string
        createdById:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        testShares:
          $ref: "#/components/schemas/TestShareUncheckedCreateNestedManyWithoutTestInput"
      required:
        - name
        - status
        - projectId
        - createdById
    TestCreateOrConnectWithoutTestRunsInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/TestWhereUniqueInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/TestCreateWithoutTestRunsInput"
            - $ref: "#/components/schemas/TestUncheckedCreateWithoutTestRunsInput"
      required:
        - where
        - create
    UserCreateWithoutTestRunsAsExecutedByInput:
      type: object
      properties:
        id:
          type: string
        name:
          oneOf:
            - type: "null"
            - type: string
        email:
          oneOf:
            - type: "null"
            - type: string
        pictureUrl:
          oneOf:
            - type: "null"
            - type: string
        tokenInvitation:
          oneOf:
            - type: "null"
            - type: string
        stripeCustomerId:
          oneOf:
            - type: "null"
            - type: string
        status:
          $ref: "#/components/schemas/UserStatus"
        globalRole:
          type: string
        password:
          oneOf:
            - type: "null"
            - type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        organizationRoles:
          $ref: "#/components/schemas/OrganizationRoleCreateNestedManyWithoutUserInput"
        testsAsCreatedBy:
          $ref: "#/components/schemas/TestCreateNestedManyWithoutCreatedByInput"
        testShares:
          $ref: "#/components/schemas/TestShareCreateNestedManyWithoutUserInput"
    UserUncheckedCreateWithoutTestRunsAsExecutedByInput:
      type: object
      properties:
        id:
          type: string
        name:
          oneOf:
            - type: "null"
            - type: string
        email:
          oneOf:
            - type: "null"
            - type: string
        pictureUrl:
          oneOf:
            - type: "null"
            - type: string
        tokenInvitation:
          oneOf:
            - type: "null"
            - type: string
        stripeCustomerId:
          oneOf:
            - type: "null"
            - type: string
        status:
          $ref: "#/components/schemas/UserStatus"
        globalRole:
          type: string
        password:
          oneOf:
            - type: "null"
            - type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        organizationRoles:
          $ref: "#/components/schemas/OrganizationRoleUncheckedCreateNestedManyWithoutUse\
            rInput"
        testsAsCreatedBy:
          $ref: "#/components/schemas/TestUncheckedCreateNestedManyWithoutCreatedByInput"
        testShares:
          $ref: "#/components/schemas/TestShareUncheckedCreateNestedManyWithoutUserInput"
    UserCreateOrConnectWithoutTestRunsAsExecutedByInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/UserWhereUniqueInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/UserCreateWithoutTestRunsAsExecutedByInput"
            - $ref: "#/components/schemas/UserUncheckedCreateWithoutTestRunsAsExecutedByInput"
      required:
        - where
        - create
    TestStepCreateWithoutTestRunInput:
      type: object
      properties:
        id:
          type: string
        order:
          type: number
        action:
          type: string
        status:
          type: string
        screenshotUrl:
          oneOf:
            - type: "null"
            - type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - order
        - action
        - status
    TestStepUncheckedCreateWithoutTestRunInput:
      type: object
      properties:
        id:
          type: string
        order:
          type: number
        action:
          type: string
        status:
          type: string
        screenshotUrl:
          oneOf:
            - type: "null"
            - type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - order
        - action
        - status
    TestStepCreateOrConnectWithoutTestRunInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/TestStepWhereUniqueInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/TestStepCreateWithoutTestRunInput"
            - $ref: "#/components/schemas/TestStepUncheckedCreateWithoutTestRunInput"
      required:
        - where
        - create
    TestStepCreateManyTestRunInputEnvelope:
      type: object
      properties:
        data:
          oneOf:
            - $ref: "#/components/schemas/TestStepCreateManyTestRunInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestStepCreateManyTestRunInput"
        skipDuplicates:
          type: boolean
      required:
        - data
    TestUpsertWithoutTestRunsInput:
      type: object
      properties:
        update:
          oneOf:
            - $ref: "#/components/schemas/TestUpdateWithoutTestRunsInput"
            - $ref: "#/components/schemas/TestUncheckedUpdateWithoutTestRunsInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/TestCreateWithoutTestRunsInput"
            - $ref: "#/components/schemas/TestUncheckedCreateWithoutTestRunsInput"
        where:
          $ref: "#/components/schemas/TestWhereInput"
      required:
        - update
        - create
    TestUpdateToOneWithWhereWithoutTestRunsInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/TestWhereInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/TestUpdateWithoutTestRunsInput"
            - $ref: "#/components/schemas/TestUncheckedUpdateWithoutTestRunsInput"
      required:
        - data
    TestUpdateWithoutTestRunsInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        description:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        url:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        naturalLanguageInput:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        status:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        isActive:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/BoolFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        project:
          $ref: "#/components/schemas/ProjectUpdateOneWithoutTestsNestedInput"
        createdBy:
          $ref: "#/components/schemas/UserUpdateOneWithoutTestsAsCreatedByNestedInput"
        testShares:
          $ref: "#/components/schemas/TestShareUpdateManyWithoutTestNestedInput"
    TestUncheckedUpdateWithoutTestRunsInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        description:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        url:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        naturalLanguageInput:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        status:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        isActive:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/BoolFieldUpdateOperationsInput"
        projectId:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        createdById:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        testShares:
          $ref: "#/components/schemas/TestShareUncheckedUpdateManyWithoutTestNestedInput"
    UserUpsertWithoutTestRunsAsExecutedByInput:
      type: object
      properties:
        update:
          oneOf:
            - $ref: "#/components/schemas/UserUpdateWithoutTestRunsAsExecutedByInput"
            - $ref: "#/components/schemas/UserUncheckedUpdateWithoutTestRunsAsExecutedByInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/UserCreateWithoutTestRunsAsExecutedByInput"
            - $ref: "#/components/schemas/UserUncheckedCreateWithoutTestRunsAsExecutedByInput"
        where:
          $ref: "#/components/schemas/UserWhereInput"
      required:
        - update
        - create
    UserUpdateToOneWithWhereWithoutTestRunsAsExecutedByInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/UserWhereInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/UserUpdateWithoutTestRunsAsExecutedByInput"
            - $ref: "#/components/schemas/UserUncheckedUpdateWithoutTestRunsAsExecutedByInput"
      required:
        - data
    UserUpdateWithoutTestRunsAsExecutedByInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        email:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        pictureUrl:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        tokenInvitation:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        stripeCustomerId:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        status:
          oneOf:
            - $ref: "#/components/schemas/UserStatus"
            - $ref: "#/components/schemas/EnumUserStatusFieldUpdateOperationsInput"
        globalRole:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        password:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        organizationRoles:
          $ref: "#/components/schemas/OrganizationRoleUpdateManyWithoutUserNestedInput"
        testsAsCreatedBy:
          $ref: "#/components/schemas/TestUpdateManyWithoutCreatedByNestedInput"
        testShares:
          $ref: "#/components/schemas/TestShareUpdateManyWithoutUserNestedInput"
    UserUncheckedUpdateWithoutTestRunsAsExecutedByInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        email:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        pictureUrl:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        tokenInvitation:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        stripeCustomerId:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        status:
          oneOf:
            - $ref: "#/components/schemas/UserStatus"
            - $ref: "#/components/schemas/EnumUserStatusFieldUpdateOperationsInput"
        globalRole:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        password:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        organizationRoles:
          $ref: "#/components/schemas/OrganizationRoleUncheckedUpdateManyWithoutUserNeste\
            dInput"
        testsAsCreatedBy:
          $ref: "#/components/schemas/TestUncheckedUpdateManyWithoutCreatedByNestedInput"
        testShares:
          $ref: "#/components/schemas/TestShareUncheckedUpdateManyWithoutUserNestedInput"
    TestStepUpsertWithWhereUniqueWithoutTestRunInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/TestStepWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/TestStepUpdateWithoutTestRunInput"
            - $ref: "#/components/schemas/TestStepUncheckedUpdateWithoutTestRunInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/TestStepCreateWithoutTestRunInput"
            - $ref: "#/components/schemas/TestStepUncheckedCreateWithoutTestRunInput"
      required:
        - where
        - update
        - create
    TestStepUpdateWithWhereUniqueWithoutTestRunInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/TestStepWhereUniqueInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/TestStepUpdateWithoutTestRunInput"
            - $ref: "#/components/schemas/TestStepUncheckedUpdateWithoutTestRunInput"
      required:
        - where
        - data
    TestStepUpdateManyWithWhereWithoutTestRunInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/TestStepScalarWhereInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/TestStepUpdateManyMutationInput"
            - $ref: "#/components/schemas/TestStepUncheckedUpdateManyWithoutTestRunInput"
      required:
        - where
        - data
    TestStepScalarWhereInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/TestStepScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestStepScalarWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/TestStepScalarWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/TestStepScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestStepScalarWhereInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        order:
          oneOf:
            - $ref: "#/components/schemas/FloatFilter"
            - type: number
        action:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        status:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        screenshotUrl:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        testRunId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        createdAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
    TestRunCreateWithoutTestStepsInput:
      type: object
      properties:
        id:
          type: string
        status:
          type: string
        errorLog:
          oneOf:
            - type: "null"
            - type: string
        reportUrl:
          oneOf:
            - type: "null"
            - type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        test:
          $ref: "#/components/schemas/TestCreateNestedOneWithoutTestRunsInput"
        executedBy:
          $ref: "#/components/schemas/UserCreateNestedOneWithoutTestRunsAsExecutedByInput"
      required:
        - status
    TestRunUncheckedCreateWithoutTestStepsInput:
      type: object
      properties:
        id:
          type: string
        status:
          type: string
        errorLog:
          oneOf:
            - type: "null"
            - type: string
        reportUrl:
          oneOf:
            - type: "null"
            - type: string
        testId:
          type: string
        executedById:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - status
        - testId
        - executedById
    TestRunCreateOrConnectWithoutTestStepsInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/TestRunWhereUniqueInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/TestRunCreateWithoutTestStepsInput"
            - $ref: "#/components/schemas/TestRunUncheckedCreateWithoutTestStepsInput"
      required:
        - where
        - create
    TestRunUpsertWithoutTestStepsInput:
      type: object
      properties:
        update:
          oneOf:
            - $ref: "#/components/schemas/TestRunUpdateWithoutTestStepsInput"
            - $ref: "#/components/schemas/TestRunUncheckedUpdateWithoutTestStepsInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/TestRunCreateWithoutTestStepsInput"
            - $ref: "#/components/schemas/TestRunUncheckedCreateWithoutTestStepsInput"
        where:
          $ref: "#/components/schemas/TestRunWhereInput"
      required:
        - update
        - create
    TestRunUpdateToOneWithWhereWithoutTestStepsInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/TestRunWhereInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/TestRunUpdateWithoutTestStepsInput"
            - $ref: "#/components/schemas/TestRunUncheckedUpdateWithoutTestStepsInput"
      required:
        - data
    TestRunUpdateWithoutTestStepsInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        status:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        errorLog:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        reportUrl:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        test:
          $ref: "#/components/schemas/TestUpdateOneWithoutTestRunsNestedInput"
        executedBy:
          $ref: "#/components/schemas/UserUpdateOneWithoutTestRunsAsExecutedByNestedInput"
    TestRunUncheckedUpdateWithoutTestStepsInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        status:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        errorLog:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        reportUrl:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        testId:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        executedById:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
    TestCreateWithoutTestSharesInput:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          oneOf:
            - type: "null"
            - type: string
        url:
          oneOf:
            - type: "null"
            - type: string
        naturalLanguageInput:
          oneOf:
            - type: "null"
            - type: string
        status:
          type: string
        isActive:
          type: boolean
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        project:
          $ref: "#/components/schemas/ProjectCreateNestedOneWithoutTestsInput"
        createdBy:
          $ref: "#/components/schemas/UserCreateNestedOneWithoutTestsAsCreatedByInput"
        testRuns:
          $ref: "#/components/schemas/TestRunCreateNestedManyWithoutTestInput"
      required:
        - name
        - status
    TestUncheckedCreateWithoutTestSharesInput:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          oneOf:
            - type: "null"
            - type: string
        url:
          oneOf:
            - type: "null"
            - type: string
        naturalLanguageInput:
          oneOf:
            - type: "null"
            - type: string
        status:
          type: string
        isActive:
          type: boolean
        projectId:
          type: string
        createdById:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        testRuns:
          $ref: "#/components/schemas/TestRunUncheckedCreateNestedManyWithoutTestInput"
      required:
        - name
        - status
        - projectId
        - createdById
    TestCreateOrConnectWithoutTestSharesInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/TestWhereUniqueInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/TestCreateWithoutTestSharesInput"
            - $ref: "#/components/schemas/TestUncheckedCreateWithoutTestSharesInput"
      required:
        - where
        - create
    UserCreateWithoutTestSharesInput:
      type: object
      properties:
        id:
          type: string
        name:
          oneOf:
            - type: "null"
            - type: string
        email:
          oneOf:
            - type: "null"
            - type: string
        pictureUrl:
          oneOf:
            - type: "null"
            - type: string
        tokenInvitation:
          oneOf:
            - type: "null"
            - type: string
        stripeCustomerId:
          oneOf:
            - type: "null"
            - type: string
        status:
          $ref: "#/components/schemas/UserStatus"
        globalRole:
          type: string
        password:
          oneOf:
            - type: "null"
            - type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        organizationRoles:
          $ref: "#/components/schemas/OrganizationRoleCreateNestedManyWithoutUserInput"
        testsAsCreatedBy:
          $ref: "#/components/schemas/TestCreateNestedManyWithoutCreatedByInput"
        testRunsAsExecutedBy:
          $ref: "#/components/schemas/TestRunCreateNestedManyWithoutExecutedByInput"
    UserUncheckedCreateWithoutTestSharesInput:
      type: object
      properties:
        id:
          type: string
        name:
          oneOf:
            - type: "null"
            - type: string
        email:
          oneOf:
            - type: "null"
            - type: string
        pictureUrl:
          oneOf:
            - type: "null"
            - type: string
        tokenInvitation:
          oneOf:
            - type: "null"
            - type: string
        stripeCustomerId:
          oneOf:
            - type: "null"
            - type: string
        status:
          $ref: "#/components/schemas/UserStatus"
        globalRole:
          type: string
        password:
          oneOf:
            - type: "null"
            - type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        organizationRoles:
          $ref: "#/components/schemas/OrganizationRoleUncheckedCreateNestedManyWithoutUse\
            rInput"
        testsAsCreatedBy:
          $ref: "#/components/schemas/TestUncheckedCreateNestedManyWithoutCreatedByInput"
        testRunsAsExecutedBy:
          $ref: "#/components/schemas/TestRunUncheckedCreateNestedManyWithoutExecutedByIn\
            put"
    UserCreateOrConnectWithoutTestSharesInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/UserWhereUniqueInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/UserCreateWithoutTestSharesInput"
            - $ref: "#/components/schemas/UserUncheckedCreateWithoutTestSharesInput"
      required:
        - where
        - create
    TestUpsertWithoutTestSharesInput:
      type: object
      properties:
        update:
          oneOf:
            - $ref: "#/components/schemas/TestUpdateWithoutTestSharesInput"
            - $ref: "#/components/schemas/TestUncheckedUpdateWithoutTestSharesInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/TestCreateWithoutTestSharesInput"
            - $ref: "#/components/schemas/TestUncheckedCreateWithoutTestSharesInput"
        where:
          $ref: "#/components/schemas/TestWhereInput"
      required:
        - update
        - create
    TestUpdateToOneWithWhereWithoutTestSharesInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/TestWhereInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/TestUpdateWithoutTestSharesInput"
            - $ref: "#/components/schemas/TestUncheckedUpdateWithoutTestSharesInput"
      required:
        - data
    TestUpdateWithoutTestSharesInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        description:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        url:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        naturalLanguageInput:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        status:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        isActive:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/BoolFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        project:
          $ref: "#/components/schemas/ProjectUpdateOneWithoutTestsNestedInput"
        createdBy:
          $ref: "#/components/schemas/UserUpdateOneWithoutTestsAsCreatedByNestedInput"
        testRuns:
          $ref: "#/components/schemas/TestRunUpdateManyWithoutTestNestedInput"
    TestUncheckedUpdateWithoutTestSharesInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        description:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        url:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        naturalLanguageInput:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        status:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        isActive:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/BoolFieldUpdateOperationsInput"
        projectId:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        createdById:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        testRuns:
          $ref: "#/components/schemas/TestRunUncheckedUpdateManyWithoutTestNestedInput"
    UserUpsertWithoutTestSharesInput:
      type: object
      properties:
        update:
          oneOf:
            - $ref: "#/components/schemas/UserUpdateWithoutTestSharesInput"
            - $ref: "#/components/schemas/UserUncheckedUpdateWithoutTestSharesInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/UserCreateWithoutTestSharesInput"
            - $ref: "#/components/schemas/UserUncheckedCreateWithoutTestSharesInput"
        where:
          $ref: "#/components/schemas/UserWhereInput"
      required:
        - update
        - create
    UserUpdateToOneWithWhereWithoutTestSharesInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/UserWhereInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/UserUpdateWithoutTestSharesInput"
            - $ref: "#/components/schemas/UserUncheckedUpdateWithoutTestSharesInput"
      required:
        - data
    UserUpdateWithoutTestSharesInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        email:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        pictureUrl:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        tokenInvitation:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        stripeCustomerId:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        status:
          oneOf:
            - $ref: "#/components/schemas/UserStatus"
            - $ref: "#/components/schemas/EnumUserStatusFieldUpdateOperationsInput"
        globalRole:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        password:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        organizationRoles:
          $ref: "#/components/schemas/OrganizationRoleUpdateManyWithoutUserNestedInput"
        testsAsCreatedBy:
          $ref: "#/components/schemas/TestUpdateManyWithoutCreatedByNestedInput"
        testRunsAsExecutedBy:
          $ref: "#/components/schemas/TestRunUpdateManyWithoutExecutedByNestedInput"
    UserUncheckedUpdateWithoutTestSharesInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        email:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        pictureUrl:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        tokenInvitation:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        stripeCustomerId:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        status:
          oneOf:
            - $ref: "#/components/schemas/UserStatus"
            - $ref: "#/components/schemas/EnumUserStatusFieldUpdateOperationsInput"
        globalRole:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        password:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        organizationRoles:
          $ref: "#/components/schemas/OrganizationRoleUncheckedUpdateManyWithoutUserNeste\
            dInput"
        testsAsCreatedBy:
          $ref: "#/components/schemas/TestUncheckedUpdateManyWithoutCreatedByNestedInput"
        testRunsAsExecutedBy:
          $ref: "#/components/schemas/TestRunUncheckedUpdateManyWithoutExecutedByNestedIn\
            put"
    OrganizationRoleCreateWithoutOrganizationInput:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        user:
          $ref: "#/components/schemas/UserCreateNestedOneWithoutOrganizationRolesInput"
      required:
        - name
    OrganizationRoleUncheckedCreateWithoutOrganizationInput:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        userId:
          type: string
      required:
        - name
    OrganizationRoleCreateOrConnectWithoutOrganizationInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/OrganizationRoleWhereUniqueInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/OrganizationRoleCreateWithoutOrganizationInput"
            - $ref: "#/components/schemas/OrganizationRoleUncheckedCreateWithoutOrganizationI\
                nput"
      required:
        - where
        - create
    OrganizationRoleCreateManyOrganizationInputEnvelope:
      type: object
      properties:
        data:
          oneOf:
            - $ref: "#/components/schemas/OrganizationRoleCreateManyOrganizationInput"
            - type: array
              items:
                $ref: "#/components/schemas/OrganizationRoleCreateManyOrganizationInput"
        skipDuplicates:
          type: boolean
      required:
        - data
    ProjectCreateWithoutOrganizationInput:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          oneOf:
            - type: "null"
            - type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        cookies:
          oneOf:
            - $ref: "#/components/schemas/NullableJsonNullValueInput"
            - {}
        session:
          oneOf:
            - $ref: "#/components/schemas/NullableJsonNullValueInput"
            - {}
        localStorage:
          oneOf:
            - $ref: "#/components/schemas/NullableJsonNullValueInput"
            - {}
        tests:
          $ref: "#/components/schemas/TestCreateNestedManyWithoutProjectInput"
      required:
        - name
    ProjectUncheckedCreateWithoutOrganizationInput:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          oneOf:
            - type: "null"
            - type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        cookies:
          oneOf:
            - $ref: "#/components/schemas/NullableJsonNullValueInput"
            - {}
        session:
          oneOf:
            - $ref: "#/components/schemas/NullableJsonNullValueInput"
            - {}
        localStorage:
          oneOf:
            - $ref: "#/components/schemas/NullableJsonNullValueInput"
            - {}
        tests:
          $ref: "#/components/schemas/TestUncheckedCreateNestedManyWithoutProjectInput"
      required:
        - name
    ProjectCreateOrConnectWithoutOrganizationInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/ProjectWhereUniqueInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/ProjectCreateWithoutOrganizationInput"
            - $ref: "#/components/schemas/ProjectUncheckedCreateWithoutOrganizationInput"
      required:
        - where
        - create
    ProjectCreateManyOrganizationInputEnvelope:
      type: object
      properties:
        data:
          oneOf:
            - $ref: "#/components/schemas/ProjectCreateManyOrganizationInput"
            - type: array
              items:
                $ref: "#/components/schemas/ProjectCreateManyOrganizationInput"
        skipDuplicates:
          type: boolean
      required:
        - data
    AgentCreateWithoutOrganizationInput:
      type: object
      properties:
        id:
          type: string
        provider:
          type: string
        modelType:
          type: string
        numAgents:
          type: integer
        isActive:
          type: boolean
        anthropicApiKey:
          oneOf:
            - type: "null"
            - type: string
        awsAccessKeyId:
          oneOf:
            - type: "null"
            - type: string
        awsSecretAccessKey:
          oneOf:
            - type: "null"
            - type: string
        awsSessionToken:
          oneOf:
            - type: "null"
            - type: string
        awsRegion:
          oneOf:
            - type: "null"
            - type: string
        apiEndpoint:
          oneOf:
            - type: "null"
            - type: string
        apiKey:
          oneOf:
            - type: "null"
            - type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - provider
        - modelType
    AgentUncheckedCreateWithoutOrganizationInput:
      type: object
      properties:
        id:
          type: string
        provider:
          type: string
        modelType:
          type: string
        numAgents:
          type: integer
        isActive:
          type: boolean
        anthropicApiKey:
          oneOf:
            - type: "null"
            - type: string
        awsAccessKeyId:
          oneOf:
            - type: "null"
            - type: string
        awsSecretAccessKey:
          oneOf:
            - type: "null"
            - type: string
        awsSessionToken:
          oneOf:
            - type: "null"
            - type: string
        awsRegion:
          oneOf:
            - type: "null"
            - type: string
        apiEndpoint:
          oneOf:
            - type: "null"
            - type: string
        apiKey:
          oneOf:
            - type: "null"
            - type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - provider
        - modelType
    AgentCreateOrConnectWithoutOrganizationInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/AgentWhereUniqueInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/AgentCreateWithoutOrganizationInput"
            - $ref: "#/components/schemas/AgentUncheckedCreateWithoutOrganizationInput"
      required:
        - where
        - create
    AgentCreateManyOrganizationInputEnvelope:
      type: object
      properties:
        data:
          oneOf:
            - $ref: "#/components/schemas/AgentCreateManyOrganizationInput"
            - type: array
              items:
                $ref: "#/components/schemas/AgentCreateManyOrganizationInput"
        skipDuplicates:
          type: boolean
      required:
        - data
    IntegrationCreateWithoutOrganizationInput:
      type: object
      properties:
        id:
          type: string
        type:
          $ref: "#/components/schemas/IntegrationType"
        name:
          type: string
        config:
          oneOf:
            - $ref: "#/components/schemas/JsonNullValueInput"
            - {}
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - type
        - name
        - config
    IntegrationUncheckedCreateWithoutOrganizationInput:
      type: object
      properties:
        id:
          type: string
        type:
          $ref: "#/components/schemas/IntegrationType"
        name:
          type: string
        config:
          oneOf:
            - $ref: "#/components/schemas/JsonNullValueInput"
            - {}
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - type
        - name
        - config
    IntegrationCreateOrConnectWithoutOrganizationInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/IntegrationWhereUniqueInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/IntegrationCreateWithoutOrganizationInput"
            - $ref: "#/components/schemas/IntegrationUncheckedCreateWithoutOrganizationInput"
      required:
        - where
        - create
    IntegrationCreateManyOrganizationInputEnvelope:
      type: object
      properties:
        data:
          oneOf:
            - $ref: "#/components/schemas/IntegrationCreateManyOrganizationInput"
            - type: array
              items:
                $ref: "#/components/schemas/IntegrationCreateManyOrganizationInput"
        skipDuplicates:
          type: boolean
      required:
        - data
    OrganizationRoleUpsertWithWhereUniqueWithoutOrganizationInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/OrganizationRoleWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/OrganizationRoleUpdateWithoutOrganizationInput"
            - $ref: "#/components/schemas/OrganizationRoleUncheckedUpdateWithoutOrganizationI\
                nput"
        create:
          oneOf:
            - $ref: "#/components/schemas/OrganizationRoleCreateWithoutOrganizationInput"
            - $ref: "#/components/schemas/OrganizationRoleUncheckedCreateWithoutOrganizationI\
                nput"
      required:
        - where
        - update
        - create
    OrganizationRoleUpdateWithWhereUniqueWithoutOrganizationInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/OrganizationRoleWhereUniqueInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/OrganizationRoleUpdateWithoutOrganizationInput"
            - $ref: "#/components/schemas/OrganizationRoleUncheckedUpdateWithoutOrganizationI\
                nput"
      required:
        - where
        - data
    OrganizationRoleUpdateManyWithWhereWithoutOrganizationInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/OrganizationRoleScalarWhereInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/OrganizationRoleUpdateManyMutationInput"
            - $ref: "#/components/schemas/OrganizationRoleUncheckedUpdateManyWithoutOrganizat\
                ionInput"
      required:
        - where
        - data
    ProjectUpsertWithWhereUniqueWithoutOrganizationInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/ProjectWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/ProjectUpdateWithoutOrganizationInput"
            - $ref: "#/components/schemas/ProjectUncheckedUpdateWithoutOrganizationInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/ProjectCreateWithoutOrganizationInput"
            - $ref: "#/components/schemas/ProjectUncheckedCreateWithoutOrganizationInput"
      required:
        - where
        - update
        - create
    ProjectUpdateWithWhereUniqueWithoutOrganizationInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/ProjectWhereUniqueInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/ProjectUpdateWithoutOrganizationInput"
            - $ref: "#/components/schemas/ProjectUncheckedUpdateWithoutOrganizationInput"
      required:
        - where
        - data
    ProjectUpdateManyWithWhereWithoutOrganizationInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/ProjectScalarWhereInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/ProjectUpdateManyMutationInput"
            - $ref: "#/components/schemas/ProjectUncheckedUpdateManyWithoutOrganizationInput"
      required:
        - where
        - data
    ProjectScalarWhereInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/ProjectScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/ProjectScalarWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/ProjectScalarWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/ProjectScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/ProjectScalarWhereInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        name:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        description:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        organizationId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        createdAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        cookies:
          $ref: "#/components/schemas/JsonNullableFilter"
        session:
          $ref: "#/components/schemas/JsonNullableFilter"
        localStorage:
          $ref: "#/components/schemas/JsonNullableFilter"
    AgentUpsertWithWhereUniqueWithoutOrganizationInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/AgentWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/AgentUpdateWithoutOrganizationInput"
            - $ref: "#/components/schemas/AgentUncheckedUpdateWithoutOrganizationInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/AgentCreateWithoutOrganizationInput"
            - $ref: "#/components/schemas/AgentUncheckedCreateWithoutOrganizationInput"
      required:
        - where
        - update
        - create
    AgentUpdateWithWhereUniqueWithoutOrganizationInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/AgentWhereUniqueInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/AgentUpdateWithoutOrganizationInput"
            - $ref: "#/components/schemas/AgentUncheckedUpdateWithoutOrganizationInput"
      required:
        - where
        - data
    AgentUpdateManyWithWhereWithoutOrganizationInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/AgentScalarWhereInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/AgentUpdateManyMutationInput"
            - $ref: "#/components/schemas/AgentUncheckedUpdateManyWithoutOrganizationInput"
      required:
        - where
        - data
    AgentScalarWhereInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/AgentScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/AgentScalarWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/AgentScalarWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/AgentScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/AgentScalarWhereInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        provider:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        modelType:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        numAgents:
          oneOf:
            - $ref: "#/components/schemas/IntFilter"
            - type: integer
        isActive:
          oneOf:
            - $ref: "#/components/schemas/BoolFilter"
            - type: boolean
        anthropicApiKey:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        awsAccessKeyId:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        awsSecretAccessKey:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        awsSessionToken:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        awsRegion:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        apiEndpoint:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        apiKey:
          oneOf:
            - $ref: "#/components/schemas/StringNullableFilter"
            - type: string
            - type: "null"
        organizationId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        createdAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
    IntegrationUpsertWithWhereUniqueWithoutOrganizationInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/IntegrationWhereUniqueInput"
        update:
          oneOf:
            - $ref: "#/components/schemas/IntegrationUpdateWithoutOrganizationInput"
            - $ref: "#/components/schemas/IntegrationUncheckedUpdateWithoutOrganizationInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/IntegrationCreateWithoutOrganizationInput"
            - $ref: "#/components/schemas/IntegrationUncheckedCreateWithoutOrganizationInput"
      required:
        - where
        - update
        - create
    IntegrationUpdateWithWhereUniqueWithoutOrganizationInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/IntegrationWhereUniqueInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/IntegrationUpdateWithoutOrganizationInput"
            - $ref: "#/components/schemas/IntegrationUncheckedUpdateWithoutOrganizationInput"
      required:
        - where
        - data
    IntegrationUpdateManyWithWhereWithoutOrganizationInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/IntegrationScalarWhereInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/IntegrationUpdateManyMutationInput"
            - $ref: "#/components/schemas/IntegrationUncheckedUpdateManyWithoutOrganizationIn\
                put"
      required:
        - where
        - data
    IntegrationScalarWhereInput:
      type: object
      properties:
        AND:
          oneOf:
            - $ref: "#/components/schemas/IntegrationScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/IntegrationScalarWhereInput"
        OR:
          type: array
          items:
            $ref: "#/components/schemas/IntegrationScalarWhereInput"
        NOT:
          oneOf:
            - $ref: "#/components/schemas/IntegrationScalarWhereInput"
            - type: array
              items:
                $ref: "#/components/schemas/IntegrationScalarWhereInput"
        id:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        type:
          oneOf:
            - $ref: "#/components/schemas/EnumIntegrationTypeFilter"
            - $ref: "#/components/schemas/IntegrationType"
        name:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
        config:
          $ref: "#/components/schemas/JsonFilter"
        createdAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - $ref: "#/components/schemas/DateTimeFilter"
            - type: string
              format: date-time
        organizationId:
          oneOf:
            - $ref: "#/components/schemas/StringFilter"
            - type: string
    UserCreateWithoutOrganizationRolesInput:
      type: object
      properties:
        id:
          type: string
        name:
          oneOf:
            - type: "null"
            - type: string
        email:
          oneOf:
            - type: "null"
            - type: string
        pictureUrl:
          oneOf:
            - type: "null"
            - type: string
        tokenInvitation:
          oneOf:
            - type: "null"
            - type: string
        stripeCustomerId:
          oneOf:
            - type: "null"
            - type: string
        status:
          $ref: "#/components/schemas/UserStatus"
        globalRole:
          type: string
        password:
          oneOf:
            - type: "null"
            - type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        testsAsCreatedBy:
          $ref: "#/components/schemas/TestCreateNestedManyWithoutCreatedByInput"
        testRunsAsExecutedBy:
          $ref: "#/components/schemas/TestRunCreateNestedManyWithoutExecutedByInput"
        testShares:
          $ref: "#/components/schemas/TestShareCreateNestedManyWithoutUserInput"
    UserUncheckedCreateWithoutOrganizationRolesInput:
      type: object
      properties:
        id:
          type: string
        name:
          oneOf:
            - type: "null"
            - type: string
        email:
          oneOf:
            - type: "null"
            - type: string
        pictureUrl:
          oneOf:
            - type: "null"
            - type: string
        tokenInvitation:
          oneOf:
            - type: "null"
            - type: string
        stripeCustomerId:
          oneOf:
            - type: "null"
            - type: string
        status:
          $ref: "#/components/schemas/UserStatus"
        globalRole:
          type: string
        password:
          oneOf:
            - type: "null"
            - type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        testsAsCreatedBy:
          $ref: "#/components/schemas/TestUncheckedCreateNestedManyWithoutCreatedByInput"
        testRunsAsExecutedBy:
          $ref: "#/components/schemas/TestRunUncheckedCreateNestedManyWithoutExecutedByIn\
            put"
        testShares:
          $ref: "#/components/schemas/TestShareUncheckedCreateNestedManyWithoutUserInput"
    UserCreateOrConnectWithoutOrganizationRolesInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/UserWhereUniqueInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/UserCreateWithoutOrganizationRolesInput"
            - $ref: "#/components/schemas/UserUncheckedCreateWithoutOrganizationRolesInput"
      required:
        - where
        - create
    OrganizationCreateWithoutRolesInput:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        pictureUrl:
          oneOf:
            - type: "null"
            - type: string
        stripeCustomerId:
          oneOf:
            - type: "null"
            - type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        projects:
          $ref: "#/components/schemas/ProjectCreateNestedManyWithoutOrganizationInput"
        agentCredentials:
          $ref: "#/components/schemas/AgentCreateNestedManyWithoutOrganizationInput"
        integration:
          $ref: "#/components/schemas/IntegrationCreateNestedManyWithoutOrganizationInput"
      required:
        - name
    OrganizationUncheckedCreateWithoutRolesInput:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        pictureUrl:
          oneOf:
            - type: "null"
            - type: string
        stripeCustomerId:
          oneOf:
            - type: "null"
            - type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        projects:
          $ref: "#/components/schemas/ProjectUncheckedCreateNestedManyWithoutOrganization\
            Input"
        agentCredentials:
          $ref: "#/components/schemas/AgentUncheckedCreateNestedManyWithoutOrganizationIn\
            put"
        integration:
          $ref: "#/components/schemas/IntegrationUncheckedCreateNestedManyWithoutOrganiza\
            tionInput"
      required:
        - name
    OrganizationCreateOrConnectWithoutRolesInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/OrganizationWhereUniqueInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/OrganizationCreateWithoutRolesInput"
            - $ref: "#/components/schemas/OrganizationUncheckedCreateWithoutRolesInput"
      required:
        - where
        - create
    UserUpsertWithoutOrganizationRolesInput:
      type: object
      properties:
        update:
          oneOf:
            - $ref: "#/components/schemas/UserUpdateWithoutOrganizationRolesInput"
            - $ref: "#/components/schemas/UserUncheckedUpdateWithoutOrganizationRolesInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/UserCreateWithoutOrganizationRolesInput"
            - $ref: "#/components/schemas/UserUncheckedCreateWithoutOrganizationRolesInput"
        where:
          $ref: "#/components/schemas/UserWhereInput"
      required:
        - update
        - create
    UserUpdateToOneWithWhereWithoutOrganizationRolesInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/UserWhereInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/UserUpdateWithoutOrganizationRolesInput"
            - $ref: "#/components/schemas/UserUncheckedUpdateWithoutOrganizationRolesInput"
      required:
        - data
    UserUpdateWithoutOrganizationRolesInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        email:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        pictureUrl:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        tokenInvitation:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        stripeCustomerId:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        status:
          oneOf:
            - $ref: "#/components/schemas/UserStatus"
            - $ref: "#/components/schemas/EnumUserStatusFieldUpdateOperationsInput"
        globalRole:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        password:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        testsAsCreatedBy:
          $ref: "#/components/schemas/TestUpdateManyWithoutCreatedByNestedInput"
        testRunsAsExecutedBy:
          $ref: "#/components/schemas/TestRunUpdateManyWithoutExecutedByNestedInput"
        testShares:
          $ref: "#/components/schemas/TestShareUpdateManyWithoutUserNestedInput"
    UserUncheckedUpdateWithoutOrganizationRolesInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        email:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        pictureUrl:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        tokenInvitation:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        stripeCustomerId:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        status:
          oneOf:
            - $ref: "#/components/schemas/UserStatus"
            - $ref: "#/components/schemas/EnumUserStatusFieldUpdateOperationsInput"
        globalRole:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        password:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        testsAsCreatedBy:
          $ref: "#/components/schemas/TestUncheckedUpdateManyWithoutCreatedByNestedInput"
        testRunsAsExecutedBy:
          $ref: "#/components/schemas/TestRunUncheckedUpdateManyWithoutExecutedByNestedIn\
            put"
        testShares:
          $ref: "#/components/schemas/TestShareUncheckedUpdateManyWithoutUserNestedInput"
    OrganizationUpsertWithoutRolesInput:
      type: object
      properties:
        update:
          oneOf:
            - $ref: "#/components/schemas/OrganizationUpdateWithoutRolesInput"
            - $ref: "#/components/schemas/OrganizationUncheckedUpdateWithoutRolesInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/OrganizationCreateWithoutRolesInput"
            - $ref: "#/components/schemas/OrganizationUncheckedCreateWithoutRolesInput"
        where:
          $ref: "#/components/schemas/OrganizationWhereInput"
      required:
        - update
        - create
    OrganizationUpdateToOneWithWhereWithoutRolesInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/OrganizationWhereInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/OrganizationUpdateWithoutRolesInput"
            - $ref: "#/components/schemas/OrganizationUncheckedUpdateWithoutRolesInput"
      required:
        - data
    OrganizationUpdateWithoutRolesInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        pictureUrl:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        stripeCustomerId:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        projects:
          $ref: "#/components/schemas/ProjectUpdateManyWithoutOrganizationNestedInput"
        agentCredentials:
          $ref: "#/components/schemas/AgentUpdateManyWithoutOrganizationNestedInput"
        integration:
          $ref: "#/components/schemas/IntegrationUpdateManyWithoutOrganizationNestedInput"
    OrganizationUncheckedUpdateWithoutRolesInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        pictureUrl:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        stripeCustomerId:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        projects:
          $ref: "#/components/schemas/ProjectUncheckedUpdateManyWithoutOrganizationNested\
            Input"
        agentCredentials:
          $ref: "#/components/schemas/AgentUncheckedUpdateManyWithoutOrganizationNestedIn\
            put"
        integration:
          $ref: "#/components/schemas/IntegrationUncheckedUpdateManyWithoutOrganizationNe\
            stedInput"
    OrganizationCreateWithoutAgentCredentialsInput:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        pictureUrl:
          oneOf:
            - type: "null"
            - type: string
        stripeCustomerId:
          oneOf:
            - type: "null"
            - type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        roles:
          $ref: "#/components/schemas/OrganizationRoleCreateNestedManyWithoutOrganization\
            Input"
        projects:
          $ref: "#/components/schemas/ProjectCreateNestedManyWithoutOrganizationInput"
        integration:
          $ref: "#/components/schemas/IntegrationCreateNestedManyWithoutOrganizationInput"
      required:
        - name
    OrganizationUncheckedCreateWithoutAgentCredentialsInput:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        pictureUrl:
          oneOf:
            - type: "null"
            - type: string
        stripeCustomerId:
          oneOf:
            - type: "null"
            - type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        roles:
          $ref: "#/components/schemas/OrganizationRoleUncheckedCreateNestedManyWithoutOrg\
            anizationInput"
        projects:
          $ref: "#/components/schemas/ProjectUncheckedCreateNestedManyWithoutOrganization\
            Input"
        integration:
          $ref: "#/components/schemas/IntegrationUncheckedCreateNestedManyWithoutOrganiza\
            tionInput"
      required:
        - name
    OrganizationCreateOrConnectWithoutAgentCredentialsInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/OrganizationWhereUniqueInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/OrganizationCreateWithoutAgentCredentialsInput"
            - $ref: "#/components/schemas/OrganizationUncheckedCreateWithoutAgentCredentialsI\
                nput"
      required:
        - where
        - create
    OrganizationUpsertWithoutAgentCredentialsInput:
      type: object
      properties:
        update:
          oneOf:
            - $ref: "#/components/schemas/OrganizationUpdateWithoutAgentCredentialsInput"
            - $ref: "#/components/schemas/OrganizationUncheckedUpdateWithoutAgentCredentialsI\
                nput"
        create:
          oneOf:
            - $ref: "#/components/schemas/OrganizationCreateWithoutAgentCredentialsInput"
            - $ref: "#/components/schemas/OrganizationUncheckedCreateWithoutAgentCredentialsI\
                nput"
        where:
          $ref: "#/components/schemas/OrganizationWhereInput"
      required:
        - update
        - create
    OrganizationUpdateToOneWithWhereWithoutAgentCredentialsInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/OrganizationWhereInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/OrganizationUpdateWithoutAgentCredentialsInput"
            - $ref: "#/components/schemas/OrganizationUncheckedUpdateWithoutAgentCredentialsI\
                nput"
      required:
        - data
    OrganizationUpdateWithoutAgentCredentialsInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        pictureUrl:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        stripeCustomerId:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        roles:
          $ref: "#/components/schemas/OrganizationRoleUpdateManyWithoutOrganizationNested\
            Input"
        projects:
          $ref: "#/components/schemas/ProjectUpdateManyWithoutOrganizationNestedInput"
        integration:
          $ref: "#/components/schemas/IntegrationUpdateManyWithoutOrganizationNestedInput"
    OrganizationUncheckedUpdateWithoutAgentCredentialsInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        pictureUrl:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        stripeCustomerId:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        roles:
          $ref: "#/components/schemas/OrganizationRoleUncheckedUpdateManyWithoutOrganizat\
            ionNestedInput"
        projects:
          $ref: "#/components/schemas/ProjectUncheckedUpdateManyWithoutOrganizationNested\
            Input"
        integration:
          $ref: "#/components/schemas/IntegrationUncheckedUpdateManyWithoutOrganizationNe\
            stedInput"
    OrganizationCreateWithoutIntegrationInput:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        pictureUrl:
          oneOf:
            - type: "null"
            - type: string
        stripeCustomerId:
          oneOf:
            - type: "null"
            - type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        roles:
          $ref: "#/components/schemas/OrganizationRoleCreateNestedManyWithoutOrganization\
            Input"
        projects:
          $ref: "#/components/schemas/ProjectCreateNestedManyWithoutOrganizationInput"
        agentCredentials:
          $ref: "#/components/schemas/AgentCreateNestedManyWithoutOrganizationInput"
      required:
        - name
    OrganizationUncheckedCreateWithoutIntegrationInput:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        pictureUrl:
          oneOf:
            - type: "null"
            - type: string
        stripeCustomerId:
          oneOf:
            - type: "null"
            - type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        roles:
          $ref: "#/components/schemas/OrganizationRoleUncheckedCreateNestedManyWithoutOrg\
            anizationInput"
        projects:
          $ref: "#/components/schemas/ProjectUncheckedCreateNestedManyWithoutOrganization\
            Input"
        agentCredentials:
          $ref: "#/components/schemas/AgentUncheckedCreateNestedManyWithoutOrganizationIn\
            put"
      required:
        - name
    OrganizationCreateOrConnectWithoutIntegrationInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/OrganizationWhereUniqueInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/OrganizationCreateWithoutIntegrationInput"
            - $ref: "#/components/schemas/OrganizationUncheckedCreateWithoutIntegrationInput"
      required:
        - where
        - create
    OrganizationUpsertWithoutIntegrationInput:
      type: object
      properties:
        update:
          oneOf:
            - $ref: "#/components/schemas/OrganizationUpdateWithoutIntegrationInput"
            - $ref: "#/components/schemas/OrganizationUncheckedUpdateWithoutIntegrationInput"
        create:
          oneOf:
            - $ref: "#/components/schemas/OrganizationCreateWithoutIntegrationInput"
            - $ref: "#/components/schemas/OrganizationUncheckedCreateWithoutIntegrationInput"
        where:
          $ref: "#/components/schemas/OrganizationWhereInput"
      required:
        - update
        - create
    OrganizationUpdateToOneWithWhereWithoutIntegrationInput:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/OrganizationWhereInput"
        data:
          oneOf:
            - $ref: "#/components/schemas/OrganizationUpdateWithoutIntegrationInput"
            - $ref: "#/components/schemas/OrganizationUncheckedUpdateWithoutIntegrationInput"
      required:
        - data
    OrganizationUpdateWithoutIntegrationInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        pictureUrl:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        stripeCustomerId:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        roles:
          $ref: "#/components/schemas/OrganizationRoleUpdateManyWithoutOrganizationNested\
            Input"
        projects:
          $ref: "#/components/schemas/ProjectUpdateManyWithoutOrganizationNestedInput"
        agentCredentials:
          $ref: "#/components/schemas/AgentUpdateManyWithoutOrganizationNestedInput"
    OrganizationUncheckedUpdateWithoutIntegrationInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        pictureUrl:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        stripeCustomerId:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        roles:
          $ref: "#/components/schemas/OrganizationRoleUncheckedUpdateManyWithoutOrganizat\
            ionNestedInput"
        projects:
          $ref: "#/components/schemas/ProjectUncheckedUpdateManyWithoutOrganizationNested\
            Input"
        agentCredentials:
          $ref: "#/components/schemas/AgentUncheckedUpdateManyWithoutOrganizationNestedIn\
            put"
    OrganizationRoleCreateManyUserInput:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        organizationId:
          type: string
      required:
        - name
        - organizationId
    TestCreateManyCreatedByInput:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          oneOf:
            - type: "null"
            - type: string
        url:
          oneOf:
            - type: "null"
            - type: string
        naturalLanguageInput:
          oneOf:
            - type: "null"
            - type: string
        status:
          type: string
        isActive:
          type: boolean
        projectId:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - name
        - status
        - projectId
    TestRunCreateManyExecutedByInput:
      type: object
      properties:
        id:
          type: string
        status:
          type: string
        errorLog:
          oneOf:
            - type: "null"
            - type: string
        reportUrl:
          oneOf:
            - type: "null"
            - type: string
        testId:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - status
        - testId
    TestShareCreateManyUserInput:
      type: object
      properties:
        id:
          type: string
        permission:
          type: string
        testId:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - permission
        - testId
    OrganizationRoleUpdateWithoutUserInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        organization:
          $ref: "#/components/schemas/OrganizationUpdateOneRequiredWithoutRolesNestedInpu\
            t"
    OrganizationRoleUncheckedUpdateWithoutUserInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        organizationId:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
    OrganizationRoleUncheckedUpdateManyWithoutUserInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        organizationId:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
    TestUpdateWithoutCreatedByInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        description:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        url:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        naturalLanguageInput:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        status:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        isActive:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/BoolFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        project:
          $ref: "#/components/schemas/ProjectUpdateOneWithoutTestsNestedInput"
        testRuns:
          $ref: "#/components/schemas/TestRunUpdateManyWithoutTestNestedInput"
        testShares:
          $ref: "#/components/schemas/TestShareUpdateManyWithoutTestNestedInput"
    TestUncheckedUpdateWithoutCreatedByInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        description:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        url:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        naturalLanguageInput:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        status:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        isActive:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/BoolFieldUpdateOperationsInput"
        projectId:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        testRuns:
          $ref: "#/components/schemas/TestRunUncheckedUpdateManyWithoutTestNestedInput"
        testShares:
          $ref: "#/components/schemas/TestShareUncheckedUpdateManyWithoutTestNestedInput"
    TestUncheckedUpdateManyWithoutCreatedByInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        description:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        url:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        naturalLanguageInput:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        status:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        isActive:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/BoolFieldUpdateOperationsInput"
        projectId:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
    TestRunUpdateWithoutExecutedByInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        status:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        errorLog:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        reportUrl:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        test:
          $ref: "#/components/schemas/TestUpdateOneWithoutTestRunsNestedInput"
        testSteps:
          $ref: "#/components/schemas/TestStepUpdateManyWithoutTestRunNestedInput"
    TestRunUncheckedUpdateWithoutExecutedByInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        status:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        errorLog:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        reportUrl:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        testId:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        testSteps:
          $ref: "#/components/schemas/TestStepUncheckedUpdateManyWithoutTestRunNestedInpu\
            t"
    TestRunUncheckedUpdateManyWithoutExecutedByInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        status:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        errorLog:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        reportUrl:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        testId:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
    TestShareUpdateWithoutUserInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        permission:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        test:
          $ref: "#/components/schemas/TestUpdateOneWithoutTestSharesNestedInput"
    TestShareUncheckedUpdateWithoutUserInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        permission:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        testId:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
    TestShareUncheckedUpdateManyWithoutUserInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        permission:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        testId:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
    TestCreateManyProjectInput:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          oneOf:
            - type: "null"
            - type: string
        url:
          oneOf:
            - type: "null"
            - type: string
        naturalLanguageInput:
          oneOf:
            - type: "null"
            - type: string
        status:
          type: string
        isActive:
          type: boolean
        createdById:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - name
        - status
        - createdById
    TestUpdateWithoutProjectInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        description:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        url:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        naturalLanguageInput:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        status:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        isActive:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/BoolFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        createdBy:
          $ref: "#/components/schemas/UserUpdateOneWithoutTestsAsCreatedByNestedInput"
        testRuns:
          $ref: "#/components/schemas/TestRunUpdateManyWithoutTestNestedInput"
        testShares:
          $ref: "#/components/schemas/TestShareUpdateManyWithoutTestNestedInput"
    TestUncheckedUpdateWithoutProjectInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        description:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        url:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        naturalLanguageInput:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        status:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        isActive:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/BoolFieldUpdateOperationsInput"
        createdById:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        testRuns:
          $ref: "#/components/schemas/TestRunUncheckedUpdateManyWithoutTestNestedInput"
        testShares:
          $ref: "#/components/schemas/TestShareUncheckedUpdateManyWithoutTestNestedInput"
    TestUncheckedUpdateManyWithoutProjectInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        description:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        url:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        naturalLanguageInput:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        status:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        isActive:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/BoolFieldUpdateOperationsInput"
        createdById:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
    TestRunCreateManyTestInput:
      type: object
      properties:
        id:
          type: string
        status:
          type: string
        errorLog:
          oneOf:
            - type: "null"
            - type: string
        reportUrl:
          oneOf:
            - type: "null"
            - type: string
        executedById:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - status
        - executedById
    TestShareCreateManyTestInput:
      type: object
      properties:
        id:
          type: string
        permission:
          type: string
        userId:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - permission
        - userId
    TestRunUpdateWithoutTestInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        status:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        errorLog:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        reportUrl:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        executedBy:
          $ref: "#/components/schemas/UserUpdateOneWithoutTestRunsAsExecutedByNestedInput"
        testSteps:
          $ref: "#/components/schemas/TestStepUpdateManyWithoutTestRunNestedInput"
    TestRunUncheckedUpdateWithoutTestInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        status:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        errorLog:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        reportUrl:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        executedById:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        testSteps:
          $ref: "#/components/schemas/TestStepUncheckedUpdateManyWithoutTestRunNestedInpu\
            t"
    TestRunUncheckedUpdateManyWithoutTestInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        status:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        errorLog:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        reportUrl:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        executedById:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
    TestShareUpdateWithoutTestInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        permission:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        user:
          $ref: "#/components/schemas/UserUpdateOneWithoutTestSharesNestedInput"
    TestShareUncheckedUpdateWithoutTestInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        permission:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        userId:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
    TestShareUncheckedUpdateManyWithoutTestInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        permission:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        userId:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
    TestStepCreateManyTestRunInput:
      type: object
      properties:
        id:
          type: string
        order:
          type: number
        action:
          type: string
        status:
          type: string
        screenshotUrl:
          oneOf:
            - type: "null"
            - type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - order
        - action
        - status
    TestStepUpdateWithoutTestRunInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        order:
          oneOf:
            - type: number
            - $ref: "#/components/schemas/FloatFieldUpdateOperationsInput"
        action:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        status:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        screenshotUrl:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
    TestStepUncheckedUpdateWithoutTestRunInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        order:
          oneOf:
            - type: number
            - $ref: "#/components/schemas/FloatFieldUpdateOperationsInput"
        action:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        status:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        screenshotUrl:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
    TestStepUncheckedUpdateManyWithoutTestRunInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        order:
          oneOf:
            - type: number
            - $ref: "#/components/schemas/FloatFieldUpdateOperationsInput"
        action:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        status:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        screenshotUrl:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
    OrganizationRoleCreateManyOrganizationInput:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        userId:
          type: string
      required:
        - name
    ProjectCreateManyOrganizationInput:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          oneOf:
            - type: "null"
            - type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        cookies:
          oneOf:
            - $ref: "#/components/schemas/NullableJsonNullValueInput"
            - {}
        session:
          oneOf:
            - $ref: "#/components/schemas/NullableJsonNullValueInput"
            - {}
        localStorage:
          oneOf:
            - $ref: "#/components/schemas/NullableJsonNullValueInput"
            - {}
      required:
        - name
    AgentCreateManyOrganizationInput:
      type: object
      properties:
        id:
          type: string
        provider:
          type: string
        modelType:
          type: string
        numAgents:
          type: integer
        isActive:
          type: boolean
        anthropicApiKey:
          oneOf:
            - type: "null"
            - type: string
        awsAccessKeyId:
          oneOf:
            - type: "null"
            - type: string
        awsSecretAccessKey:
          oneOf:
            - type: "null"
            - type: string
        awsSessionToken:
          oneOf:
            - type: "null"
            - type: string
        awsRegion:
          oneOf:
            - type: "null"
            - type: string
        apiEndpoint:
          oneOf:
            - type: "null"
            - type: string
        apiKey:
          oneOf:
            - type: "null"
            - type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - provider
        - modelType
    IntegrationCreateManyOrganizationInput:
      type: object
      properties:
        id:
          type: string
        type:
          $ref: "#/components/schemas/IntegrationType"
        name:
          type: string
        config:
          oneOf:
            - $ref: "#/components/schemas/JsonNullValueInput"
            - {}
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - type
        - name
        - config
    OrganizationRoleUpdateWithoutOrganizationInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        user:
          $ref: "#/components/schemas/UserUpdateOneRequiredWithoutOrganizationRolesNested\
            Input"
    OrganizationRoleUncheckedUpdateWithoutOrganizationInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        userId:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
    OrganizationRoleUncheckedUpdateManyWithoutOrganizationInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        userId:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
    ProjectUpdateWithoutOrganizationInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        description:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        cookies:
          oneOf:
            - $ref: "#/components/schemas/NullableJsonNullValueInput"
            - {}
        session:
          oneOf:
            - $ref: "#/components/schemas/NullableJsonNullValueInput"
            - {}
        localStorage:
          oneOf:
            - $ref: "#/components/schemas/NullableJsonNullValueInput"
            - {}
        tests:
          $ref: "#/components/schemas/TestUpdateManyWithoutProjectNestedInput"
    ProjectUncheckedUpdateWithoutOrganizationInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        description:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        cookies:
          oneOf:
            - $ref: "#/components/schemas/NullableJsonNullValueInput"
            - {}
        session:
          oneOf:
            - $ref: "#/components/schemas/NullableJsonNullValueInput"
            - {}
        localStorage:
          oneOf:
            - $ref: "#/components/schemas/NullableJsonNullValueInput"
            - {}
        tests:
          $ref: "#/components/schemas/TestUncheckedUpdateManyWithoutProjectNestedInput"
    ProjectUncheckedUpdateManyWithoutOrganizationInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        description:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        cookies:
          oneOf:
            - $ref: "#/components/schemas/NullableJsonNullValueInput"
            - {}
        session:
          oneOf:
            - $ref: "#/components/schemas/NullableJsonNullValueInput"
            - {}
        localStorage:
          oneOf:
            - $ref: "#/components/schemas/NullableJsonNullValueInput"
            - {}
    AgentUpdateWithoutOrganizationInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        provider:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        modelType:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        numAgents:
          oneOf:
            - type: integer
            - $ref: "#/components/schemas/IntFieldUpdateOperationsInput"
        isActive:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/BoolFieldUpdateOperationsInput"
        anthropicApiKey:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        awsAccessKeyId:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        awsSecretAccessKey:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        awsSessionToken:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        awsRegion:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        apiEndpoint:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        apiKey:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
    AgentUncheckedUpdateWithoutOrganizationInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        provider:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        modelType:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        numAgents:
          oneOf:
            - type: integer
            - $ref: "#/components/schemas/IntFieldUpdateOperationsInput"
        isActive:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/BoolFieldUpdateOperationsInput"
        anthropicApiKey:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        awsAccessKeyId:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        awsSecretAccessKey:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        awsSessionToken:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        awsRegion:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        apiEndpoint:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        apiKey:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
    AgentUncheckedUpdateManyWithoutOrganizationInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        provider:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        modelType:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        numAgents:
          oneOf:
            - type: integer
            - $ref: "#/components/schemas/IntFieldUpdateOperationsInput"
        isActive:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/BoolFieldUpdateOperationsInput"
        anthropicApiKey:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        awsAccessKeyId:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        awsSecretAccessKey:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        awsSessionToken:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        awsRegion:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        apiEndpoint:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        apiKey:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/NullableStringFieldUpdateOperationsInput"
            - type: "null"
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
    IntegrationUpdateWithoutOrganizationInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        type:
          oneOf:
            - $ref: "#/components/schemas/IntegrationType"
            - $ref: "#/components/schemas/EnumIntegrationTypeFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        config:
          oneOf:
            - $ref: "#/components/schemas/JsonNullValueInput"
            - {}
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
    IntegrationUncheckedUpdateWithoutOrganizationInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        type:
          oneOf:
            - $ref: "#/components/schemas/IntegrationType"
            - $ref: "#/components/schemas/EnumIntegrationTypeFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        config:
          oneOf:
            - $ref: "#/components/schemas/JsonNullValueInput"
            - {}
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
    IntegrationUncheckedUpdateManyWithoutOrganizationInput:
      type: object
      properties:
        id:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        type:
          oneOf:
            - $ref: "#/components/schemas/IntegrationType"
            - $ref: "#/components/schemas/EnumIntegrationTypeFieldUpdateOperationsInput"
        name:
          oneOf:
            - type: string
            - $ref: "#/components/schemas/StringFieldUpdateOperationsInput"
        config:
          oneOf:
            - $ref: "#/components/schemas/JsonNullValueInput"
            - {}
        createdAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
        updatedAt:
          oneOf:
            - type: string
              format: date-time
            - $ref: "#/components/schemas/DateTimeFieldUpdateOperationsInput"
    UserArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/UserSelect"
        include:
          $ref: "#/components/schemas/UserInclude"
    ProjectArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/ProjectSelect"
        include:
          $ref: "#/components/schemas/ProjectInclude"
    TestArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/TestSelect"
        include:
          $ref: "#/components/schemas/TestInclude"
    TestRunArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/TestRunSelect"
        include:
          $ref: "#/components/schemas/TestRunInclude"
    OrganizationArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/OrganizationSelect"
        include:
          $ref: "#/components/schemas/OrganizationInclude"
    UserInclude:
      type: object
      properties:
        organizationRoles:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/OrganizationRoleFindManyArgs"
        testsAsCreatedBy:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/TestFindManyArgs"
        testRunsAsExecutedBy:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/TestRunFindManyArgs"
        testShares:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/TestShareFindManyArgs"
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/UserCountOutputTypeArgs"
    ProjectInclude:
      type: object
      properties:
        organization:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/OrganizationArgs"
        tests:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/TestFindManyArgs"
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/ProjectCountOutputTypeArgs"
    TestInclude:
      type: object
      properties:
        project:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/ProjectArgs"
        createdBy:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/UserArgs"
        testRuns:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/TestRunFindManyArgs"
        testShares:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/TestShareFindManyArgs"
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/TestCountOutputTypeArgs"
    TestRunInclude:
      type: object
      properties:
        test:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/TestArgs"
        executedBy:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/UserArgs"
        testSteps:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/TestStepFindManyArgs"
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/TestRunCountOutputTypeArgs"
    TestStepInclude:
      type: object
      properties:
        testRun:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/TestRunArgs"
    TestShareInclude:
      type: object
      properties:
        test:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/TestArgs"
        user:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/UserArgs"
    OrganizationInclude:
      type: object
      properties:
        roles:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/OrganizationRoleFindManyArgs"
        projects:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/ProjectFindManyArgs"
        agentCredentials:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/AgentFindManyArgs"
        integration:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/IntegrationFindManyArgs"
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/OrganizationCountOutputTypeArgs"
    OrganizationRoleInclude:
      type: object
      properties:
        user:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/UserArgs"
        organization:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/OrganizationArgs"
    AgentInclude:
      type: object
      properties:
        organization:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/OrganizationArgs"
    IntegrationInclude:
      type: object
      properties:
        organization:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/OrganizationArgs"
    UserCountOutputTypeSelect:
      type: object
      properties:
        organizationRoles:
          type: boolean
        testsAsCreatedBy:
          type: boolean
        testRunsAsExecutedBy:
          type: boolean
        testShares:
          type: boolean
    ProjectCountOutputTypeSelect:
      type: object
      properties:
        tests:
          type: boolean
    TestCountOutputTypeSelect:
      type: object
      properties:
        testRuns:
          type: boolean
        testShares:
          type: boolean
    TestRunCountOutputTypeSelect:
      type: object
      properties:
        testSteps:
          type: boolean
    OrganizationCountOutputTypeSelect:
      type: object
      properties:
        roles:
          type: boolean
        projects:
          type: boolean
        agentCredentials:
          type: boolean
        integration:
          type: boolean
    UserCountOutputTypeArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/UserCountOutputTypeSelect"
    ProjectCountOutputTypeArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/ProjectCountOutputTypeSelect"
    TestCountOutputTypeArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/TestCountOutputTypeSelect"
    TestRunCountOutputTypeArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/TestRunCountOutputTypeSelect"
    OrganizationCountOutputTypeArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/OrganizationCountOutputTypeSelect"
    UserSelect:
      type: object
      properties:
        id:
          type: boolean
        name:
          type: boolean
        email:
          type: boolean
        pictureUrl:
          type: boolean
        tokenInvitation:
          type: boolean
        stripeCustomerId:
          type: boolean
        status:
          type: boolean
        globalRole:
          type: boolean
        password:
          type: boolean
        createdAt:
          type: boolean
        updatedAt:
          type: boolean
        organizationRoles:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/OrganizationRoleFindManyArgs"
        testsAsCreatedBy:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/TestFindManyArgs"
        testRunsAsExecutedBy:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/TestRunFindManyArgs"
        testShares:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/TestShareFindManyArgs"
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/UserCountOutputTypeArgs"
    ProjectSelect:
      type: object
      properties:
        id:
          type: boolean
        name:
          type: boolean
        description:
          type: boolean
        organizationId:
          type: boolean
        organization:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/OrganizationArgs"
        tests:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/TestFindManyArgs"
        createdAt:
          type: boolean
        updatedAt:
          type: boolean
        cookies:
          type: boolean
        session:
          type: boolean
        localStorage:
          type: boolean
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/ProjectCountOutputTypeArgs"
    TestSelect:
      type: object
      properties:
        id:
          type: boolean
        name:
          type: boolean
        description:
          type: boolean
        url:
          type: boolean
        naturalLanguageInput:
          type: boolean
        status:
          type: boolean
        isActive:
          type: boolean
        projectId:
          type: boolean
        project:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/ProjectArgs"
        createdById:
          type: boolean
        createdBy:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/UserArgs"
        testRuns:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/TestRunFindManyArgs"
        testShares:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/TestShareFindManyArgs"
        createdAt:
          type: boolean
        updatedAt:
          type: boolean
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/TestCountOutputTypeArgs"
    TestRunSelect:
      type: object
      properties:
        id:
          type: boolean
        status:
          type: boolean
        errorLog:
          type: boolean
        reportUrl:
          type: boolean
        testId:
          type: boolean
        test:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/TestArgs"
        executedById:
          type: boolean
        executedBy:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/UserArgs"
        testSteps:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/TestStepFindManyArgs"
        createdAt:
          type: boolean
        updatedAt:
          type: boolean
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/TestRunCountOutputTypeArgs"
    TestStepSelect:
      type: object
      properties:
        id:
          type: boolean
        order:
          type: boolean
        action:
          type: boolean
        status:
          type: boolean
        screenshotUrl:
          type: boolean
        testRunId:
          type: boolean
        testRun:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/TestRunArgs"
        createdAt:
          type: boolean
        updatedAt:
          type: boolean
    TestShareSelect:
      type: object
      properties:
        id:
          type: boolean
        permission:
          type: boolean
        testId:
          type: boolean
        test:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/TestArgs"
        userId:
          type: boolean
        user:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/UserArgs"
        createdAt:
          type: boolean
        updatedAt:
          type: boolean
    OrganizationSelect:
      type: object
      properties:
        id:
          type: boolean
        name:
          type: boolean
        pictureUrl:
          type: boolean
        stripeCustomerId:
          type: boolean
        createdAt:
          type: boolean
        updatedAt:
          type: boolean
        roles:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/OrganizationRoleFindManyArgs"
        projects:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/ProjectFindManyArgs"
        agentCredentials:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/AgentFindManyArgs"
        integration:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/IntegrationFindManyArgs"
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/OrganizationCountOutputTypeArgs"
    OrganizationRoleSelect:
      type: object
      properties:
        id:
          type: boolean
        name:
          type: boolean
        createdAt:
          type: boolean
        updatedAt:
          type: boolean
        userId:
          type: boolean
        user:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/UserArgs"
        organizationId:
          type: boolean
        organization:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/OrganizationArgs"
    AgentSelect:
      type: object
      properties:
        id:
          type: boolean
        provider:
          type: boolean
        modelType:
          type: boolean
        numAgents:
          type: boolean
        isActive:
          type: boolean
        anthropicApiKey:
          type: boolean
        awsAccessKeyId:
          type: boolean
        awsSecretAccessKey:
          type: boolean
        awsSessionToken:
          type: boolean
        awsRegion:
          type: boolean
        apiEndpoint:
          type: boolean
        apiKey:
          type: boolean
        organizationId:
          type: boolean
        organization:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/OrganizationArgs"
        createdAt:
          type: boolean
        updatedAt:
          type: boolean
    IntegrationSelect:
      type: object
      properties:
        id:
          type: boolean
        type:
          type: boolean
        name:
          type: boolean
        config:
          type: boolean
        createdAt:
          type: boolean
        updatedAt:
          type: boolean
        organizationId:
          type: boolean
        organization:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/OrganizationArgs"
    UserCountAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        name:
          type: boolean
        email:
          type: boolean
        pictureUrl:
          type: boolean
        tokenInvitation:
          type: boolean
        stripeCustomerId:
          type: boolean
        status:
          type: boolean
        globalRole:
          type: boolean
        password:
          type: boolean
        createdAt:
          type: boolean
        updatedAt:
          type: boolean
        _all:
          type: boolean
    UserMinAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        name:
          type: boolean
        email:
          type: boolean
        pictureUrl:
          type: boolean
        tokenInvitation:
          type: boolean
        stripeCustomerId:
          type: boolean
        status:
          type: boolean
        globalRole:
          type: boolean
        password:
          type: boolean
        createdAt:
          type: boolean
        updatedAt:
          type: boolean
    UserMaxAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        name:
          type: boolean
        email:
          type: boolean
        pictureUrl:
          type: boolean
        tokenInvitation:
          type: boolean
        stripeCustomerId:
          type: boolean
        status:
          type: boolean
        globalRole:
          type: boolean
        password:
          type: boolean
        createdAt:
          type: boolean
        updatedAt:
          type: boolean
    ProjectCountAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        name:
          type: boolean
        description:
          type: boolean
        organizationId:
          type: boolean
        createdAt:
          type: boolean
        updatedAt:
          type: boolean
        cookies:
          type: boolean
        session:
          type: boolean
        localStorage:
          type: boolean
        _all:
          type: boolean
    ProjectMinAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        name:
          type: boolean
        description:
          type: boolean
        organizationId:
          type: boolean
        createdAt:
          type: boolean
        updatedAt:
          type: boolean
    ProjectMaxAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        name:
          type: boolean
        description:
          type: boolean
        organizationId:
          type: boolean
        createdAt:
          type: boolean
        updatedAt:
          type: boolean
    TestCountAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        name:
          type: boolean
        description:
          type: boolean
        url:
          type: boolean
        naturalLanguageInput:
          type: boolean
        status:
          type: boolean
        isActive:
          type: boolean
        projectId:
          type: boolean
        createdById:
          type: boolean
        createdAt:
          type: boolean
        updatedAt:
          type: boolean
        _all:
          type: boolean
    TestMinAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        name:
          type: boolean
        description:
          type: boolean
        url:
          type: boolean
        naturalLanguageInput:
          type: boolean
        status:
          type: boolean
        isActive:
          type: boolean
        projectId:
          type: boolean
        createdById:
          type: boolean
        createdAt:
          type: boolean
        updatedAt:
          type: boolean
    TestMaxAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        name:
          type: boolean
        description:
          type: boolean
        url:
          type: boolean
        naturalLanguageInput:
          type: boolean
        status:
          type: boolean
        isActive:
          type: boolean
        projectId:
          type: boolean
        createdById:
          type: boolean
        createdAt:
          type: boolean
        updatedAt:
          type: boolean
    TestRunCountAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        status:
          type: boolean
        errorLog:
          type: boolean
        reportUrl:
          type: boolean
        testId:
          type: boolean
        executedById:
          type: boolean
        createdAt:
          type: boolean
        updatedAt:
          type: boolean
        _all:
          type: boolean
    TestRunMinAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        status:
          type: boolean
        errorLog:
          type: boolean
        reportUrl:
          type: boolean
        testId:
          type: boolean
        executedById:
          type: boolean
        createdAt:
          type: boolean
        updatedAt:
          type: boolean
    TestRunMaxAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        status:
          type: boolean
        errorLog:
          type: boolean
        reportUrl:
          type: boolean
        testId:
          type: boolean
        executedById:
          type: boolean
        createdAt:
          type: boolean
        updatedAt:
          type: boolean
    TestStepCountAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        order:
          type: boolean
        action:
          type: boolean
        status:
          type: boolean
        screenshotUrl:
          type: boolean
        testRunId:
          type: boolean
        createdAt:
          type: boolean
        updatedAt:
          type: boolean
        _all:
          type: boolean
    TestStepAvgAggregateInput:
      type: object
      properties:
        order:
          type: boolean
    TestStepSumAggregateInput:
      type: object
      properties:
        order:
          type: boolean
    TestStepMinAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        order:
          type: boolean
        action:
          type: boolean
        status:
          type: boolean
        screenshotUrl:
          type: boolean
        testRunId:
          type: boolean
        createdAt:
          type: boolean
        updatedAt:
          type: boolean
    TestStepMaxAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        order:
          type: boolean
        action:
          type: boolean
        status:
          type: boolean
        screenshotUrl:
          type: boolean
        testRunId:
          type: boolean
        createdAt:
          type: boolean
        updatedAt:
          type: boolean
    TestShareCountAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        permission:
          type: boolean
        testId:
          type: boolean
        userId:
          type: boolean
        createdAt:
          type: boolean
        updatedAt:
          type: boolean
        _all:
          type: boolean
    TestShareMinAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        permission:
          type: boolean
        testId:
          type: boolean
        userId:
          type: boolean
        createdAt:
          type: boolean
        updatedAt:
          type: boolean
    TestShareMaxAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        permission:
          type: boolean
        testId:
          type: boolean
        userId:
          type: boolean
        createdAt:
          type: boolean
        updatedAt:
          type: boolean
    OrganizationCountAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        name:
          type: boolean
        pictureUrl:
          type: boolean
        stripeCustomerId:
          type: boolean
        createdAt:
          type: boolean
        updatedAt:
          type: boolean
        _all:
          type: boolean
    OrganizationMinAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        name:
          type: boolean
        pictureUrl:
          type: boolean
        stripeCustomerId:
          type: boolean
        createdAt:
          type: boolean
        updatedAt:
          type: boolean
    OrganizationMaxAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        name:
          type: boolean
        pictureUrl:
          type: boolean
        stripeCustomerId:
          type: boolean
        createdAt:
          type: boolean
        updatedAt:
          type: boolean
    OrganizationRoleCountAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        name:
          type: boolean
        createdAt:
          type: boolean
        updatedAt:
          type: boolean
        userId:
          type: boolean
        organizationId:
          type: boolean
        _all:
          type: boolean
    OrganizationRoleMinAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        name:
          type: boolean
        createdAt:
          type: boolean
        updatedAt:
          type: boolean
        userId:
          type: boolean
        organizationId:
          type: boolean
    OrganizationRoleMaxAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        name:
          type: boolean
        createdAt:
          type: boolean
        updatedAt:
          type: boolean
        userId:
          type: boolean
        organizationId:
          type: boolean
    AgentCountAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        provider:
          type: boolean
        modelType:
          type: boolean
        numAgents:
          type: boolean
        isActive:
          type: boolean
        anthropicApiKey:
          type: boolean
        awsAccessKeyId:
          type: boolean
        awsSecretAccessKey:
          type: boolean
        awsSessionToken:
          type: boolean
        awsRegion:
          type: boolean
        apiEndpoint:
          type: boolean
        apiKey:
          type: boolean
        organizationId:
          type: boolean
        createdAt:
          type: boolean
        updatedAt:
          type: boolean
        _all:
          type: boolean
    AgentAvgAggregateInput:
      type: object
      properties:
        numAgents:
          type: boolean
    AgentSumAggregateInput:
      type: object
      properties:
        numAgents:
          type: boolean
    AgentMinAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        provider:
          type: boolean
        modelType:
          type: boolean
        numAgents:
          type: boolean
        isActive:
          type: boolean
        anthropicApiKey:
          type: boolean
        awsAccessKeyId:
          type: boolean
        awsSecretAccessKey:
          type: boolean
        awsSessionToken:
          type: boolean
        awsRegion:
          type: boolean
        apiEndpoint:
          type: boolean
        apiKey:
          type: boolean
        organizationId:
          type: boolean
        createdAt:
          type: boolean
        updatedAt:
          type: boolean
    AgentMaxAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        provider:
          type: boolean
        modelType:
          type: boolean
        numAgents:
          type: boolean
        isActive:
          type: boolean
        anthropicApiKey:
          type: boolean
        awsAccessKeyId:
          type: boolean
        awsSecretAccessKey:
          type: boolean
        awsSessionToken:
          type: boolean
        awsRegion:
          type: boolean
        apiEndpoint:
          type: boolean
        apiKey:
          type: boolean
        organizationId:
          type: boolean
        createdAt:
          type: boolean
        updatedAt:
          type: boolean
    IntegrationCountAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        type:
          type: boolean
        name:
          type: boolean
        config:
          type: boolean
        createdAt:
          type: boolean
        updatedAt:
          type: boolean
        organizationId:
          type: boolean
        _all:
          type: boolean
    IntegrationMinAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        type:
          type: boolean
        name:
          type: boolean
        createdAt:
          type: boolean
        updatedAt:
          type: boolean
        organizationId:
          type: boolean
    IntegrationMaxAggregateInput:
      type: object
      properties:
        id:
          type: boolean
        type:
          type: boolean
        name:
          type: boolean
        createdAt:
          type: boolean
        updatedAt:
          type: boolean
        organizationId:
          type: boolean
    AggregateUser:
      type: object
      properties:
        _count:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/UserCountAggregateOutputType"
        _min:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/UserMinAggregateOutputType"
        _max:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/UserMaxAggregateOutputType"
    UserGroupByOutputType:
      type: object
      properties:
        id:
          type: string
        name:
          oneOf:
            - type: "null"
            - type: string
        email:
          oneOf:
            - type: "null"
            - type: string
        pictureUrl:
          oneOf:
            - type: "null"
            - type: string
        tokenInvitation:
          oneOf:
            - type: "null"
            - type: string
        stripeCustomerId:
          oneOf:
            - type: "null"
            - type: string
        status:
          $ref: "#/components/schemas/UserStatus"
        globalRole:
          type: string
        password:
          oneOf:
            - type: "null"
            - type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        _count:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/UserCountAggregateOutputType"
        _min:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/UserMinAggregateOutputType"
        _max:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/UserMaxAggregateOutputType"
      required:
        - id
        - status
        - globalRole
        - createdAt
        - updatedAt
    AggregateProject:
      type: object
      properties:
        _count:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/ProjectCountAggregateOutputType"
        _min:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/ProjectMinAggregateOutputType"
        _max:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/ProjectMaxAggregateOutputType"
    ProjectGroupByOutputType:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          oneOf:
            - type: "null"
            - type: string
        organizationId:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        cookies:
          oneOf:
            - type: "null"
            - {}
        session:
          oneOf:
            - type: "null"
            - {}
        localStorage:
          oneOf:
            - type: "null"
            - {}
        _count:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/ProjectCountAggregateOutputType"
        _min:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/ProjectMinAggregateOutputType"
        _max:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/ProjectMaxAggregateOutputType"
      required:
        - id
        - name
        - organizationId
        - createdAt
        - updatedAt
    AggregateTest:
      type: object
      properties:
        _count:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/TestCountAggregateOutputType"
        _min:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/TestMinAggregateOutputType"
        _max:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/TestMaxAggregateOutputType"
    TestGroupByOutputType:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          oneOf:
            - type: "null"
            - type: string
        url:
          oneOf:
            - type: "null"
            - type: string
        naturalLanguageInput:
          oneOf:
            - type: "null"
            - type: string
        status:
          type: string
        isActive:
          type: boolean
        projectId:
          type: string
        createdById:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        _count:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/TestCountAggregateOutputType"
        _min:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/TestMinAggregateOutputType"
        _max:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/TestMaxAggregateOutputType"
      required:
        - id
        - name
        - status
        - isActive
        - projectId
        - createdById
        - createdAt
        - updatedAt
    AggregateTestRun:
      type: object
      properties:
        _count:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/TestRunCountAggregateOutputType"
        _min:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/TestRunMinAggregateOutputType"
        _max:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/TestRunMaxAggregateOutputType"
    TestRunGroupByOutputType:
      type: object
      properties:
        id:
          type: string
        status:
          type: string
        errorLog:
          oneOf:
            - type: "null"
            - type: string
        reportUrl:
          oneOf:
            - type: "null"
            - type: string
        testId:
          type: string
        executedById:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        _count:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/TestRunCountAggregateOutputType"
        _min:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/TestRunMinAggregateOutputType"
        _max:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/TestRunMaxAggregateOutputType"
      required:
        - id
        - status
        - testId
        - executedById
        - createdAt
        - updatedAt
    AggregateTestStep:
      type: object
      properties:
        _count:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/TestStepCountAggregateOutputType"
        _avg:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/TestStepAvgAggregateOutputType"
        _sum:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/TestStepSumAggregateOutputType"
        _min:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/TestStepMinAggregateOutputType"
        _max:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/TestStepMaxAggregateOutputType"
    TestStepGroupByOutputType:
      type: object
      properties:
        id:
          type: string
        order:
          type: number
        action:
          type: string
        status:
          type: string
        screenshotUrl:
          oneOf:
            - type: "null"
            - type: string
        testRunId:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        _count:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/TestStepCountAggregateOutputType"
        _avg:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/TestStepAvgAggregateOutputType"
        _sum:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/TestStepSumAggregateOutputType"
        _min:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/TestStepMinAggregateOutputType"
        _max:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/TestStepMaxAggregateOutputType"
      required:
        - id
        - order
        - action
        - status
        - testRunId
        - createdAt
        - updatedAt
    AggregateTestShare:
      type: object
      properties:
        _count:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/TestShareCountAggregateOutputType"
        _min:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/TestShareMinAggregateOutputType"
        _max:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/TestShareMaxAggregateOutputType"
    TestShareGroupByOutputType:
      type: object
      properties:
        id:
          type: string
        permission:
          type: string
        testId:
          type: string
        userId:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        _count:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/TestShareCountAggregateOutputType"
        _min:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/TestShareMinAggregateOutputType"
        _max:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/TestShareMaxAggregateOutputType"
      required:
        - id
        - permission
        - testId
        - userId
        - createdAt
        - updatedAt
    AggregateOrganization:
      type: object
      properties:
        _count:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/OrganizationCountAggregateOutputType"
        _min:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/OrganizationMinAggregateOutputType"
        _max:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/OrganizationMaxAggregateOutputType"
    OrganizationGroupByOutputType:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        pictureUrl:
          oneOf:
            - type: "null"
            - type: string
        stripeCustomerId:
          oneOf:
            - type: "null"
            - type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        _count:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/OrganizationCountAggregateOutputType"
        _min:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/OrganizationMinAggregateOutputType"
        _max:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/OrganizationMaxAggregateOutputType"
      required:
        - id
        - name
        - createdAt
        - updatedAt
    AggregateOrganizationRole:
      type: object
      properties:
        _count:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/OrganizationRoleCountAggregateOutputType"
        _min:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/OrganizationRoleMinAggregateOutputType"
        _max:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/OrganizationRoleMaxAggregateOutputType"
    OrganizationRoleGroupByOutputType:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        userId:
          type: string
        organizationId:
          type: string
        _count:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/OrganizationRoleCountAggregateOutputType"
        _min:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/OrganizationRoleMinAggregateOutputType"
        _max:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/OrganizationRoleMaxAggregateOutputType"
      required:
        - id
        - name
        - createdAt
        - updatedAt
        - userId
        - organizationId
    AggregateAgent:
      type: object
      properties:
        _count:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/AgentCountAggregateOutputType"
        _avg:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/AgentAvgAggregateOutputType"
        _sum:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/AgentSumAggregateOutputType"
        _min:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/AgentMinAggregateOutputType"
        _max:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/AgentMaxAggregateOutputType"
    AgentGroupByOutputType:
      type: object
      properties:
        id:
          type: string
        provider:
          type: string
        modelType:
          type: string
        numAgents:
          type: integer
        isActive:
          type: boolean
        anthropicApiKey:
          oneOf:
            - type: "null"
            - type: string
        awsAccessKeyId:
          oneOf:
            - type: "null"
            - type: string
        awsSecretAccessKey:
          oneOf:
            - type: "null"
            - type: string
        awsSessionToken:
          oneOf:
            - type: "null"
            - type: string
        awsRegion:
          oneOf:
            - type: "null"
            - type: string
        apiEndpoint:
          oneOf:
            - type: "null"
            - type: string
        apiKey:
          oneOf:
            - type: "null"
            - type: string
        organizationId:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        _count:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/AgentCountAggregateOutputType"
        _avg:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/AgentAvgAggregateOutputType"
        _sum:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/AgentSumAggregateOutputType"
        _min:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/AgentMinAggregateOutputType"
        _max:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/AgentMaxAggregateOutputType"
      required:
        - id
        - provider
        - modelType
        - numAgents
        - isActive
        - organizationId
        - createdAt
        - updatedAt
    AggregateIntegration:
      type: object
      properties:
        _count:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/IntegrationCountAggregateOutputType"
        _min:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/IntegrationMinAggregateOutputType"
        _max:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/IntegrationMaxAggregateOutputType"
    IntegrationGroupByOutputType:
      type: object
      properties:
        id:
          type: string
        type:
          $ref: "#/components/schemas/IntegrationType"
        name:
          type: string
        config: {}
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        organizationId:
          type: string
        _count:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/IntegrationCountAggregateOutputType"
        _min:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/IntegrationMinAggregateOutputType"
        _max:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/IntegrationMaxAggregateOutputType"
      required:
        - id
        - type
        - name
        - config
        - createdAt
        - updatedAt
        - organizationId
    UserCountAggregateOutputType:
      type: object
      properties:
        id:
          type: integer
        name:
          type: integer
        email:
          type: integer
        pictureUrl:
          type: integer
        tokenInvitation:
          type: integer
        stripeCustomerId:
          type: integer
        status:
          type: integer
        globalRole:
          type: integer
        password:
          type: integer
        createdAt:
          type: integer
        updatedAt:
          type: integer
        _all:
          type: integer
      required:
        - id
        - name
        - email
        - pictureUrl
        - tokenInvitation
        - stripeCustomerId
        - status
        - globalRole
        - password
        - createdAt
        - updatedAt
        - _all
    UserMinAggregateOutputType:
      type: object
      properties:
        id:
          oneOf:
            - type: "null"
            - type: string
        name:
          oneOf:
            - type: "null"
            - type: string
        email:
          oneOf:
            - type: "null"
            - type: string
        pictureUrl:
          oneOf:
            - type: "null"
            - type: string
        tokenInvitation:
          oneOf:
            - type: "null"
            - type: string
        stripeCustomerId:
          oneOf:
            - type: "null"
            - type: string
        status:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/UserStatus"
        globalRole:
          oneOf:
            - type: "null"
            - type: string
        password:
          oneOf:
            - type: "null"
            - type: string
        createdAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
    UserMaxAggregateOutputType:
      type: object
      properties:
        id:
          oneOf:
            - type: "null"
            - type: string
        name:
          oneOf:
            - type: "null"
            - type: string
        email:
          oneOf:
            - type: "null"
            - type: string
        pictureUrl:
          oneOf:
            - type: "null"
            - type: string
        tokenInvitation:
          oneOf:
            - type: "null"
            - type: string
        stripeCustomerId:
          oneOf:
            - type: "null"
            - type: string
        status:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/UserStatus"
        globalRole:
          oneOf:
            - type: "null"
            - type: string
        password:
          oneOf:
            - type: "null"
            - type: string
        createdAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
    ProjectCountAggregateOutputType:
      type: object
      properties:
        id:
          type: integer
        name:
          type: integer
        description:
          type: integer
        organizationId:
          type: integer
        createdAt:
          type: integer
        updatedAt:
          type: integer
        cookies:
          type: integer
        session:
          type: integer
        localStorage:
          type: integer
        _all:
          type: integer
      required:
        - id
        - name
        - description
        - organizationId
        - createdAt
        - updatedAt
        - cookies
        - session
        - localStorage
        - _all
    ProjectMinAggregateOutputType:
      type: object
      properties:
        id:
          oneOf:
            - type: "null"
            - type: string
        name:
          oneOf:
            - type: "null"
            - type: string
        description:
          oneOf:
            - type: "null"
            - type: string
        organizationId:
          oneOf:
            - type: "null"
            - type: string
        createdAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
    ProjectMaxAggregateOutputType:
      type: object
      properties:
        id:
          oneOf:
            - type: "null"
            - type: string
        name:
          oneOf:
            - type: "null"
            - type: string
        description:
          oneOf:
            - type: "null"
            - type: string
        organizationId:
          oneOf:
            - type: "null"
            - type: string
        createdAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
    TestCountAggregateOutputType:
      type: object
      properties:
        id:
          type: integer
        name:
          type: integer
        description:
          type: integer
        url:
          type: integer
        naturalLanguageInput:
          type: integer
        status:
          type: integer
        isActive:
          type: integer
        projectId:
          type: integer
        createdById:
          type: integer
        createdAt:
          type: integer
        updatedAt:
          type: integer
        _all:
          type: integer
      required:
        - id
        - name
        - description
        - url
        - naturalLanguageInput
        - status
        - isActive
        - projectId
        - createdById
        - createdAt
        - updatedAt
        - _all
    TestMinAggregateOutputType:
      type: object
      properties:
        id:
          oneOf:
            - type: "null"
            - type: string
        name:
          oneOf:
            - type: "null"
            - type: string
        description:
          oneOf:
            - type: "null"
            - type: string
        url:
          oneOf:
            - type: "null"
            - type: string
        naturalLanguageInput:
          oneOf:
            - type: "null"
            - type: string
        status:
          oneOf:
            - type: "null"
            - type: string
        isActive:
          oneOf:
            - type: "null"
            - type: boolean
        projectId:
          oneOf:
            - type: "null"
            - type: string
        createdById:
          oneOf:
            - type: "null"
            - type: string
        createdAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
    TestMaxAggregateOutputType:
      type: object
      properties:
        id:
          oneOf:
            - type: "null"
            - type: string
        name:
          oneOf:
            - type: "null"
            - type: string
        description:
          oneOf:
            - type: "null"
            - type: string
        url:
          oneOf:
            - type: "null"
            - type: string
        naturalLanguageInput:
          oneOf:
            - type: "null"
            - type: string
        status:
          oneOf:
            - type: "null"
            - type: string
        isActive:
          oneOf:
            - type: "null"
            - type: boolean
        projectId:
          oneOf:
            - type: "null"
            - type: string
        createdById:
          oneOf:
            - type: "null"
            - type: string
        createdAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
    TestRunCountAggregateOutputType:
      type: object
      properties:
        id:
          type: integer
        status:
          type: integer
        errorLog:
          type: integer
        reportUrl:
          type: integer
        testId:
          type: integer
        executedById:
          type: integer
        createdAt:
          type: integer
        updatedAt:
          type: integer
        _all:
          type: integer
      required:
        - id
        - status
        - errorLog
        - reportUrl
        - testId
        - executedById
        - createdAt
        - updatedAt
        - _all
    TestRunMinAggregateOutputType:
      type: object
      properties:
        id:
          oneOf:
            - type: "null"
            - type: string
        status:
          oneOf:
            - type: "null"
            - type: string
        errorLog:
          oneOf:
            - type: "null"
            - type: string
        reportUrl:
          oneOf:
            - type: "null"
            - type: string
        testId:
          oneOf:
            - type: "null"
            - type: string
        executedById:
          oneOf:
            - type: "null"
            - type: string
        createdAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
    TestRunMaxAggregateOutputType:
      type: object
      properties:
        id:
          oneOf:
            - type: "null"
            - type: string
        status:
          oneOf:
            - type: "null"
            - type: string
        errorLog:
          oneOf:
            - type: "null"
            - type: string
        reportUrl:
          oneOf:
            - type: "null"
            - type: string
        testId:
          oneOf:
            - type: "null"
            - type: string
        executedById:
          oneOf:
            - type: "null"
            - type: string
        createdAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
    TestStepCountAggregateOutputType:
      type: object
      properties:
        id:
          type: integer
        order:
          type: integer
        action:
          type: integer
        status:
          type: integer
        screenshotUrl:
          type: integer
        testRunId:
          type: integer
        createdAt:
          type: integer
        updatedAt:
          type: integer
        _all:
          type: integer
      required:
        - id
        - order
        - action
        - status
        - screenshotUrl
        - testRunId
        - createdAt
        - updatedAt
        - _all
    TestStepAvgAggregateOutputType:
      type: object
      properties:
        order:
          oneOf:
            - type: "null"
            - type: number
    TestStepSumAggregateOutputType:
      type: object
      properties:
        order:
          oneOf:
            - type: "null"
            - type: number
    TestStepMinAggregateOutputType:
      type: object
      properties:
        id:
          oneOf:
            - type: "null"
            - type: string
        order:
          oneOf:
            - type: "null"
            - type: number
        action:
          oneOf:
            - type: "null"
            - type: string
        status:
          oneOf:
            - type: "null"
            - type: string
        screenshotUrl:
          oneOf:
            - type: "null"
            - type: string
        testRunId:
          oneOf:
            - type: "null"
            - type: string
        createdAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
    TestStepMaxAggregateOutputType:
      type: object
      properties:
        id:
          oneOf:
            - type: "null"
            - type: string
        order:
          oneOf:
            - type: "null"
            - type: number
        action:
          oneOf:
            - type: "null"
            - type: string
        status:
          oneOf:
            - type: "null"
            - type: string
        screenshotUrl:
          oneOf:
            - type: "null"
            - type: string
        testRunId:
          oneOf:
            - type: "null"
            - type: string
        createdAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
    TestShareCountAggregateOutputType:
      type: object
      properties:
        id:
          type: integer
        permission:
          type: integer
        testId:
          type: integer
        userId:
          type: integer
        createdAt:
          type: integer
        updatedAt:
          type: integer
        _all:
          type: integer
      required:
        - id
        - permission
        - testId
        - userId
        - createdAt
        - updatedAt
        - _all
    TestShareMinAggregateOutputType:
      type: object
      properties:
        id:
          oneOf:
            - type: "null"
            - type: string
        permission:
          oneOf:
            - type: "null"
            - type: string
        testId:
          oneOf:
            - type: "null"
            - type: string
        userId:
          oneOf:
            - type: "null"
            - type: string
        createdAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
    TestShareMaxAggregateOutputType:
      type: object
      properties:
        id:
          oneOf:
            - type: "null"
            - type: string
        permission:
          oneOf:
            - type: "null"
            - type: string
        testId:
          oneOf:
            - type: "null"
            - type: string
        userId:
          oneOf:
            - type: "null"
            - type: string
        createdAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
    OrganizationCountAggregateOutputType:
      type: object
      properties:
        id:
          type: integer
        name:
          type: integer
        pictureUrl:
          type: integer
        stripeCustomerId:
          type: integer
        createdAt:
          type: integer
        updatedAt:
          type: integer
        _all:
          type: integer
      required:
        - id
        - name
        - pictureUrl
        - stripeCustomerId
        - createdAt
        - updatedAt
        - _all
    OrganizationMinAggregateOutputType:
      type: object
      properties:
        id:
          oneOf:
            - type: "null"
            - type: string
        name:
          oneOf:
            - type: "null"
            - type: string
        pictureUrl:
          oneOf:
            - type: "null"
            - type: string
        stripeCustomerId:
          oneOf:
            - type: "null"
            - type: string
        createdAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
    OrganizationMaxAggregateOutputType:
      type: object
      properties:
        id:
          oneOf:
            - type: "null"
            - type: string
        name:
          oneOf:
            - type: "null"
            - type: string
        pictureUrl:
          oneOf:
            - type: "null"
            - type: string
        stripeCustomerId:
          oneOf:
            - type: "null"
            - type: string
        createdAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
    OrganizationRoleCountAggregateOutputType:
      type: object
      properties:
        id:
          type: integer
        name:
          type: integer
        createdAt:
          type: integer
        updatedAt:
          type: integer
        userId:
          type: integer
        organizationId:
          type: integer
        _all:
          type: integer
      required:
        - id
        - name
        - createdAt
        - updatedAt
        - userId
        - organizationId
        - _all
    OrganizationRoleMinAggregateOutputType:
      type: object
      properties:
        id:
          oneOf:
            - type: "null"
            - type: string
        name:
          oneOf:
            - type: "null"
            - type: string
        createdAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        userId:
          oneOf:
            - type: "null"
            - type: string
        organizationId:
          oneOf:
            - type: "null"
            - type: string
    OrganizationRoleMaxAggregateOutputType:
      type: object
      properties:
        id:
          oneOf:
            - type: "null"
            - type: string
        name:
          oneOf:
            - type: "null"
            - type: string
        createdAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        userId:
          oneOf:
            - type: "null"
            - type: string
        organizationId:
          oneOf:
            - type: "null"
            - type: string
    AgentCountAggregateOutputType:
      type: object
      properties:
        id:
          type: integer
        provider:
          type: integer
        modelType:
          type: integer
        numAgents:
          type: integer
        isActive:
          type: integer
        anthropicApiKey:
          type: integer
        awsAccessKeyId:
          type: integer
        awsSecretAccessKey:
          type: integer
        awsSessionToken:
          type: integer
        awsRegion:
          type: integer
        apiEndpoint:
          type: integer
        apiKey:
          type: integer
        organizationId:
          type: integer
        createdAt:
          type: integer
        updatedAt:
          type: integer
        _all:
          type: integer
      required:
        - id
        - provider
        - modelType
        - numAgents
        - isActive
        - anthropicApiKey
        - awsAccessKeyId
        - awsSecretAccessKey
        - awsSessionToken
        - awsRegion
        - apiEndpoint
        - apiKey
        - organizationId
        - createdAt
        - updatedAt
        - _all
    AgentAvgAggregateOutputType:
      type: object
      properties:
        numAgents:
          oneOf:
            - type: "null"
            - type: number
    AgentSumAggregateOutputType:
      type: object
      properties:
        numAgents:
          oneOf:
            - type: "null"
            - type: integer
    AgentMinAggregateOutputType:
      type: object
      properties:
        id:
          oneOf:
            - type: "null"
            - type: string
        provider:
          oneOf:
            - type: "null"
            - type: string
        modelType:
          oneOf:
            - type: "null"
            - type: string
        numAgents:
          oneOf:
            - type: "null"
            - type: integer
        isActive:
          oneOf:
            - type: "null"
            - type: boolean
        anthropicApiKey:
          oneOf:
            - type: "null"
            - type: string
        awsAccessKeyId:
          oneOf:
            - type: "null"
            - type: string
        awsSecretAccessKey:
          oneOf:
            - type: "null"
            - type: string
        awsSessionToken:
          oneOf:
            - type: "null"
            - type: string
        awsRegion:
          oneOf:
            - type: "null"
            - type: string
        apiEndpoint:
          oneOf:
            - type: "null"
            - type: string
        apiKey:
          oneOf:
            - type: "null"
            - type: string
        organizationId:
          oneOf:
            - type: "null"
            - type: string
        createdAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
    AgentMaxAggregateOutputType:
      type: object
      properties:
        id:
          oneOf:
            - type: "null"
            - type: string
        provider:
          oneOf:
            - type: "null"
            - type: string
        modelType:
          oneOf:
            - type: "null"
            - type: string
        numAgents:
          oneOf:
            - type: "null"
            - type: integer
        isActive:
          oneOf:
            - type: "null"
            - type: boolean
        anthropicApiKey:
          oneOf:
            - type: "null"
            - type: string
        awsAccessKeyId:
          oneOf:
            - type: "null"
            - type: string
        awsSecretAccessKey:
          oneOf:
            - type: "null"
            - type: string
        awsSessionToken:
          oneOf:
            - type: "null"
            - type: string
        awsRegion:
          oneOf:
            - type: "null"
            - type: string
        apiEndpoint:
          oneOf:
            - type: "null"
            - type: string
        apiKey:
          oneOf:
            - type: "null"
            - type: string
        organizationId:
          oneOf:
            - type: "null"
            - type: string
        createdAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
    IntegrationCountAggregateOutputType:
      type: object
      properties:
        id:
          type: integer
        type:
          type: integer
        name:
          type: integer
        config:
          type: integer
        createdAt:
          type: integer
        updatedAt:
          type: integer
        organizationId:
          type: integer
        _all:
          type: integer
      required:
        - id
        - type
        - name
        - config
        - createdAt
        - updatedAt
        - organizationId
        - _all
    IntegrationMinAggregateOutputType:
      type: object
      properties:
        id:
          oneOf:
            - type: "null"
            - type: string
        type:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/IntegrationType"
        name:
          oneOf:
            - type: "null"
            - type: string
        createdAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        organizationId:
          oneOf:
            - type: "null"
            - type: string
    IntegrationMaxAggregateOutputType:
      type: object
      properties:
        id:
          oneOf:
            - type: "null"
            - type: string
        type:
          oneOf:
            - type: "null"
            - $ref: "#/components/schemas/IntegrationType"
        name:
          oneOf:
            - type: "null"
            - type: string
        createdAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        updatedAt:
          oneOf:
            - type: "null"
            - type: string
              format: date-time
        organizationId:
          oneOf:
            - type: "null"
            - type: string
    _Meta:
      type: object
      description: Meta information about the request or response
      properties:
        serialization:
          description: Serialization metadata
      additionalProperties: true
    _Error:
      type: object
      required:
        - error
      properties:
        error:
          type: object
          required:
            - message
          properties:
            prisma:
              type: boolean
              description: Indicates if the error occurred during a Prisma call
            rejectedByPolicy:
              type: boolean
              description: Indicates if the error was due to rejection by a policy
            code:
              type: string
              description: Prisma error code. Only available when "prisma" field is true.
            message:
              type: string
              description: Error message
            reason:
              type: string
              description: Detailed error reason
            zodErrors:
              type: object
              additionalProperties: true
              description: Zod validation errors if the error is due to data validation
                failure
          additionalProperties: true
    BatchPayload:
      type: object
      properties:
        count:
          type: integer
    UserCreateArgs:
      type: object
      required:
        - data
      properties:
        select:
          $ref: "#/components/schemas/UserSelect"
        include:
          $ref: "#/components/schemas/UserInclude"
        data:
          $ref: "#/components/schemas/UserCreateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    UserCreateManyArgs:
      type: object
      required:
        - data
      properties:
        data:
          oneOf:
            - $ref: "#/components/schemas/UserCreateManyInput"
            - type: array
              items:
                $ref: "#/components/schemas/UserCreateManyInput"
        skipDuplicates:
          type: boolean
          description: Do not insert records with unique fields or ID fields that already
            exist.
        meta:
          $ref: "#/components/schemas/_Meta"
    UserFindUniqueArgs:
      type: object
      required:
        - where
      properties:
        select:
          $ref: "#/components/schemas/UserSelect"
        include:
          $ref: "#/components/schemas/UserInclude"
        where:
          $ref: "#/components/schemas/UserWhereUniqueInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    UserFindFirstArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/UserSelect"
        include:
          $ref: "#/components/schemas/UserInclude"
        where:
          $ref: "#/components/schemas/UserWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    UserFindManyArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/UserSelect"
        include:
          $ref: "#/components/schemas/UserInclude"
        where:
          $ref: "#/components/schemas/UserWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    UserUpdateArgs:
      type: object
      required:
        - where
        - data
      properties:
        select:
          $ref: "#/components/schemas/UserSelect"
        include:
          $ref: "#/components/schemas/UserInclude"
        where:
          $ref: "#/components/schemas/UserWhereUniqueInput"
        data:
          $ref: "#/components/schemas/UserUpdateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    UserUpdateManyArgs:
      type: object
      required:
        - data
      properties:
        where:
          $ref: "#/components/schemas/UserWhereInput"
        data:
          $ref: "#/components/schemas/UserUpdateManyMutationInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    UserUpsertArgs:
      type: object
      required:
        - create
        - update
        - where
      properties:
        select:
          $ref: "#/components/schemas/UserSelect"
        include:
          $ref: "#/components/schemas/UserInclude"
        where:
          $ref: "#/components/schemas/UserWhereUniqueInput"
        create:
          $ref: "#/components/schemas/UserCreateInput"
        update:
          $ref: "#/components/schemas/UserUpdateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    UserDeleteUniqueArgs:
      type: object
      required:
        - where
      properties:
        select:
          $ref: "#/components/schemas/UserSelect"
        include:
          $ref: "#/components/schemas/UserInclude"
        where:
          $ref: "#/components/schemas/UserWhereUniqueInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    UserDeleteManyArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/UserWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    UserCountArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/UserSelect"
        where:
          $ref: "#/components/schemas/UserWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    UserAggregateArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/UserWhereInput"
        orderBy:
          $ref: "#/components/schemas/UserOrderByWithRelationInput"
        cursor:
          $ref: "#/components/schemas/UserWhereUniqueInput"
        take:
          type: integer
        skip:
          type: integer
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/UserCountAggregateInput"
        _min:
          $ref: "#/components/schemas/UserMinAggregateInput"
        _max:
          $ref: "#/components/schemas/UserMaxAggregateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    UserGroupByArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/UserWhereInput"
        orderBy:
          $ref: "#/components/schemas/UserOrderByWithRelationInput"
        by:
          $ref: "#/components/schemas/UserScalarFieldEnum"
        having:
          $ref: "#/components/schemas/UserScalarWhereWithAggregatesInput"
        take:
          type: integer
        skip:
          type: integer
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/UserCountAggregateInput"
        _min:
          $ref: "#/components/schemas/UserMinAggregateInput"
        _max:
          $ref: "#/components/schemas/UserMaxAggregateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    ProjectCreateArgs:
      type: object
      required:
        - data
      properties:
        select:
          $ref: "#/components/schemas/ProjectSelect"
        include:
          $ref: "#/components/schemas/ProjectInclude"
        data:
          $ref: "#/components/schemas/ProjectCreateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    ProjectCreateManyArgs:
      type: object
      required:
        - data
      properties:
        data:
          oneOf:
            - $ref: "#/components/schemas/ProjectCreateManyInput"
            - type: array
              items:
                $ref: "#/components/schemas/ProjectCreateManyInput"
        skipDuplicates:
          type: boolean
          description: Do not insert records with unique fields or ID fields that already
            exist.
        meta:
          $ref: "#/components/schemas/_Meta"
    ProjectFindUniqueArgs:
      type: object
      required:
        - where
      properties:
        select:
          $ref: "#/components/schemas/ProjectSelect"
        include:
          $ref: "#/components/schemas/ProjectInclude"
        where:
          $ref: "#/components/schemas/ProjectWhereUniqueInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    ProjectFindFirstArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/ProjectSelect"
        include:
          $ref: "#/components/schemas/ProjectInclude"
        where:
          $ref: "#/components/schemas/ProjectWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    ProjectFindManyArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/ProjectSelect"
        include:
          $ref: "#/components/schemas/ProjectInclude"
        where:
          $ref: "#/components/schemas/ProjectWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    ProjectUpdateArgs:
      type: object
      required:
        - where
        - data
      properties:
        select:
          $ref: "#/components/schemas/ProjectSelect"
        include:
          $ref: "#/components/schemas/ProjectInclude"
        where:
          $ref: "#/components/schemas/ProjectWhereUniqueInput"
        data:
          $ref: "#/components/schemas/ProjectUpdateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    ProjectUpdateManyArgs:
      type: object
      required:
        - data
      properties:
        where:
          $ref: "#/components/schemas/ProjectWhereInput"
        data:
          $ref: "#/components/schemas/ProjectUpdateManyMutationInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    ProjectUpsertArgs:
      type: object
      required:
        - create
        - update
        - where
      properties:
        select:
          $ref: "#/components/schemas/ProjectSelect"
        include:
          $ref: "#/components/schemas/ProjectInclude"
        where:
          $ref: "#/components/schemas/ProjectWhereUniqueInput"
        create:
          $ref: "#/components/schemas/ProjectCreateInput"
        update:
          $ref: "#/components/schemas/ProjectUpdateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    ProjectDeleteUniqueArgs:
      type: object
      required:
        - where
      properties:
        select:
          $ref: "#/components/schemas/ProjectSelect"
        include:
          $ref: "#/components/schemas/ProjectInclude"
        where:
          $ref: "#/components/schemas/ProjectWhereUniqueInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    ProjectDeleteManyArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/ProjectWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    ProjectCountArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/ProjectSelect"
        where:
          $ref: "#/components/schemas/ProjectWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    ProjectAggregateArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/ProjectWhereInput"
        orderBy:
          $ref: "#/components/schemas/ProjectOrderByWithRelationInput"
        cursor:
          $ref: "#/components/schemas/ProjectWhereUniqueInput"
        take:
          type: integer
        skip:
          type: integer
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/ProjectCountAggregateInput"
        _min:
          $ref: "#/components/schemas/ProjectMinAggregateInput"
        _max:
          $ref: "#/components/schemas/ProjectMaxAggregateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    ProjectGroupByArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/ProjectWhereInput"
        orderBy:
          $ref: "#/components/schemas/ProjectOrderByWithRelationInput"
        by:
          $ref: "#/components/schemas/ProjectScalarFieldEnum"
        having:
          $ref: "#/components/schemas/ProjectScalarWhereWithAggregatesInput"
        take:
          type: integer
        skip:
          type: integer
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/ProjectCountAggregateInput"
        _min:
          $ref: "#/components/schemas/ProjectMinAggregateInput"
        _max:
          $ref: "#/components/schemas/ProjectMaxAggregateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    TestCreateArgs:
      type: object
      required:
        - data
      properties:
        select:
          $ref: "#/components/schemas/TestSelect"
        include:
          $ref: "#/components/schemas/TestInclude"
        data:
          $ref: "#/components/schemas/TestCreateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    TestCreateManyArgs:
      type: object
      required:
        - data
      properties:
        data:
          oneOf:
            - $ref: "#/components/schemas/TestCreateManyInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestCreateManyInput"
        skipDuplicates:
          type: boolean
          description: Do not insert records with unique fields or ID fields that already
            exist.
        meta:
          $ref: "#/components/schemas/_Meta"
    TestFindUniqueArgs:
      type: object
      required:
        - where
      properties:
        select:
          $ref: "#/components/schemas/TestSelect"
        include:
          $ref: "#/components/schemas/TestInclude"
        where:
          $ref: "#/components/schemas/TestWhereUniqueInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    TestFindFirstArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/TestSelect"
        include:
          $ref: "#/components/schemas/TestInclude"
        where:
          $ref: "#/components/schemas/TestWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    TestFindManyArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/TestSelect"
        include:
          $ref: "#/components/schemas/TestInclude"
        where:
          $ref: "#/components/schemas/TestWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    TestUpdateArgs:
      type: object
      required:
        - where
        - data
      properties:
        select:
          $ref: "#/components/schemas/TestSelect"
        include:
          $ref: "#/components/schemas/TestInclude"
        where:
          $ref: "#/components/schemas/TestWhereUniqueInput"
        data:
          $ref: "#/components/schemas/TestUpdateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    TestUpdateManyArgs:
      type: object
      required:
        - data
      properties:
        where:
          $ref: "#/components/schemas/TestWhereInput"
        data:
          $ref: "#/components/schemas/TestUpdateManyMutationInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    TestUpsertArgs:
      type: object
      required:
        - create
        - update
        - where
      properties:
        select:
          $ref: "#/components/schemas/TestSelect"
        include:
          $ref: "#/components/schemas/TestInclude"
        where:
          $ref: "#/components/schemas/TestWhereUniqueInput"
        create:
          $ref: "#/components/schemas/TestCreateInput"
        update:
          $ref: "#/components/schemas/TestUpdateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    TestDeleteUniqueArgs:
      type: object
      required:
        - where
      properties:
        select:
          $ref: "#/components/schemas/TestSelect"
        include:
          $ref: "#/components/schemas/TestInclude"
        where:
          $ref: "#/components/schemas/TestWhereUniqueInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    TestDeleteManyArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/TestWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    TestCountArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/TestSelect"
        where:
          $ref: "#/components/schemas/TestWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    TestAggregateArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/TestWhereInput"
        orderBy:
          $ref: "#/components/schemas/TestOrderByWithRelationInput"
        cursor:
          $ref: "#/components/schemas/TestWhereUniqueInput"
        take:
          type: integer
        skip:
          type: integer
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/TestCountAggregateInput"
        _min:
          $ref: "#/components/schemas/TestMinAggregateInput"
        _max:
          $ref: "#/components/schemas/TestMaxAggregateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    TestGroupByArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/TestWhereInput"
        orderBy:
          $ref: "#/components/schemas/TestOrderByWithRelationInput"
        by:
          $ref: "#/components/schemas/TestScalarFieldEnum"
        having:
          $ref: "#/components/schemas/TestScalarWhereWithAggregatesInput"
        take:
          type: integer
        skip:
          type: integer
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/TestCountAggregateInput"
        _min:
          $ref: "#/components/schemas/TestMinAggregateInput"
        _max:
          $ref: "#/components/schemas/TestMaxAggregateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    TestRunCreateArgs:
      type: object
      required:
        - data
      properties:
        select:
          $ref: "#/components/schemas/TestRunSelect"
        include:
          $ref: "#/components/schemas/TestRunInclude"
        data:
          $ref: "#/components/schemas/TestRunCreateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    TestRunCreateManyArgs:
      type: object
      required:
        - data
      properties:
        data:
          oneOf:
            - $ref: "#/components/schemas/TestRunCreateManyInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestRunCreateManyInput"
        skipDuplicates:
          type: boolean
          description: Do not insert records with unique fields or ID fields that already
            exist.
        meta:
          $ref: "#/components/schemas/_Meta"
    TestRunFindUniqueArgs:
      type: object
      required:
        - where
      properties:
        select:
          $ref: "#/components/schemas/TestRunSelect"
        include:
          $ref: "#/components/schemas/TestRunInclude"
        where:
          $ref: "#/components/schemas/TestRunWhereUniqueInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    TestRunFindFirstArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/TestRunSelect"
        include:
          $ref: "#/components/schemas/TestRunInclude"
        where:
          $ref: "#/components/schemas/TestRunWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    TestRunFindManyArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/TestRunSelect"
        include:
          $ref: "#/components/schemas/TestRunInclude"
        where:
          $ref: "#/components/schemas/TestRunWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    TestRunUpdateArgs:
      type: object
      required:
        - where
        - data
      properties:
        select:
          $ref: "#/components/schemas/TestRunSelect"
        include:
          $ref: "#/components/schemas/TestRunInclude"
        where:
          $ref: "#/components/schemas/TestRunWhereUniqueInput"
        data:
          $ref: "#/components/schemas/TestRunUpdateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    TestRunUpdateManyArgs:
      type: object
      required:
        - data
      properties:
        where:
          $ref: "#/components/schemas/TestRunWhereInput"
        data:
          $ref: "#/components/schemas/TestRunUpdateManyMutationInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    TestRunUpsertArgs:
      type: object
      required:
        - create
        - update
        - where
      properties:
        select:
          $ref: "#/components/schemas/TestRunSelect"
        include:
          $ref: "#/components/schemas/TestRunInclude"
        where:
          $ref: "#/components/schemas/TestRunWhereUniqueInput"
        create:
          $ref: "#/components/schemas/TestRunCreateInput"
        update:
          $ref: "#/components/schemas/TestRunUpdateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    TestRunDeleteUniqueArgs:
      type: object
      required:
        - where
      properties:
        select:
          $ref: "#/components/schemas/TestRunSelect"
        include:
          $ref: "#/components/schemas/TestRunInclude"
        where:
          $ref: "#/components/schemas/TestRunWhereUniqueInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    TestRunDeleteManyArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/TestRunWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    TestRunCountArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/TestRunSelect"
        where:
          $ref: "#/components/schemas/TestRunWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    TestRunAggregateArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/TestRunWhereInput"
        orderBy:
          $ref: "#/components/schemas/TestRunOrderByWithRelationInput"
        cursor:
          $ref: "#/components/schemas/TestRunWhereUniqueInput"
        take:
          type: integer
        skip:
          type: integer
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/TestRunCountAggregateInput"
        _min:
          $ref: "#/components/schemas/TestRunMinAggregateInput"
        _max:
          $ref: "#/components/schemas/TestRunMaxAggregateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    TestRunGroupByArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/TestRunWhereInput"
        orderBy:
          $ref: "#/components/schemas/TestRunOrderByWithRelationInput"
        by:
          $ref: "#/components/schemas/TestRunScalarFieldEnum"
        having:
          $ref: "#/components/schemas/TestRunScalarWhereWithAggregatesInput"
        take:
          type: integer
        skip:
          type: integer
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/TestRunCountAggregateInput"
        _min:
          $ref: "#/components/schemas/TestRunMinAggregateInput"
        _max:
          $ref: "#/components/schemas/TestRunMaxAggregateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    TestStepCreateArgs:
      type: object
      required:
        - data
      properties:
        select:
          $ref: "#/components/schemas/TestStepSelect"
        include:
          $ref: "#/components/schemas/TestStepInclude"
        data:
          $ref: "#/components/schemas/TestStepCreateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    TestStepCreateManyArgs:
      type: object
      required:
        - data
      properties:
        data:
          oneOf:
            - $ref: "#/components/schemas/TestStepCreateManyInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestStepCreateManyInput"
        skipDuplicates:
          type: boolean
          description: Do not insert records with unique fields or ID fields that already
            exist.
        meta:
          $ref: "#/components/schemas/_Meta"
    TestStepFindUniqueArgs:
      type: object
      required:
        - where
      properties:
        select:
          $ref: "#/components/schemas/TestStepSelect"
        include:
          $ref: "#/components/schemas/TestStepInclude"
        where:
          $ref: "#/components/schemas/TestStepWhereUniqueInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    TestStepFindFirstArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/TestStepSelect"
        include:
          $ref: "#/components/schemas/TestStepInclude"
        where:
          $ref: "#/components/schemas/TestStepWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    TestStepFindManyArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/TestStepSelect"
        include:
          $ref: "#/components/schemas/TestStepInclude"
        where:
          $ref: "#/components/schemas/TestStepWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    TestStepUpdateArgs:
      type: object
      required:
        - where
        - data
      properties:
        select:
          $ref: "#/components/schemas/TestStepSelect"
        include:
          $ref: "#/components/schemas/TestStepInclude"
        where:
          $ref: "#/components/schemas/TestStepWhereUniqueInput"
        data:
          $ref: "#/components/schemas/TestStepUpdateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    TestStepUpdateManyArgs:
      type: object
      required:
        - data
      properties:
        where:
          $ref: "#/components/schemas/TestStepWhereInput"
        data:
          $ref: "#/components/schemas/TestStepUpdateManyMutationInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    TestStepUpsertArgs:
      type: object
      required:
        - create
        - update
        - where
      properties:
        select:
          $ref: "#/components/schemas/TestStepSelect"
        include:
          $ref: "#/components/schemas/TestStepInclude"
        where:
          $ref: "#/components/schemas/TestStepWhereUniqueInput"
        create:
          $ref: "#/components/schemas/TestStepCreateInput"
        update:
          $ref: "#/components/schemas/TestStepUpdateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    TestStepDeleteUniqueArgs:
      type: object
      required:
        - where
      properties:
        select:
          $ref: "#/components/schemas/TestStepSelect"
        include:
          $ref: "#/components/schemas/TestStepInclude"
        where:
          $ref: "#/components/schemas/TestStepWhereUniqueInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    TestStepDeleteManyArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/TestStepWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    TestStepCountArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/TestStepSelect"
        where:
          $ref: "#/components/schemas/TestStepWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    TestStepAggregateArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/TestStepWhereInput"
        orderBy:
          $ref: "#/components/schemas/TestStepOrderByWithRelationInput"
        cursor:
          $ref: "#/components/schemas/TestStepWhereUniqueInput"
        take:
          type: integer
        skip:
          type: integer
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/TestStepCountAggregateInput"
        _min:
          $ref: "#/components/schemas/TestStepMinAggregateInput"
        _max:
          $ref: "#/components/schemas/TestStepMaxAggregateInput"
        _sum:
          $ref: "#/components/schemas/TestStepSumAggregateInput"
        _avg:
          $ref: "#/components/schemas/TestStepAvgAggregateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    TestStepGroupByArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/TestStepWhereInput"
        orderBy:
          $ref: "#/components/schemas/TestStepOrderByWithRelationInput"
        by:
          $ref: "#/components/schemas/TestStepScalarFieldEnum"
        having:
          $ref: "#/components/schemas/TestStepScalarWhereWithAggregatesInput"
        take:
          type: integer
        skip:
          type: integer
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/TestStepCountAggregateInput"
        _min:
          $ref: "#/components/schemas/TestStepMinAggregateInput"
        _max:
          $ref: "#/components/schemas/TestStepMaxAggregateInput"
        _sum:
          $ref: "#/components/schemas/TestStepSumAggregateInput"
        _avg:
          $ref: "#/components/schemas/TestStepAvgAggregateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    TestShareCreateArgs:
      type: object
      required:
        - data
      properties:
        select:
          $ref: "#/components/schemas/TestShareSelect"
        include:
          $ref: "#/components/schemas/TestShareInclude"
        data:
          $ref: "#/components/schemas/TestShareCreateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    TestShareCreateManyArgs:
      type: object
      required:
        - data
      properties:
        data:
          oneOf:
            - $ref: "#/components/schemas/TestShareCreateManyInput"
            - type: array
              items:
                $ref: "#/components/schemas/TestShareCreateManyInput"
        skipDuplicates:
          type: boolean
          description: Do not insert records with unique fields or ID fields that already
            exist.
        meta:
          $ref: "#/components/schemas/_Meta"
    TestShareFindUniqueArgs:
      type: object
      required:
        - where
      properties:
        select:
          $ref: "#/components/schemas/TestShareSelect"
        include:
          $ref: "#/components/schemas/TestShareInclude"
        where:
          $ref: "#/components/schemas/TestShareWhereUniqueInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    TestShareFindFirstArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/TestShareSelect"
        include:
          $ref: "#/components/schemas/TestShareInclude"
        where:
          $ref: "#/components/schemas/TestShareWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    TestShareFindManyArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/TestShareSelect"
        include:
          $ref: "#/components/schemas/TestShareInclude"
        where:
          $ref: "#/components/schemas/TestShareWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    TestShareUpdateArgs:
      type: object
      required:
        - where
        - data
      properties:
        select:
          $ref: "#/components/schemas/TestShareSelect"
        include:
          $ref: "#/components/schemas/TestShareInclude"
        where:
          $ref: "#/components/schemas/TestShareWhereUniqueInput"
        data:
          $ref: "#/components/schemas/TestShareUpdateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    TestShareUpdateManyArgs:
      type: object
      required:
        - data
      properties:
        where:
          $ref: "#/components/schemas/TestShareWhereInput"
        data:
          $ref: "#/components/schemas/TestShareUpdateManyMutationInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    TestShareUpsertArgs:
      type: object
      required:
        - create
        - update
        - where
      properties:
        select:
          $ref: "#/components/schemas/TestShareSelect"
        include:
          $ref: "#/components/schemas/TestShareInclude"
        where:
          $ref: "#/components/schemas/TestShareWhereUniqueInput"
        create:
          $ref: "#/components/schemas/TestShareCreateInput"
        update:
          $ref: "#/components/schemas/TestShareUpdateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    TestShareDeleteUniqueArgs:
      type: object
      required:
        - where
      properties:
        select:
          $ref: "#/components/schemas/TestShareSelect"
        include:
          $ref: "#/components/schemas/TestShareInclude"
        where:
          $ref: "#/components/schemas/TestShareWhereUniqueInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    TestShareDeleteManyArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/TestShareWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    TestShareCountArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/TestShareSelect"
        where:
          $ref: "#/components/schemas/TestShareWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    TestShareAggregateArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/TestShareWhereInput"
        orderBy:
          $ref: "#/components/schemas/TestShareOrderByWithRelationInput"
        cursor:
          $ref: "#/components/schemas/TestShareWhereUniqueInput"
        take:
          type: integer
        skip:
          type: integer
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/TestShareCountAggregateInput"
        _min:
          $ref: "#/components/schemas/TestShareMinAggregateInput"
        _max:
          $ref: "#/components/schemas/TestShareMaxAggregateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    TestShareGroupByArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/TestShareWhereInput"
        orderBy:
          $ref: "#/components/schemas/TestShareOrderByWithRelationInput"
        by:
          $ref: "#/components/schemas/TestShareScalarFieldEnum"
        having:
          $ref: "#/components/schemas/TestShareScalarWhereWithAggregatesInput"
        take:
          type: integer
        skip:
          type: integer
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/TestShareCountAggregateInput"
        _min:
          $ref: "#/components/schemas/TestShareMinAggregateInput"
        _max:
          $ref: "#/components/schemas/TestShareMaxAggregateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    OrganizationCreateArgs:
      type: object
      required:
        - data
      properties:
        select:
          $ref: "#/components/schemas/OrganizationSelect"
        include:
          $ref: "#/components/schemas/OrganizationInclude"
        data:
          $ref: "#/components/schemas/OrganizationCreateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    OrganizationCreateManyArgs:
      type: object
      required:
        - data
      properties:
        data:
          oneOf:
            - $ref: "#/components/schemas/OrganizationCreateManyInput"
            - type: array
              items:
                $ref: "#/components/schemas/OrganizationCreateManyInput"
        skipDuplicates:
          type: boolean
          description: Do not insert records with unique fields or ID fields that already
            exist.
        meta:
          $ref: "#/components/schemas/_Meta"
    OrganizationFindUniqueArgs:
      type: object
      required:
        - where
      properties:
        select:
          $ref: "#/components/schemas/OrganizationSelect"
        include:
          $ref: "#/components/schemas/OrganizationInclude"
        where:
          $ref: "#/components/schemas/OrganizationWhereUniqueInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    OrganizationFindFirstArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/OrganizationSelect"
        include:
          $ref: "#/components/schemas/OrganizationInclude"
        where:
          $ref: "#/components/schemas/OrganizationWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    OrganizationFindManyArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/OrganizationSelect"
        include:
          $ref: "#/components/schemas/OrganizationInclude"
        where:
          $ref: "#/components/schemas/OrganizationWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    OrganizationUpdateArgs:
      type: object
      required:
        - where
        - data
      properties:
        select:
          $ref: "#/components/schemas/OrganizationSelect"
        include:
          $ref: "#/components/schemas/OrganizationInclude"
        where:
          $ref: "#/components/schemas/OrganizationWhereUniqueInput"
        data:
          $ref: "#/components/schemas/OrganizationUpdateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    OrganizationUpdateManyArgs:
      type: object
      required:
        - data
      properties:
        where:
          $ref: "#/components/schemas/OrganizationWhereInput"
        data:
          $ref: "#/components/schemas/OrganizationUpdateManyMutationInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    OrganizationUpsertArgs:
      type: object
      required:
        - create
        - update
        - where
      properties:
        select:
          $ref: "#/components/schemas/OrganizationSelect"
        include:
          $ref: "#/components/schemas/OrganizationInclude"
        where:
          $ref: "#/components/schemas/OrganizationWhereUniqueInput"
        create:
          $ref: "#/components/schemas/OrganizationCreateInput"
        update:
          $ref: "#/components/schemas/OrganizationUpdateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    OrganizationDeleteUniqueArgs:
      type: object
      required:
        - where
      properties:
        select:
          $ref: "#/components/schemas/OrganizationSelect"
        include:
          $ref: "#/components/schemas/OrganizationInclude"
        where:
          $ref: "#/components/schemas/OrganizationWhereUniqueInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    OrganizationDeleteManyArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/OrganizationWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    OrganizationCountArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/OrganizationSelect"
        where:
          $ref: "#/components/schemas/OrganizationWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    OrganizationAggregateArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/OrganizationWhereInput"
        orderBy:
          $ref: "#/components/schemas/OrganizationOrderByWithRelationInput"
        cursor:
          $ref: "#/components/schemas/OrganizationWhereUniqueInput"
        take:
          type: integer
        skip:
          type: integer
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/OrganizationCountAggregateInput"
        _min:
          $ref: "#/components/schemas/OrganizationMinAggregateInput"
        _max:
          $ref: "#/components/schemas/OrganizationMaxAggregateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    OrganizationGroupByArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/OrganizationWhereInput"
        orderBy:
          $ref: "#/components/schemas/OrganizationOrderByWithRelationInput"
        by:
          $ref: "#/components/schemas/OrganizationScalarFieldEnum"
        having:
          $ref: "#/components/schemas/OrganizationScalarWhereWithAggregatesInput"
        take:
          type: integer
        skip:
          type: integer
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/OrganizationCountAggregateInput"
        _min:
          $ref: "#/components/schemas/OrganizationMinAggregateInput"
        _max:
          $ref: "#/components/schemas/OrganizationMaxAggregateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    OrganizationRoleCreateArgs:
      type: object
      required:
        - data
      properties:
        select:
          $ref: "#/components/schemas/OrganizationRoleSelect"
        include:
          $ref: "#/components/schemas/OrganizationRoleInclude"
        data:
          $ref: "#/components/schemas/OrganizationRoleCreateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    OrganizationRoleCreateManyArgs:
      type: object
      required:
        - data
      properties:
        data:
          oneOf:
            - $ref: "#/components/schemas/OrganizationRoleCreateManyInput"
            - type: array
              items:
                $ref: "#/components/schemas/OrganizationRoleCreateManyInput"
        skipDuplicates:
          type: boolean
          description: Do not insert records with unique fields or ID fields that already
            exist.
        meta:
          $ref: "#/components/schemas/_Meta"
    OrganizationRoleFindUniqueArgs:
      type: object
      required:
        - where
      properties:
        select:
          $ref: "#/components/schemas/OrganizationRoleSelect"
        include:
          $ref: "#/components/schemas/OrganizationRoleInclude"
        where:
          $ref: "#/components/schemas/OrganizationRoleWhereUniqueInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    OrganizationRoleFindFirstArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/OrganizationRoleSelect"
        include:
          $ref: "#/components/schemas/OrganizationRoleInclude"
        where:
          $ref: "#/components/schemas/OrganizationRoleWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    OrganizationRoleFindManyArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/OrganizationRoleSelect"
        include:
          $ref: "#/components/schemas/OrganizationRoleInclude"
        where:
          $ref: "#/components/schemas/OrganizationRoleWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    OrganizationRoleUpdateArgs:
      type: object
      required:
        - where
        - data
      properties:
        select:
          $ref: "#/components/schemas/OrganizationRoleSelect"
        include:
          $ref: "#/components/schemas/OrganizationRoleInclude"
        where:
          $ref: "#/components/schemas/OrganizationRoleWhereUniqueInput"
        data:
          $ref: "#/components/schemas/OrganizationRoleUpdateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    OrganizationRoleUpdateManyArgs:
      type: object
      required:
        - data
      properties:
        where:
          $ref: "#/components/schemas/OrganizationRoleWhereInput"
        data:
          $ref: "#/components/schemas/OrganizationRoleUpdateManyMutationInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    OrganizationRoleUpsertArgs:
      type: object
      required:
        - create
        - update
        - where
      properties:
        select:
          $ref: "#/components/schemas/OrganizationRoleSelect"
        include:
          $ref: "#/components/schemas/OrganizationRoleInclude"
        where:
          $ref: "#/components/schemas/OrganizationRoleWhereUniqueInput"
        create:
          $ref: "#/components/schemas/OrganizationRoleCreateInput"
        update:
          $ref: "#/components/schemas/OrganizationRoleUpdateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    OrganizationRoleDeleteUniqueArgs:
      type: object
      required:
        - where
      properties:
        select:
          $ref: "#/components/schemas/OrganizationRoleSelect"
        include:
          $ref: "#/components/schemas/OrganizationRoleInclude"
        where:
          $ref: "#/components/schemas/OrganizationRoleWhereUniqueInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    OrganizationRoleDeleteManyArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/OrganizationRoleWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    OrganizationRoleCountArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/OrganizationRoleSelect"
        where:
          $ref: "#/components/schemas/OrganizationRoleWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    OrganizationRoleAggregateArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/OrganizationRoleWhereInput"
        orderBy:
          $ref: "#/components/schemas/OrganizationRoleOrderByWithRelationInput"
        cursor:
          $ref: "#/components/schemas/OrganizationRoleWhereUniqueInput"
        take:
          type: integer
        skip:
          type: integer
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/OrganizationRoleCountAggregateInput"
        _min:
          $ref: "#/components/schemas/OrganizationRoleMinAggregateInput"
        _max:
          $ref: "#/components/schemas/OrganizationRoleMaxAggregateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    OrganizationRoleGroupByArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/OrganizationRoleWhereInput"
        orderBy:
          $ref: "#/components/schemas/OrganizationRoleOrderByWithRelationInput"
        by:
          $ref: "#/components/schemas/OrganizationRoleScalarFieldEnum"
        having:
          $ref: "#/components/schemas/OrganizationRoleScalarWhereWithAggregatesInput"
        take:
          type: integer
        skip:
          type: integer
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/OrganizationRoleCountAggregateInput"
        _min:
          $ref: "#/components/schemas/OrganizationRoleMinAggregateInput"
        _max:
          $ref: "#/components/schemas/OrganizationRoleMaxAggregateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    AgentCreateArgs:
      type: object
      required:
        - data
      properties:
        select:
          $ref: "#/components/schemas/AgentSelect"
        include:
          $ref: "#/components/schemas/AgentInclude"
        data:
          $ref: "#/components/schemas/AgentCreateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    AgentCreateManyArgs:
      type: object
      required:
        - data
      properties:
        data:
          oneOf:
            - $ref: "#/components/schemas/AgentCreateManyInput"
            - type: array
              items:
                $ref: "#/components/schemas/AgentCreateManyInput"
        skipDuplicates:
          type: boolean
          description: Do not insert records with unique fields or ID fields that already
            exist.
        meta:
          $ref: "#/components/schemas/_Meta"
    AgentFindUniqueArgs:
      type: object
      required:
        - where
      properties:
        select:
          $ref: "#/components/schemas/AgentSelect"
        include:
          $ref: "#/components/schemas/AgentInclude"
        where:
          $ref: "#/components/schemas/AgentWhereUniqueInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    AgentFindFirstArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/AgentSelect"
        include:
          $ref: "#/components/schemas/AgentInclude"
        where:
          $ref: "#/components/schemas/AgentWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    AgentFindManyArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/AgentSelect"
        include:
          $ref: "#/components/schemas/AgentInclude"
        where:
          $ref: "#/components/schemas/AgentWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    AgentUpdateArgs:
      type: object
      required:
        - where
        - data
      properties:
        select:
          $ref: "#/components/schemas/AgentSelect"
        include:
          $ref: "#/components/schemas/AgentInclude"
        where:
          $ref: "#/components/schemas/AgentWhereUniqueInput"
        data:
          $ref: "#/components/schemas/AgentUpdateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    AgentUpdateManyArgs:
      type: object
      required:
        - data
      properties:
        where:
          $ref: "#/components/schemas/AgentWhereInput"
        data:
          $ref: "#/components/schemas/AgentUpdateManyMutationInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    AgentUpsertArgs:
      type: object
      required:
        - create
        - update
        - where
      properties:
        select:
          $ref: "#/components/schemas/AgentSelect"
        include:
          $ref: "#/components/schemas/AgentInclude"
        where:
          $ref: "#/components/schemas/AgentWhereUniqueInput"
        create:
          $ref: "#/components/schemas/AgentCreateInput"
        update:
          $ref: "#/components/schemas/AgentUpdateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    AgentDeleteUniqueArgs:
      type: object
      required:
        - where
      properties:
        select:
          $ref: "#/components/schemas/AgentSelect"
        include:
          $ref: "#/components/schemas/AgentInclude"
        where:
          $ref: "#/components/schemas/AgentWhereUniqueInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    AgentDeleteManyArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/AgentWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    AgentCountArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/AgentSelect"
        where:
          $ref: "#/components/schemas/AgentWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    AgentAggregateArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/AgentWhereInput"
        orderBy:
          $ref: "#/components/schemas/AgentOrderByWithRelationInput"
        cursor:
          $ref: "#/components/schemas/AgentWhereUniqueInput"
        take:
          type: integer
        skip:
          type: integer
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/AgentCountAggregateInput"
        _min:
          $ref: "#/components/schemas/AgentMinAggregateInput"
        _max:
          $ref: "#/components/schemas/AgentMaxAggregateInput"
        _sum:
          $ref: "#/components/schemas/AgentSumAggregateInput"
        _avg:
          $ref: "#/components/schemas/AgentAvgAggregateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    AgentGroupByArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/AgentWhereInput"
        orderBy:
          $ref: "#/components/schemas/AgentOrderByWithRelationInput"
        by:
          $ref: "#/components/schemas/AgentScalarFieldEnum"
        having:
          $ref: "#/components/schemas/AgentScalarWhereWithAggregatesInput"
        take:
          type: integer
        skip:
          type: integer
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/AgentCountAggregateInput"
        _min:
          $ref: "#/components/schemas/AgentMinAggregateInput"
        _max:
          $ref: "#/components/schemas/AgentMaxAggregateInput"
        _sum:
          $ref: "#/components/schemas/AgentSumAggregateInput"
        _avg:
          $ref: "#/components/schemas/AgentAvgAggregateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    IntegrationCreateArgs:
      type: object
      required:
        - data
      properties:
        select:
          $ref: "#/components/schemas/IntegrationSelect"
        include:
          $ref: "#/components/schemas/IntegrationInclude"
        data:
          $ref: "#/components/schemas/IntegrationCreateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    IntegrationCreateManyArgs:
      type: object
      required:
        - data
      properties:
        data:
          oneOf:
            - $ref: "#/components/schemas/IntegrationCreateManyInput"
            - type: array
              items:
                $ref: "#/components/schemas/IntegrationCreateManyInput"
        skipDuplicates:
          type: boolean
          description: Do not insert records with unique fields or ID fields that already
            exist.
        meta:
          $ref: "#/components/schemas/_Meta"
    IntegrationFindUniqueArgs:
      type: object
      required:
        - where
      properties:
        select:
          $ref: "#/components/schemas/IntegrationSelect"
        include:
          $ref: "#/components/schemas/IntegrationInclude"
        where:
          $ref: "#/components/schemas/IntegrationWhereUniqueInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    IntegrationFindFirstArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/IntegrationSelect"
        include:
          $ref: "#/components/schemas/IntegrationInclude"
        where:
          $ref: "#/components/schemas/IntegrationWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    IntegrationFindManyArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/IntegrationSelect"
        include:
          $ref: "#/components/schemas/IntegrationInclude"
        where:
          $ref: "#/components/schemas/IntegrationWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    IntegrationUpdateArgs:
      type: object
      required:
        - where
        - data
      properties:
        select:
          $ref: "#/components/schemas/IntegrationSelect"
        include:
          $ref: "#/components/schemas/IntegrationInclude"
        where:
          $ref: "#/components/schemas/IntegrationWhereUniqueInput"
        data:
          $ref: "#/components/schemas/IntegrationUpdateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    IntegrationUpdateManyArgs:
      type: object
      required:
        - data
      properties:
        where:
          $ref: "#/components/schemas/IntegrationWhereInput"
        data:
          $ref: "#/components/schemas/IntegrationUpdateManyMutationInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    IntegrationUpsertArgs:
      type: object
      required:
        - create
        - update
        - where
      properties:
        select:
          $ref: "#/components/schemas/IntegrationSelect"
        include:
          $ref: "#/components/schemas/IntegrationInclude"
        where:
          $ref: "#/components/schemas/IntegrationWhereUniqueInput"
        create:
          $ref: "#/components/schemas/IntegrationCreateInput"
        update:
          $ref: "#/components/schemas/IntegrationUpdateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    IntegrationDeleteUniqueArgs:
      type: object
      required:
        - where
      properties:
        select:
          $ref: "#/components/schemas/IntegrationSelect"
        include:
          $ref: "#/components/schemas/IntegrationInclude"
        where:
          $ref: "#/components/schemas/IntegrationWhereUniqueInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    IntegrationDeleteManyArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/IntegrationWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    IntegrationCountArgs:
      type: object
      properties:
        select:
          $ref: "#/components/schemas/IntegrationSelect"
        where:
          $ref: "#/components/schemas/IntegrationWhereInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    IntegrationAggregateArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/IntegrationWhereInput"
        orderBy:
          $ref: "#/components/schemas/IntegrationOrderByWithRelationInput"
        cursor:
          $ref: "#/components/schemas/IntegrationWhereUniqueInput"
        take:
          type: integer
        skip:
          type: integer
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/IntegrationCountAggregateInput"
        _min:
          $ref: "#/components/schemas/IntegrationMinAggregateInput"
        _max:
          $ref: "#/components/schemas/IntegrationMaxAggregateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
    IntegrationGroupByArgs:
      type: object
      properties:
        where:
          $ref: "#/components/schemas/IntegrationWhereInput"
        orderBy:
          $ref: "#/components/schemas/IntegrationOrderByWithRelationInput"
        by:
          $ref: "#/components/schemas/IntegrationScalarFieldEnum"
        having:
          $ref: "#/components/schemas/IntegrationScalarWhereWithAggregatesInput"
        take:
          type: integer
        skip:
          type: integer
        _count:
          oneOf:
            - type: boolean
            - $ref: "#/components/schemas/IntegrationCountAggregateInput"
        _min:
          $ref: "#/components/schemas/IntegrationMinAggregateInput"
        _max:
          $ref: "#/components/schemas/IntegrationMaxAggregateInput"
        meta:
          $ref: "#/components/schemas/_Meta"
  securitySchemes:
    CookieAuth:
      type: apiKey
      in: cookie
      name: IRIS_ACCESS_TOKEN
paths:
  /user/create:
    post:
      operationId: createUser
      description: Create a new User
      tags:
        - user
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/User"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserCreateArgs"
  /user/createMany:
    post:
      operationId: createManyUser
      description: Create several User
      tags:
        - user
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserCreateManyArgs"
  /user/findUnique:
    get:
      operationId: findUniqueUser
      description: Find one unique User
      tags:
        - user
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/User"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserFindUniqueArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /user/findFirst:
    get:
      operationId: findFirstUser
      description: Find the first User matching the given condition
      tags:
        - user
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/User"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserFindFirstArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /user/findMany:
    get:
      operationId: findManyUser
      description: Find a list of User
      tags:
        - user
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/User"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserFindManyArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /user/update:
    patch:
      operationId: updateUser
      description: Update a User
      tags:
        - user
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/User"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserUpdateArgs"
  /user/updateMany:
    patch:
      operationId: updateManyUser
      description: Update Users matching the given condition
      tags:
        - user
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserUpdateManyArgs"
  /user/upsert:
    post:
      operationId: upsertUser
      description: Upsert a User
      tags:
        - user
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/User"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserUpsertArgs"
  /user/delete:
    delete:
      operationId: deleteUser
      description: Delete one unique User
      tags:
        - user
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/User"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserDeleteUniqueArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /user/deleteMany:
    delete:
      operationId: deleteManyUser
      description: Delete Users matching the given condition
      tags:
        - user
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserDeleteManyArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /user/count:
    get:
      operationId: countUser
      description: Find a list of User
      tags:
        - user
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    oneOf:
                      - type: integer
                      - $ref: "#/components/schemas/UserCountAggregateOutputType"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserCountArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /user/aggregate:
    get:
      operationId: aggregateUser
      description: Aggregate Users
      tags:
        - user
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/AggregateUser"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserAggregateArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /user/groupBy:
    get:
      operationId: groupByUser
      description: Group Users by fields
      tags:
        - user
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/UserGroupByOutputType"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserGroupByArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /project/create:
    post:
      operationId: createProject
      description: Create a new Project
      tags:
        - project
      security: []
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Project"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProjectCreateArgs"
  /project/createMany:
    post:
      operationId: createManyProject
      description: Create several Project
      tags:
        - project
      security: []
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProjectCreateManyArgs"
  /project/findUnique:
    get:
      operationId: findUniqueProject
      description: Find one unique Project
      tags:
        - project
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Project"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProjectFindUniqueArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /project/findFirst:
    get:
      operationId: findFirstProject
      description: Find the first Project matching the given condition
      tags:
        - project
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Project"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProjectFindFirstArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /project/findMany:
    get:
      operationId: findManyProject
      description: Find a list of Project
      tags:
        - project
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Project"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProjectFindManyArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /project/update:
    patch:
      operationId: updateProject
      description: Update a Project
      tags:
        - project
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Project"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProjectUpdateArgs"
  /project/updateMany:
    patch:
      operationId: updateManyProject
      description: Update Projects matching the given condition
      tags:
        - project
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProjectUpdateManyArgs"
  /project/upsert:
    post:
      operationId: upsertProject
      description: Upsert a Project
      tags:
        - project
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Project"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProjectUpsertArgs"
  /project/delete:
    delete:
      operationId: deleteProject
      description: Delete one unique Project
      tags:
        - project
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Project"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProjectDeleteUniqueArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /project/deleteMany:
    delete:
      operationId: deleteManyProject
      description: Delete Projects matching the given condition
      tags:
        - project
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProjectDeleteManyArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /project/count:
    get:
      operationId: countProject
      description: Find a list of Project
      tags:
        - project
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    oneOf:
                      - type: integer
                      - $ref: "#/components/schemas/ProjectCountAggregateOutputType"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProjectCountArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /project/aggregate:
    get:
      operationId: aggregateProject
      description: Aggregate Projects
      tags:
        - project
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/AggregateProject"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProjectAggregateArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /project/groupBy:
    get:
      operationId: groupByProject
      description: Group Projects by fields
      tags:
        - project
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/ProjectGroupByOutputType"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProjectGroupByArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /test/create:
    post:
      operationId: createTest
      description: Create a new Test
      tags:
        - test
      security: []
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Test"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TestCreateArgs"
  /test/createMany:
    post:
      operationId: createManyTest
      description: Create several Test
      tags:
        - test
      security: []
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TestCreateManyArgs"
  /test/findUnique:
    get:
      operationId: findUniqueTest
      description: Find one unique Test
      tags:
        - test
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Test"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TestFindUniqueArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /test/findFirst:
    get:
      operationId: findFirstTest
      description: Find the first Test matching the given condition
      tags:
        - test
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Test"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TestFindFirstArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /test/findMany:
    get:
      operationId: findManyTest
      description: Find a list of Test
      tags:
        - test
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Test"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TestFindManyArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /test/update:
    patch:
      operationId: updateTest
      description: Update a Test
      tags:
        - test
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Test"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TestUpdateArgs"
  /test/updateMany:
    patch:
      operationId: updateManyTest
      description: Update Tests matching the given condition
      tags:
        - test
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TestUpdateManyArgs"
  /test/upsert:
    post:
      operationId: upsertTest
      description: Upsert a Test
      tags:
        - test
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Test"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TestUpsertArgs"
  /test/delete:
    delete:
      operationId: deleteTest
      description: Delete one unique Test
      tags:
        - test
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Test"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TestDeleteUniqueArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /test/deleteMany:
    delete:
      operationId: deleteManyTest
      description: Delete Tests matching the given condition
      tags:
        - test
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TestDeleteManyArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /test/count:
    get:
      operationId: countTest
      description: Find a list of Test
      tags:
        - test
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    oneOf:
                      - type: integer
                      - $ref: "#/components/schemas/TestCountAggregateOutputType"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TestCountArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /test/aggregate:
    get:
      operationId: aggregateTest
      description: Aggregate Tests
      tags:
        - test
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/AggregateTest"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TestAggregateArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /test/groupBy:
    get:
      operationId: groupByTest
      description: Group Tests by fields
      tags:
        - test
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/TestGroupByOutputType"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TestGroupByArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /testRun/create:
    post:
      operationId: createTestRun
      description: Create a new TestRun
      tags:
        - testRun
      security: []
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/TestRun"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TestRunCreateArgs"
  /testRun/createMany:
    post:
      operationId: createManyTestRun
      description: Create several TestRun
      tags:
        - testRun
      security: []
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TestRunCreateManyArgs"
  /testRun/findUnique:
    get:
      operationId: findUniqueTestRun
      description: Find one unique TestRun
      tags:
        - testRun
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/TestRun"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TestRunFindUniqueArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /testRun/findFirst:
    get:
      operationId: findFirstTestRun
      description: Find the first TestRun matching the given condition
      tags:
        - testRun
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/TestRun"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TestRunFindFirstArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /testRun/findMany:
    get:
      operationId: findManyTestRun
      description: Find a list of TestRun
      tags:
        - testRun
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/TestRun"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TestRunFindManyArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /testRun/update:
    patch:
      operationId: updateTestRun
      description: Update a TestRun
      tags:
        - testRun
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/TestRun"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TestRunUpdateArgs"
  /testRun/updateMany:
    patch:
      operationId: updateManyTestRun
      description: Update TestRuns matching the given condition
      tags:
        - testRun
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TestRunUpdateManyArgs"
  /testRun/upsert:
    post:
      operationId: upsertTestRun
      description: Upsert a TestRun
      tags:
        - testRun
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/TestRun"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TestRunUpsertArgs"
  /testRun/delete:
    delete:
      operationId: deleteTestRun
      description: Delete one unique TestRun
      tags:
        - testRun
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/TestRun"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TestRunDeleteUniqueArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /testRun/deleteMany:
    delete:
      operationId: deleteManyTestRun
      description: Delete TestRuns matching the given condition
      tags:
        - testRun
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TestRunDeleteManyArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /testRun/count:
    get:
      operationId: countTestRun
      description: Find a list of TestRun
      tags:
        - testRun
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    oneOf:
                      - type: integer
                      - $ref: "#/components/schemas/TestRunCountAggregateOutputType"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TestRunCountArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /testRun/aggregate:
    get:
      operationId: aggregateTestRun
      description: Aggregate TestRuns
      tags:
        - testRun
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/AggregateTestRun"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TestRunAggregateArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /testRun/groupBy:
    get:
      operationId: groupByTestRun
      description: Group TestRuns by fields
      tags:
        - testRun
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/TestRunGroupByOutputType"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TestRunGroupByArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /testStep/create:
    post:
      operationId: createTestStep
      description: Create a new TestStep
      tags:
        - testStep
      security: []
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/TestStep"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TestStepCreateArgs"
  /testStep/createMany:
    post:
      operationId: createManyTestStep
      description: Create several TestStep
      tags:
        - testStep
      security: []
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TestStepCreateManyArgs"
  /testStep/findUnique:
    get:
      operationId: findUniqueTestStep
      description: Find one unique TestStep
      tags:
        - testStep
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/TestStep"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TestStepFindUniqueArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /testStep/findFirst:
    get:
      operationId: findFirstTestStep
      description: Find the first TestStep matching the given condition
      tags:
        - testStep
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/TestStep"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TestStepFindFirstArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /testStep/findMany:
    get:
      operationId: findManyTestStep
      description: Find a list of TestStep
      tags:
        - testStep
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/TestStep"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TestStepFindManyArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /testStep/update:
    patch:
      operationId: updateTestStep
      description: Update a TestStep
      tags:
        - testStep
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/TestStep"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TestStepUpdateArgs"
  /testStep/updateMany:
    patch:
      operationId: updateManyTestStep
      description: Update TestSteps matching the given condition
      tags:
        - testStep
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TestStepUpdateManyArgs"
  /testStep/upsert:
    post:
      operationId: upsertTestStep
      description: Upsert a TestStep
      tags:
        - testStep
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/TestStep"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TestStepUpsertArgs"
  /testStep/delete:
    delete:
      operationId: deleteTestStep
      description: Delete one unique TestStep
      tags:
        - testStep
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/TestStep"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TestStepDeleteUniqueArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /testStep/deleteMany:
    delete:
      operationId: deleteManyTestStep
      description: Delete TestSteps matching the given condition
      tags:
        - testStep
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TestStepDeleteManyArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /testStep/count:
    get:
      operationId: countTestStep
      description: Find a list of TestStep
      tags:
        - testStep
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    oneOf:
                      - type: integer
                      - $ref: "#/components/schemas/TestStepCountAggregateOutputType"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TestStepCountArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /testStep/aggregate:
    get:
      operationId: aggregateTestStep
      description: Aggregate TestSteps
      tags:
        - testStep
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/AggregateTestStep"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TestStepAggregateArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /testStep/groupBy:
    get:
      operationId: groupByTestStep
      description: Group TestSteps by fields
      tags:
        - testStep
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/TestStepGroupByOutputType"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TestStepGroupByArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /testShare/create:
    post:
      operationId: createTestShare
      description: Create a new TestShare
      tags:
        - testShare
      security: []
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/TestShare"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TestShareCreateArgs"
  /testShare/createMany:
    post:
      operationId: createManyTestShare
      description: Create several TestShare
      tags:
        - testShare
      security: []
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TestShareCreateManyArgs"
  /testShare/findUnique:
    get:
      operationId: findUniqueTestShare
      description: Find one unique TestShare
      tags:
        - testShare
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/TestShare"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TestShareFindUniqueArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /testShare/findFirst:
    get:
      operationId: findFirstTestShare
      description: Find the first TestShare matching the given condition
      tags:
        - testShare
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/TestShare"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TestShareFindFirstArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /testShare/findMany:
    get:
      operationId: findManyTestShare
      description: Find a list of TestShare
      tags:
        - testShare
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/TestShare"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TestShareFindManyArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /testShare/update:
    patch:
      operationId: updateTestShare
      description: Update a TestShare
      tags:
        - testShare
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/TestShare"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TestShareUpdateArgs"
  /testShare/updateMany:
    patch:
      operationId: updateManyTestShare
      description: Update TestShares matching the given condition
      tags:
        - testShare
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TestShareUpdateManyArgs"
  /testShare/upsert:
    post:
      operationId: upsertTestShare
      description: Upsert a TestShare
      tags:
        - testShare
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/TestShare"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TestShareUpsertArgs"
  /testShare/delete:
    delete:
      operationId: deleteTestShare
      description: Delete one unique TestShare
      tags:
        - testShare
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/TestShare"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TestShareDeleteUniqueArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /testShare/deleteMany:
    delete:
      operationId: deleteManyTestShare
      description: Delete TestShares matching the given condition
      tags:
        - testShare
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TestShareDeleteManyArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /testShare/count:
    get:
      operationId: countTestShare
      description: Find a list of TestShare
      tags:
        - testShare
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    oneOf:
                      - type: integer
                      - $ref: "#/components/schemas/TestShareCountAggregateOutputType"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TestShareCountArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /testShare/aggregate:
    get:
      operationId: aggregateTestShare
      description: Aggregate TestShares
      tags:
        - testShare
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/AggregateTestShare"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TestShareAggregateArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /testShare/groupBy:
    get:
      operationId: groupByTestShare
      description: Group TestShares by fields
      tags:
        - testShare
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/TestShareGroupByOutputType"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TestShareGroupByArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /organization/create:
    post:
      operationId: createOrganization
      description: Create a new Organization
      tags:
        - organization
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Organization"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrganizationCreateArgs"
  /organization/createMany:
    post:
      operationId: createManyOrganization
      description: Create several Organization
      tags:
        - organization
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrganizationCreateManyArgs"
  /organization/findUnique:
    get:
      operationId: findUniqueOrganization
      description: Find one unique Organization
      tags:
        - organization
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Organization"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrganizationFindUniqueArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /organization/findFirst:
    get:
      operationId: findFirstOrganization
      description: Find the first Organization matching the given condition
      tags:
        - organization
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Organization"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrganizationFindFirstArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /organization/findMany:
    get:
      operationId: findManyOrganization
      description: Find a list of Organization
      tags:
        - organization
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Organization"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrganizationFindManyArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /organization/update:
    patch:
      operationId: updateOrganization
      description: Update a Organization
      tags:
        - organization
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Organization"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrganizationUpdateArgs"
  /organization/updateMany:
    patch:
      operationId: updateManyOrganization
      description: Update Organizations matching the given condition
      tags:
        - organization
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrganizationUpdateManyArgs"
  /organization/upsert:
    post:
      operationId: upsertOrganization
      description: Upsert a Organization
      tags:
        - organization
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Organization"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrganizationUpsertArgs"
  /organization/delete:
    delete:
      operationId: deleteOrganization
      description: Delete one unique Organization
      tags:
        - organization
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Organization"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrganizationDeleteUniqueArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /organization/deleteMany:
    delete:
      operationId: deleteManyOrganization
      description: Delete Organizations matching the given condition
      tags:
        - organization
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrganizationDeleteManyArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /organization/count:
    get:
      operationId: countOrganization
      description: Find a list of Organization
      tags:
        - organization
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    oneOf:
                      - type: integer
                      - $ref: "#/components/schemas/OrganizationCountAggregateOutputType"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrganizationCountArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /organization/aggregate:
    get:
      operationId: aggregateOrganization
      description: Aggregate Organizations
      tags:
        - organization
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/AggregateOrganization"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrganizationAggregateArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /organization/groupBy:
    get:
      operationId: groupByOrganization
      description: Group Organizations by fields
      tags:
        - organization
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/OrganizationGroupByOutputType"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrganizationGroupByArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /organizationRole/create:
    post:
      operationId: createOrganizationRole
      description: Create a new OrganizationRole
      tags:
        - organizationRole
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/OrganizationRole"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrganizationRoleCreateArgs"
  /organizationRole/createMany:
    post:
      operationId: createManyOrganizationRole
      description: Create several OrganizationRole
      tags:
        - organizationRole
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrganizationRoleCreateManyArgs"
  /organizationRole/findUnique:
    get:
      operationId: findUniqueOrganizationRole
      description: Find one unique OrganizationRole
      tags:
        - organizationRole
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/OrganizationRole"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrganizationRoleFindUniqueArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /organizationRole/findFirst:
    get:
      operationId: findFirstOrganizationRole
      description: Find the first OrganizationRole matching the given condition
      tags:
        - organizationRole
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/OrganizationRole"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrganizationRoleFindFirstArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /organizationRole/findMany:
    get:
      operationId: findManyOrganizationRole
      description: Find a list of OrganizationRole
      tags:
        - organizationRole
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/OrganizationRole"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrganizationRoleFindManyArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /organizationRole/update:
    patch:
      operationId: updateOrganizationRole
      description: Update a OrganizationRole
      tags:
        - organizationRole
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/OrganizationRole"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrganizationRoleUpdateArgs"
  /organizationRole/updateMany:
    patch:
      operationId: updateManyOrganizationRole
      description: Update OrganizationRoles matching the given condition
      tags:
        - organizationRole
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrganizationRoleUpdateManyArgs"
  /organizationRole/upsert:
    post:
      operationId: upsertOrganizationRole
      description: Upsert a OrganizationRole
      tags:
        - organizationRole
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/OrganizationRole"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrganizationRoleUpsertArgs"
  /organizationRole/delete:
    delete:
      operationId: deleteOrganizationRole
      description: Delete one unique OrganizationRole
      tags:
        - organizationRole
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/OrganizationRole"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrganizationRoleDeleteUniqueArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /organizationRole/deleteMany:
    delete:
      operationId: deleteManyOrganizationRole
      description: Delete OrganizationRoles matching the given condition
      tags:
        - organizationRole
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrganizationRoleDeleteManyArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /organizationRole/count:
    get:
      operationId: countOrganizationRole
      description: Find a list of OrganizationRole
      tags:
        - organizationRole
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    oneOf:
                      - type: integer
                      - $ref: "#/components/schemas/OrganizationRoleCountAggregateOutputType"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrganizationRoleCountArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /organizationRole/aggregate:
    get:
      operationId: aggregateOrganizationRole
      description: Aggregate OrganizationRoles
      tags:
        - organizationRole
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/AggregateOrganizationRole"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrganizationRoleAggregateArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /organizationRole/groupBy:
    get:
      operationId: groupByOrganizationRole
      description: Group OrganizationRoles by fields
      tags:
        - organizationRole
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/OrganizationRoleGroupByOutputType"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrganizationRoleGroupByArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /agent/create:
    post:
      operationId: createAgent
      description: Create a new Agent
      tags:
        - agent
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Agent"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AgentCreateArgs"
  /agent/createMany:
    post:
      operationId: createManyAgent
      description: Create several Agent
      tags:
        - agent
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AgentCreateManyArgs"
  /agent/findUnique:
    get:
      operationId: findUniqueAgent
      description: Find one unique Agent
      tags:
        - agent
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Agent"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AgentFindUniqueArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /agent/findFirst:
    get:
      operationId: findFirstAgent
      description: Find the first Agent matching the given condition
      tags:
        - agent
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Agent"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AgentFindFirstArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /agent/findMany:
    get:
      operationId: findManyAgent
      description: Find a list of Agent
      tags:
        - agent
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Agent"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AgentFindManyArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /agent/update:
    patch:
      operationId: updateAgent
      description: Update a Agent
      tags:
        - agent
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Agent"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AgentUpdateArgs"
  /agent/updateMany:
    patch:
      operationId: updateManyAgent
      description: Update Agents matching the given condition
      tags:
        - agent
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AgentUpdateManyArgs"
  /agent/upsert:
    post:
      operationId: upsertAgent
      description: Upsert a Agent
      tags:
        - agent
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Agent"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AgentUpsertArgs"
  /agent/delete:
    delete:
      operationId: deleteAgent
      description: Delete one unique Agent
      tags:
        - agent
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Agent"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AgentDeleteUniqueArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /agent/deleteMany:
    delete:
      operationId: deleteManyAgent
      description: Delete Agents matching the given condition
      tags:
        - agent
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AgentDeleteManyArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /agent/count:
    get:
      operationId: countAgent
      description: Find a list of Agent
      tags:
        - agent
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    oneOf:
                      - type: integer
                      - $ref: "#/components/schemas/AgentCountAggregateOutputType"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AgentCountArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /agent/aggregate:
    get:
      operationId: aggregateAgent
      description: Aggregate Agents
      tags:
        - agent
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/AggregateAgent"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AgentAggregateArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /agent/groupBy:
    get:
      operationId: groupByAgent
      description: Group Agents by fields
      tags:
        - agent
      security: []
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/AgentGroupByOutputType"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AgentGroupByArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /integration/create:
    post:
      operationId: createIntegration
      description: Create a new Integration
      tags:
        - integration
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Integration"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/IntegrationCreateArgs"
  /integration/createMany:
    post:
      operationId: createManyIntegration
      description: Create several Integration
      tags:
        - integration
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/IntegrationCreateManyArgs"
  /integration/findUnique:
    get:
      operationId: findUniqueIntegration
      description: Find one unique Integration
      tags:
        - integration
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Integration"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IntegrationFindUniqueArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /integration/findFirst:
    get:
      operationId: findFirstIntegration
      description: Find the first Integration matching the given condition
      tags:
        - integration
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Integration"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IntegrationFindFirstArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /integration/findMany:
    get:
      operationId: findManyIntegration
      description: Find a list of Integration
      tags:
        - integration
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Integration"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IntegrationFindManyArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /integration/update:
    patch:
      operationId: updateIntegration
      description: Update a Integration
      tags:
        - integration
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Integration"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/IntegrationUpdateArgs"
  /integration/updateMany:
    patch:
      operationId: updateManyIntegration
      description: Update Integrations matching the given condition
      tags:
        - integration
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/IntegrationUpdateManyArgs"
  /integration/upsert:
    post:
      operationId: upsertIntegration
      description: Upsert a Integration
      tags:
        - integration
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Integration"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/IntegrationUpsertArgs"
  /integration/delete:
    delete:
      operationId: deleteIntegration
      description: Delete one unique Integration
      tags:
        - integration
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Integration"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IntegrationDeleteUniqueArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /integration/deleteMany:
    delete:
      operationId: deleteManyIntegration
      description: Delete Integrations matching the given condition
      tags:
        - integration
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/BatchPayload"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IntegrationDeleteManyArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /integration/count:
    get:
      operationId: countIntegration
      description: Find a list of Integration
      tags:
        - integration
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    oneOf:
                      - type: integer
                      - $ref: "#/components/schemas/IntegrationCountAggregateOutputType"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IntegrationCountArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /integration/aggregate:
    get:
      operationId: aggregateIntegration
      description: Aggregate Integrations
      tags:
        - integration
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/AggregateIntegration"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IntegrationAggregateArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
  /integration/groupBy:
    get:
      operationId: groupByIntegration
      description: Group Integrations by fields
      tags:
        - integration
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/IntegrationGroupByOutputType"
                    description: The Prisma response data serialized with superjson
                  meta:
                    $ref: "#/components/schemas/_Meta"
                    description: The superjson serialization metadata for the "data" field
        "400":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Invalid request
        "403":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is forbidden
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/_Error"
          description: Request is unprocessable due to validation errors
      parameters:
        - name: q
          in: query
          required: true
          description: Superjson-serialized Prisma query object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IntegrationGroupByArgs"
        - name: meta
          in: query
          description: Superjson serialization metadata for parameter "q"
          content:
            application/json:
              schema: {}
security:
  - CookieAuth: []
